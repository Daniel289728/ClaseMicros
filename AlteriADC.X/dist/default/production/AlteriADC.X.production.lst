

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 15 21:59:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     _ADRESL	set	4035
    78  0000                     _ADRESH	set	4036
    79  0000                     _ADCON0bits	set	4034
    80  0000                     _ADCON2	set	4032
    81  0000                     _ADCON1	set	4033
    82  0000                     _ADCON0	set	4034
    83  0000                     _LATBbits	set	3978
    84  0000                     _LATDbits	set	3980
    85  0000                     _TRISBbits	set	3987
    86  0000                     _TRISDbits	set	3989
    87  0000                     _TRISEbits	set	3990
    88  0000                     _TRISD	set	3989
    89  0000                     _PORTD	set	3971
    90  0000                     _LATEbits	set	3981
    91                           
    92                           	psect	smallconst
    93  001004                     __psmallconst:
    94                           	opt callstack 0
    95  001004  00                 	db	0
    96  001005                     STR_2:
    97  001005  43                 	db	67	;'C'
    98  001006  6F                 	db	111	;'o'
    99  001007  6E                 	db	110	;'n'
   100  001008  76                 	db	118	;'v'
   101  001009  65                 	db	101	;'e'
   102  00100A  72                 	db	114	;'r'
   103  00100B  74                 	db	116	;'t'
   104  00100C  69                 	db	105	;'i'
   105  00100D  64                 	db	100	;'d'
   106  00100E  6F                 	db	111	;'o'
   107  00100F  72                 	db	114	;'r'
   108  001010  20                 	db	32
   109  001011  41                 	db	65	;'A'
   110  001012  44                 	db	68	;'D'
   111  001013  3A                 	db	58	;':'
   112  001014  00                 	db	0
   113  001015                     STR_1:
   114  001015  25                 	db	37
   115  001016  30                 	db	48	;'0'
   116  001017  34                 	db	52	;'4'
   117  001018  75                 	db	117	;'u'
   118  001019  00                 	db	0
   119                           
   120                           ; #config settings
   121  00101A  00                 	db	0	; dummy byte at the end
   122  0000                     
   123                           	psect	cinit
   124  0070A8                     __pcinit:
   125                           	opt callstack 0
   126  0070A8                     start_initialization:
   127                           	opt callstack 0
   128  0070A8                     __initialization:
   129                           	opt callstack 0
   130                           
   131                           ; Clear objects allocated to BANK0 (45 bytes)
   132  0070A8  EE00  F060         	lfsr	0,__pbssBANK0
   133  0070AC  0E2D               	movlw	45
   134  0070AE                     clear_0:
   135  0070AE  6AEE               	clrf	postinc0,c
   136  0070B0  06E8               	decf	wreg,f,c
   137  0070B2  E1FD               	bnz	clear_0
   138  0070B4                     end_of_initialization:
   139                           	opt callstack 0
   140  0070B4                     __end_of__initialization:
   141                           	opt callstack 0
   142  0070B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   143  0070B6  6EF8               	movwf	tblptru,c
   144  0070B8  0100               	movlb	0
   145  0070BA  EF28  F03A         	goto	_main	;jump to C main() function
   146                           
   147                           	psect	bssBANK0
   148  000060                     __pbssBANK0:
   149                           	opt callstack 0
   150  000060                     _nout:
   151                           	opt callstack 0
   152  000060                     	ds	2
   153  000062                     _width:
   154                           	opt callstack 0
   155  000062                     	ds	2
   156  000064                     _prec:
   157                           	opt callstack 0
   158  000064                     	ds	2
   159  000066                     _flags:
   160                           	opt callstack 0
   161  000066                     	ds	2
   162  000068                     _dbuf:
   163                           	opt callstack 0
   164  000068                     	ds	32
   165  000088                     _strResultado:
   166                           	opt callstack 0
   167  000088                     	ds	5
   168                           
   169                           	psect	cstackBANK0
   170  00008D                     __pcstackBANK0:
   171                           	opt callstack 0
   172  00008D                     	ds	2
   173  00008F                     sprintf@ap:
   174                           	opt callstack 0
   175                           
   176                           ; 2 bytes @ 0x2
   177  00008F                     	ds	2
   178  000091                     sprintf@f:
   179                           	opt callstack 0
   180                           
   181                           ; 6 bytes @ 0x4
   182  000091                     	ds	6
   183                           
   184                           	psect	cstackCOMRAM
   185  000001                     __pcstackCOMRAM:
   186                           	opt callstack 0
   187  000001                     ?_strlen:
   188                           	opt callstack 0
   189  000001                     ?_isdigit:
   190                           	opt callstack 0
   191  000001                     ?_isspace:
   192                           	opt callstack 0
   193  000001                     ?___wmul:
   194                           	opt callstack 0
   195  000001                     ?___lodiv:
   196                           	opt callstack 0
   197  000001                     ?___lomod:
   198                           	opt callstack 0
   199  000001                     SetDDRamAddr@DDaddr:
   200                           	opt callstack 0
   201  000001                     WriteCmdXLCD@cmd:
   202                           	opt callstack 0
   203  000001                     WriteDataXLCD@data:
   204                           	opt callstack 0
   205  000001                     ChecarLEDs@res:
   206                           	opt callstack 0
   207  000001                     ___wmul@multiplier:
   208                           	opt callstack 0
   209  000001                     isdigit@c:
   210                           	opt callstack 0
   211  000001                     isspace@c:
   212                           	opt callstack 0
   213  000001                     fputc@c:
   214                           	opt callstack 0
   215  000001                     strlen@s:
   216                           	opt callstack 0
   217  000001                     delay_ms@n:
   218                           	opt callstack 0
   219  000001                     ___lodiv@dividend:
   220                           	opt callstack 0
   221  000001                     ___lomod@dividend:
   222                           	opt callstack 0
   223                           
   224                           ; 8 bytes @ 0x0
   225  000001                     	ds	1
   226  000002                     putrsXLCD@buffer:
   227                           	opt callstack 0
   228  000002                     putsXLCD@buffer:
   229                           	opt callstack 0
   230                           
   231                           ; 2 bytes @ 0x1
   232  000002                     	ds	1
   233  000003                     ??_isdigit:
   234  000003                     ??_isspace:
   235  000003                     ?_conversionADC:
   236                           	opt callstack 0
   237  000003                     ___wmul@multiplicand:
   238                           	opt callstack 0
   239  000003                     fputc@fp:
   240                           	opt callstack 0
   241  000003                     strlen@a:
   242                           	opt callstack 0
   243                           
   244                           ; 2 bytes @ 0x2
   245  000003                     	ds	1
   246  000004                     
   247                           ; 1 bytes @ 0x3
   248  000004                     	ds	1
   249  000005                     ??_fputc:
   250  000005                     ??_delay_ms:
   251  000005                     ___wmul@product:
   252                           	opt callstack 0
   253                           
   254                           ; 2 bytes @ 0x4
   255  000005                     	ds	1
   256  000006                     ??_OpenXLCD:
   257                           
   258                           ; 1 bytes @ 0x5
   259  000006                     	ds	1
   260  000007                     OpenXLCD@lcdtype:
   261                           	opt callstack 0
   262  000007                     _isspace$1087:
   263                           	opt callstack 0
   264                           
   265                           ; 1 bytes @ 0x6
   266  000007                     	ds	1
   267  000008                     ?_atoi:
   268                           	opt callstack 0
   269  000008                     atoi@s:
   270                           	opt callstack 0
   271                           
   272                           ; 2 bytes @ 0x7
   273  000008                     	ds	1
   274  000009                     ___lodiv@divisor:
   275                           	opt callstack 0
   276  000009                     ___lomod@divisor:
   277                           	opt callstack 0
   278                           
   279                           ; 8 bytes @ 0x8
   280  000009                     	ds	1
   281  00000A                     ??_atoi:
   282  00000A                     fputs@s:
   283                           	opt callstack 0
   284                           
   285                           ; 2 bytes @ 0x9
   286  00000A                     	ds	2
   287  00000C                     fputs@fp:
   288                           	opt callstack 0
   289                           
   290                           ; 2 bytes @ 0xB
   291  00000C                     	ds	2
   292  00000E                     fputs@c:
   293                           	opt callstack 0
   294  00000E                     atoi@neg:
   295                           	opt callstack 0
   296                           
   297                           ; 2 bytes @ 0xD
   298  00000E                     	ds	1
   299  00000F                     fputs@i:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0xE
   303  00000F                     	ds	1
   304  000010                     _atoi$1069:
   305                           	opt callstack 0
   306                           
   307                           ; 2 bytes @ 0xF
   308  000010                     	ds	1
   309  000011                     ?_pad:
   310                           	opt callstack 0
   311  000011                     ___lomod@counter:
   312                           	opt callstack 0
   313  000011                     pad@fp:
   314                           	opt callstack 0
   315  000011                     ___lodiv@quotient:
   316                           	opt callstack 0
   317                           
   318                           ; 8 bytes @ 0x10
   319  000011                     	ds	1
   320  000012                     _atoi$1071:
   321                           	opt callstack 0
   322                           
   323                           ; 2 bytes @ 0x11
   324  000012                     	ds	1
   325  000013                     pad@buf:
   326                           	opt callstack 0
   327                           
   328                           ; 2 bytes @ 0x12
   329  000013                     	ds	1
   330  000014                     _atoi$1070:
   331                           	opt callstack 0
   332                           
   333                           ; 1 bytes @ 0x13
   334  000014                     	ds	1
   335  000015                     pad@p:
   336                           	opt callstack 0
   337  000015                     atoi@n:
   338                           	opt callstack 0
   339                           
   340                           ; 2 bytes @ 0x14
   341  000015                     	ds	2
   342  000017                     ??_pad:
   343                           
   344                           ; 1 bytes @ 0x16
   345  000017                     	ds	1
   346  000018                     pad@i:
   347                           	opt callstack 0
   348                           
   349                           ; 2 bytes @ 0x17
   350  000018                     	ds	1
   351  000019                     ___lodiv@counter:
   352                           	opt callstack 0
   353                           
   354                           ; 1 bytes @ 0x18
   355  000019                     	ds	1
   356  00001A                     pad@w:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x19
   360  00001A                     	ds	2
   361  00001C                     ?_utoa:
   362                           	opt callstack 0
   363  00001C                     utoa@fp:
   364                           	opt callstack 0
   365                           
   366                           ; 2 bytes @ 0x1B
   367  00001C                     	ds	2
   368  00001E                     utoa@d:
   369                           	opt callstack 0
   370                           
   371                           ; 8 bytes @ 0x1D
   372  00001E                     	ds	8
   373  000026                     ??_utoa:
   374                           
   375                           ; 1 bytes @ 0x25
   376  000026                     	ds	8
   377  00002E                     utoa@p:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0x2D
   381  00002E                     	ds	2
   382  000030                     utoa@w:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x2F
   386  000030                     	ds	2
   387  000032                     utoa@n:
   388                           	opt callstack 0
   389                           
   390                           ; 8 bytes @ 0x31
   391  000032                     	ds	8
   392  00003A                     utoa@i:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0x39
   396  00003A                     	ds	2
   397  00003C                     ?_vfpfcnvrt:
   398                           	opt callstack 0
   399  00003C                     vfpfcnvrt@fp:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x3B
   403  00003C                     	ds	2
   404  00003E                     vfpfcnvrt@fmt:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x3D
   408  00003E                     	ds	2
   409  000040                     vfpfcnvrt@ap:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x3F
   413  000040                     	ds	2
   414  000042                     ??_vfpfcnvrt:
   415                           
   416                           ; 1 bytes @ 0x41
   417  000042                     	ds	4
   418  000046                     vfpfcnvrt@llu:
   419                           	opt callstack 0
   420                           
   421                           ; 8 bytes @ 0x45
   422  000046                     	ds	8
   423  00004E                     vfpfcnvrt@done:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x4D
   427  00004E                     	ds	2
   428  000050                     _vfpfcnvrt$614:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x4F
   432  000050                     	ds	2
   433  000052                     ?_vfprintf:
   434                           	opt callstack 0
   435  000052                     vfprintf@fp:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0x51
   439  000052                     	ds	2
   440  000054                     vfprintf@fmt:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0x53
   444  000054                     	ds	2
   445  000056                     vfprintf@ap:
   446                           	opt callstack 0
   447                           
   448                           ; 2 bytes @ 0x55
   449  000056                     	ds	2
   450  000058                     vfprintf@cfmt:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x57
   454  000058                     	ds	2
   455  00005A                     ?_sprintf:
   456                           	opt callstack 0
   457  00005A                     sprintf@s:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x59
   461  00005A                     	ds	2
   462  00005C                     sprintf@fmt:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x5B
   466  00005C                     	ds	4
   467  000060                     
   468                           ; 1 bytes @ 0x5F
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 21 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   488 ;;      Params:         0       0       0       0       0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0       0       0       0       0
   491 ;;      Totals:         0       0       0       0       0       0       0       0       0
   492 ;;Total ram usage:        0 bytes
   493 ;; Hardware stack levels required when called:    8
   494 ;; This function calls:
   495 ;;		_WriteCmdXLCD
   496 ;;		_conversionADC
   497 ;;		_delay_ms
   498 ;;		_initADC
   499 ;;		_initLCD
   500 ;;		_putsXLCD
   501 ;;		_sprintf
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text0
   508  007450                     __ptext0:
   509                           	opt callstack 0
   510  007450                     _main:
   511                           	opt callstack 23
   512  007450                     
   513                           ;main.c: 22:     initLCD();
   514  007450  EC92  F038         	call	_initLCD	;wreg free
   515  007454                     
   516                           ;main.c: 23:     initADC();
   517  007454  EC42  F038         	call	_initADC	;wreg free
   518  007458                     
   519                           ;main.c: 24:     TRISDbits.TRISD0 = 0;
   520  007458  9095               	bcf	149,0,c	;volatile
   521  00745A                     
   522                           ;main.c: 25:     TRISDbits.TRISD1 = 0;
   523  00745A  9295               	bcf	149,1,c	;volatile
   524  00745C                     
   525                           ;main.c: 26:     TRISDbits.TRISD2 = 0;
   526  00745C  9495               	bcf	149,2,c	;volatile
   527  00745E                     
   528                           ;main.c: 27:     TRISDbits.TRISD3 = 0;
   529  00745E  9695               	bcf	149,3,c	;volatile
   530  007460                     
   531                           ;main.c: 28:     TRISBbits.TRISB0 = 0;
   532  007460  9093               	bcf	147,0,c	;volatile
   533  007462                     
   534                           ;main.c: 29:     TRISBbits.TRISB4 = 0;
   535  007462  9893               	bcf	147,4,c	;volatile
   536  007464                     
   537                           ;main.c: 30:     TRISBbits.TRISB5 = 0;
   538  007464  9A93               	bcf	147,5,c	;volatile
   539  007466                     
   540                           ;main.c: 31:     TRISBbits.TRISB1 = 0;
   541  007466  9293               	bcf	147,1,c	;volatile
   542  007468                     
   543                           ;main.c: 32:     TRISBbits.TRISB2 = 0;
   544  007468  9493               	bcf	147,2,c	;volatile
   545  00746A                     
   546                           ;main.c: 33:     TRISBbits.TRISB6 = 0;
   547  00746A  9C93               	bcf	147,6,c	;volatile
   548  00746C                     
   549                           ;main.c: 35:     LATDbits.LATD0 = 0;
   550  00746C  908C               	bcf	140,0,c	;volatile
   551  00746E                     
   552                           ;main.c: 36:     LATDbits.LATD1 = 0;
   553  00746E  928C               	bcf	140,1,c	;volatile
   554  007470                     
   555                           ;main.c: 37:     LATDbits.LATD2 = 0;
   556  007470  948C               	bcf	140,2,c	;volatile
   557  007472                     
   558                           ;main.c: 38:     LATDbits.LATD3 = 0;
   559  007472  968C               	bcf	140,3,c	;volatile
   560  007474                     
   561                           ;main.c: 39:     LATBbits.LATB0 = 0;
   562  007474  908A               	bcf	138,0,c	;volatile
   563  007476                     
   564                           ;main.c: 40:     LATBbits.LATB4 = 0;
   565  007476  988A               	bcf	138,4,c	;volatile
   566  007478                     
   567                           ;main.c: 41:     LATBbits.LATB5 = 0;
   568  007478  9A8A               	bcf	138,5,c	;volatile
   569  00747A                     
   570                           ;main.c: 42:     LATBbits.LATB1 = 0;
   571  00747A  928A               	bcf	138,1,c	;volatile
   572  00747C                     
   573                           ;main.c: 43:     LATBbits.LATB2 = 0;
   574  00747C  948A               	bcf	138,2,c	;volatile
   575  00747E                     
   576                           ;main.c: 44:     LATBbits.LATB6 = 0;
   577  00747E  9C8A               	bcf	138,6,c	;volatile
   578  007480                     l2277:
   579                           
   580                           ;main.c: 47:         sprintf(strResultado,"%04u",conversionADC());
   581  007480  0E88               	movlw	low _strResultado
   582  007482  6E5A               	movwf	sprintf@s^0,c
   583  007484  0E00               	movlw	high _strResultado
   584  007486  6E5B               	movwf	(sprintf@s+1)^0,c
   585  007488  0E15               	movlw	low STR_1
   586  00748A  6E5C               	movwf	sprintf@fmt^0,c
   587  00748C  0E10               	movlw	high STR_1
   588  00748E  6E5D               	movwf	(sprintf@fmt+1)^0,c
   589  007490  ECB8  F038         	call	_conversionADC	;wreg free
   590  007494  C003  F05E         	movff	?_conversionADC,?_sprintf+4
   591  007498  C004  F05F         	movff	?_conversionADC+1,?_sprintf+5
   592  00749C  ECCE  F039         	call	_sprintf	;wreg free
   593  0074A0                     
   594                           ;main.c: 48:         WriteCmdXLCD(0b11000000 + 5);
   595  0074A0  0EC5               	movlw	197
   596  0074A2  EC6F  F038         	call	_WriteCmdXLCD
   597  0074A6                     
   598                           ;main.c: 49:         putsXLCD(strResultado);
   599  0074A6  0E88               	movlw	low _strResultado
   600  0074A8  6E02               	movwf	putsXLCD@buffer^0,c
   601  0074AA  0E00               	movlw	high _strResultado
   602  0074AC  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   603  0074AE  EC3C  F039         	call	_putsXLCD	;wreg free
   604  0074B2                     
   605                           ;main.c: 50:         delay_ms(200);
   606  0074B2  0EC8               	movlw	200
   607  0074B4  6E01               	movwf	delay_ms@n^0,c
   608  0074B6  0E00               	movlw	0
   609  0074B8  6E02               	movwf	(delay_ms@n+1)^0,c
   610  0074BA  0E00               	movlw	0
   611  0074BC  6E03               	movwf	(delay_ms@n+2)^0,c
   612  0074BE  0E00               	movlw	0
   613  0074C0  6E04               	movwf	(delay_ms@n+3)^0,c
   614  0074C2  EC1B  F039         	call	_delay_ms	;wreg free
   615  0074C6  EF40  F03A         	goto	l2277
   616  0074CA  EF00  F008         	goto	start
   617  0074CE                     __end_of_main:
   618                           	opt callstack 0
   619                           
   620 ;; *************** function _sprintf *****************
   621 ;; Defined at:
   622 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  s               2   89[COMRAM] PTR unsigned char 
   625 ;;		 -> strResultado(5), 
   626 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
   627 ;;		 -> STR_1(5), 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  f               6    4[BANK0 ] struct _IO_FILE
   630 ;;  ap              2    2[BANK0 ] PTR void [1]
   631 ;;		 -> ?_sprintf(2), 
   632 ;;  ret             2    0        int 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  2   89[COMRAM] int 
   635 ;; Registers used:
   636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   642 ;;      Params:         6       0       0       0       0       0       0       0       0
   643 ;;      Locals:         0      10       0       0       0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0
   645 ;;      Totals:         6      10       0       0       0       0       0       0       0
   646 ;;Total ram usage:       16 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    7
   649 ;; This function calls:
   650 ;;		_vfprintf
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text1
   657  00739C                     __ptext1:
   658                           	opt callstack 0
   659  00739C                     _sprintf:
   660                           	opt callstack 23
   661  00739C  0E5E               	movlw	low (?_sprintf+4)
   662  00739E  0100               	movlb	0	; () banked
   663  0073A0  6F8F               	movwf	sprintf@ap& (0+255),b
   664  0073A2  0E00               	movlw	high (?_sprintf+4)
   665  0073A4  6F90               	movwf	(sprintf@ap+1)& (0+255),b
   666  0073A6  C05A  F091         	movff	sprintf@s,sprintf@f
   667  0073AA  C05B  F092         	movff	sprintf@s+1,sprintf@f+1
   668  0073AE                     
   669                           ; BSR set to: 0
   670  0073AE  0E00               	movlw	0
   671  0073B0  6F94               	movwf	(sprintf@f+3)& (0+255),b
   672  0073B2  0E00               	movlw	0
   673  0073B4  6F93               	movwf	(sprintf@f+2)& (0+255),b
   674  0073B6                     
   675                           ; BSR set to: 0
   676  0073B6  0E00               	movlw	0
   677  0073B8  6F96               	movwf	(sprintf@f+5)& (0+255),b
   678  0073BA  0E00               	movlw	0
   679  0073BC  6F95               	movwf	(sprintf@f+4)& (0+255),b
   680  0073BE                     
   681                           ; BSR set to: 0
   682  0073BE  0E91               	movlw	low sprintf@f
   683  0073C0  6E52               	movwf	vfprintf@fp^0,c
   684  0073C2  0E00               	movlw	high sprintf@f
   685  0073C4  6E53               	movwf	(vfprintf@fp+1)^0,c
   686  0073C6  C05C  F054         	movff	sprintf@fmt,vfprintf@fmt
   687  0073CA  C05D  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
   688  0073CE  0E8F               	movlw	low sprintf@ap
   689  0073D0  6E56               	movwf	vfprintf@ap^0,c
   690  0073D2  0E00               	movlw	high sprintf@ap
   691  0073D4  6E57               	movwf	(vfprintf@ap+1)^0,c
   692  0073D6  ECF7  F039         	call	_vfprintf	;wreg free
   693  0073DA  0100               	movlb	0	; () banked
   694  0073DC  5193               	movf	(sprintf@f+2)& (0+255),w,b
   695  0073DE  245A               	addwf	sprintf@s^0,w,c
   696  0073E0  6ED9               	movwf	fsr2l,c
   697  0073E2  5194               	movf	(sprintf@f+3)& (0+255),w,b
   698  0073E4  205B               	addwfc	(sprintf@s+1)^0,w,c
   699  0073E6  6EDA               	movwf	fsr2h,c
   700  0073E8  0E00               	movlw	0
   701  0073EA  6EDF               	movwf	indf2,c
   702  0073EC                     
   703                           ; BSR set to: 0
   704  0073EC  0012               	return		;funcret
   705  0073EE                     __end_of_sprintf:
   706                           	opt callstack 0
   707                           
   708 ;; *************** function _vfprintf *****************
   709 ;; Defined at:
   710 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
   713 ;;		 -> sprintf@f(6), 
   714 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
   715 ;;		 -> STR_1(5), 
   716 ;;  ap              2   85[COMRAM] PTR PTR void 
   717 ;;		 -> sprintf@ap(2), 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
   720 ;;		 -> STR_1(5), 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  2   81[COMRAM] int 
   723 ;; Registers used:
   724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   730 ;;      Params:         6       0       0       0       0       0       0       0       0
   731 ;;      Locals:         2       0       0       0       0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0
   733 ;;      Totals:         8       0       0       0       0       0       0       0       0
   734 ;;Total ram usage:        8 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; Hardware stack levels required when called:    6
   737 ;; This function calls:
   738 ;;		_vfpfcnvrt
   739 ;; This function is called by:
   740 ;;		_sprintf
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text2
   745  0073EE                     __ptext2:
   746                           	opt callstack 0
   747  0073EE                     _vfprintf:
   748                           	opt callstack 23
   749  0073EE                     
   750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   751  0073EE  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
   752  0073F2  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   753  0073F6                     
   754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   755  0073F6  0E00               	movlw	0
   756  0073F8  0100               	movlb	0	; () banked
   757  0073FA  6F61               	movwf	(_nout+1)& (0+255),b
   758  0073FC  0E00               	movlw	0
   759  0073FE  6F60               	movwf	_nout& (0+255),b
   760                           
   761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   762  007400  EF15  F03A         	goto	l2133
   763  007404                     l2131:
   764                           
   765                           ; BSR set to: 0
   766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   767  007404  C052  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
   768  007408  C053  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   769  00740C  0E58               	movlw	low vfprintf@cfmt
   770  00740E  6E3E               	movwf	vfpfcnvrt@fmt^0,c
   771  007410  0E00               	movlw	high vfprintf@cfmt
   772  007412  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
   773  007414  C056  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
   774  007418  C057  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   775  00741C  EC56  F03E         	call	_vfpfcnvrt	;wreg free
   776  007420  503C               	movf	?_vfpfcnvrt^0,w,c
   777  007422  0100               	movlb	0	; () banked
   778  007424  2760               	addwf	_nout& (0+255),f,b
   779  007426  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
   780  007428  2361               	addwfc	(_nout+1)& (0+255),f,b
   781  00742A                     l2133:
   782                           
   783                           ; BSR set to: 0
   784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   785  00742A  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
   786  00742E  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   787  007432                     	if	0	;tblptru may be non-zero
   788  007432                     	endif
   789  007432                     	if	0	;tblptru may be non-zero
   790  007432                     	endif
   791  007432  0008               	tblrd		*
   792  007434  50F5               	movf	tablat,w,c
   793  007436  0900               	iorlw	0
   794  007438  A4D8               	btfss	status,2,c
   795  00743A  EF21  F03A         	goto	u1171
   796  00743E  EF23  F03A         	goto	u1170
   797  007442                     u1171:
   798  007442  EF02  F03A         	goto	l2131
   799  007446                     u1170:
   800  007446                     
   801                           ; BSR set to: 0
   802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   803  007446  C060  F052         	movff	_nout,?_vfprintf
   804  00744A  C061  F053         	movff	_nout+1,?_vfprintf+1
   805  00744E                     
   806                           ; BSR set to: 0
   807  00744E  0012               	return		;funcret
   808  007450                     __end_of_vfprintf:
   809                           	opt callstack 0
   810                           
   811 ;; *************** function _vfpfcnvrt *****************
   812 ;; Defined at:
   813 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
   816 ;;		 -> sprintf@f(6), 
   817 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
   818 ;;		 -> vfprintf@cfmt(2), 
   819 ;;  ap              2   63[COMRAM] PTR PTR void 
   820 ;;		 -> sprintf@ap(2), 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  llu             8   69[COMRAM] unsigned long long 
   823 ;;  ll              8    0        long long 
   824 ;;  f               4    0        long long 
   825 ;;  vp              3    0        PTR void 
   826 ;;  ct              3    0        unsigned char [3]
   827 ;;  cp              3    0        PTR unsigned char 
   828 ;;  done            2   77[COMRAM] int 
   829 ;;  i               2    0        int 
   830 ;;  c               1    0        unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;                  2   59[COMRAM] int 
   833 ;; Registers used:
   834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   840 ;;      Params:         6       0       0       0       0       0       0       0       0
   841 ;;      Locals:        12       0       0       0       0       0       0       0       0
   842 ;;      Temps:          4       0       0       0       0       0       0       0       0
   843 ;;      Totals:        22       0       0       0       0       0       0       0       0
   844 ;;Total ram usage:       22 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    5
   847 ;; This function calls:
   848 ;;		_atoi
   849 ;;		_fputc
   850 ;;		_isdigit
   851 ;;		_utoa
   852 ;; This function is called by:
   853 ;;		_vfprintf
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text3
   858  007CAC                     __ptext3:
   859                           	opt callstack 0
   860  007CAC                     _vfpfcnvrt:
   861                           	opt callstack 23
   862  007CAC                     
   863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   864  007CAC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   865  007CB0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   866  007CB4  CFDE FFF6          	movff	postinc2,tblptrl
   867  007CB8  CFDD FFF7          	movff	postdec2,tblptrh
   868  007CBC                     	if	0	;tblptru may be non-zero
   869  007CBC                     	endif
   870  007CBC                     	if	0	;tblptru may be non-zero
   871  007CBC                     	endif
   872  007CBC  0008               	tblrd		*
   873  007CBE  50F5               	movf	tablat,w,c
   874  007CC0  0A25               	xorlw	37
   875  007CC2  A4D8               	btfss	status,2,c
   876  007CC4  EF66  F03E         	goto	u981
   877  007CC8  EF68  F03E         	goto	u980
   878  007CCC                     u981:
   879  007CCC  EFE4  F03F         	goto	l2047
   880  007CD0                     u980:
   881  007CD0                     
   882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
   883  007CD0  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   884  007CD4  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   885  007CD8  2ADE               	incf	postinc2,f,c
   886  007CDA  0E00               	movlw	0
   887  007CDC  22DD               	addwfc	postdec2,f,c
   888  007CDE                     
   889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
   890  007CDE  0E00               	movlw	0
   891  007CE0  0100               	movlb	0	; () banked
   892  007CE2  6F63               	movwf	(_width+1)& (0+255),b
   893  007CE4  0E00               	movlw	0
   894  007CE6  6F62               	movwf	_width& (0+255),b
   895  007CE8  C062  F066         	movff	_width,_flags
   896  007CEC  C063  F067         	movff	_width+1,_flags+1
   897  007CF0                     
   898                           ; BSR set to: 0
   899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
   900  007CF0  6964               	setf	_prec& (0+255),b
   901  007CF2  6965               	setf	(_prec+1)& (0+255),b
   902  007CF4                     
   903                           ; BSR set to: 0
   904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
   905  007CF4  0E00               	movlw	0
   906  007CF6  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
   907  007CF8  0E00               	movlw	0
   908  007CFA  6E4E               	movwf	vfpfcnvrt@done^0,c
   909                           
   910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
   911  007CFC  EFCB  F03E         	goto	l2001
   912  007D00                     l1975:
   913                           
   914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
   915  007D00  0100               	movlb	0	; () banked
   916  007D02  8166               	bsf	_flags& (0+255),0,b
   917  007D04                     l1977:
   918                           
   919                           ; BSR set to: 0
   920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
   921  007D04  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   922  007D08  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   923  007D0C  2ADE               	incf	postinc2,f,c
   924  007D0E  0E00               	movlw	0
   925  007D10  22DD               	addwfc	postdec2,f,c
   926                           
   927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
   928  007D12  EFCB  F03E         	goto	l2001
   929  007D16                     l1979:
   930                           
   931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
   932  007D16  0100               	movlb	0	; () banked
   933  007D18  8366               	bsf	_flags& (0+255),1,b
   934  007D1A  EF82  F03E         	goto	l1977
   935  007D1E                     l1983:
   936                           
   937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
   938  007D1E  0100               	movlb	0	; () banked
   939  007D20  8566               	bsf	_flags& (0+255),2,b
   940  007D22  EF82  F03E         	goto	l1977
   941  007D26                     l1987:
   942                           
   943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
   944  007D26  0100               	movlb	0	; () banked
   945  007D28  8766               	bsf	_flags& (0+255),3,b
   946  007D2A  EF82  F03E         	goto	l1977
   947  007D2E                     l1991:
   948                           
   949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
   950  007D2E  0100               	movlb	0	; () banked
   951  007D30  8966               	bsf	_flags& (0+255),4,b
   952  007D32  EF82  F03E         	goto	l1977
   953  007D36                     l1995:
   954                           
   955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
   956  007D36  0E00               	movlw	0
   957  007D38  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
   958  007D3A  0E01               	movlw	1
   959  007D3C  6E4E               	movwf	vfpfcnvrt@done^0,c
   960                           
   961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
   962  007D3E  EFCB  F03E         	goto	l2001
   963  007D42                     l1999:
   964  007D42  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   965  007D46  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   966  007D4A  CFDE FFF6          	movff	postinc2,tblptrl
   967  007D4E  CFDD FFF7          	movff	postdec2,tblptrh
   968  007D52                     	if	0	;tblptru may be non-zero
   969  007D52                     	endif
   970  007D52                     	if	0	;tblptru may be non-zero
   971  007D52                     	endif
   972  007D52  0008               	tblrd		*
   973  007D54  50F5               	movf	tablat,w,c
   974  007D56  6E42               	movwf	??_vfpfcnvrt^0,c
   975  007D58  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
   976                           
   977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   978                           ; Switch size 1, requested type "simple"
   979                           ; Number of cases is 1, Range of values is 0 to 0
   980                           ; switch strategies available:
   981                           ; Name         Instructions Cycles
   982                           ; simple_byte            4     3 (average)
   983                           ;	Chosen strategy is simple_byte
   984  007D5A  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
   985  007D5C  0A00               	xorlw	0	; case 0
   986  007D5E  B4D8               	btfsc	status,2,c
   987  007D60  EFB4  F03E         	goto	l2337
   988  007D64  EF9B  F03E         	goto	l1995
   989  007D68                     l2337:
   990                           
   991                           ; Switch size 1, requested type "simple"
   992                           ; Number of cases is 5, Range of values is 32 to 48
   993                           ; switch strategies available:
   994                           ; Name         Instructions Cycles
   995                           ; simple_byte           16     9 (average)
   996                           ;	Chosen strategy is simple_byte
   997  007D68  5042               	movf	??_vfpfcnvrt^0,w,c
   998  007D6A  0A20               	xorlw	32	; case 32
   999  007D6C  B4D8               	btfsc	status,2,c
  1000  007D6E  EF93  F03E         	goto	l1987
  1001  007D72  0A03               	xorlw	3	; case 35
  1002  007D74  B4D8               	btfsc	status,2,c
  1003  007D76  EF97  F03E         	goto	l1991
  1004  007D7A  0A08               	xorlw	8	; case 43
  1005  007D7C  B4D8               	btfsc	status,2,c
  1006  007D7E  EF8F  F03E         	goto	l1983
  1007  007D82  0A06               	xorlw	6	; case 45
  1008  007D84  B4D8               	btfsc	status,2,c
  1009  007D86  EF80  F03E         	goto	l1975
  1010  007D8A  0A1D               	xorlw	29	; case 48
  1011  007D8C  B4D8               	btfsc	status,2,c
  1012  007D8E  EF8B  F03E         	goto	l1979
  1013  007D92  EF9B  F03E         	goto	l1995
  1014  007D96                     l2001:
  1015                           
  1016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1017  007D96  504E               	movf	vfpfcnvrt@done^0,w,c
  1018  007D98  104F               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1019  007D9A  B4D8               	btfsc	status,2,c
  1020  007D9C  EFD2  F03E         	goto	u991
  1021  007DA0  EFD4  F03E         	goto	u990
  1022  007DA4                     u991:
  1023  007DA4  EFA1  F03E         	goto	l1999
  1024  007DA8                     u990:
  1025  007DA8                     
  1026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1027  007DA8  0100               	movlb	0	; () banked
  1028  007DAA  A166               	btfss	_flags& (0+255),0,b
  1029  007DAC  EFDA  F03E         	goto	u1001
  1030  007DB0  EFDC  F03E         	goto	u1000
  1031  007DB4                     u1001:
  1032  007DB4  EFDD  F03E         	goto	l2005
  1033  007DB8                     u1000:
  1034  007DB8                     
  1035                           ; BSR set to: 0
  1036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1037  007DB8  9366               	bcf	_flags& (0+255),1,b
  1038  007DBA                     l2005:
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1042  007DBA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1043  007DBE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1044  007DC2  CFDE FFF6          	movff	postinc2,tblptrl
  1045  007DC6  CFDD FFF7          	movff	postdec2,tblptrh
  1046  007DCA                     	if	0	;tblptru may be non-zero
  1047  007DCA                     	endif
  1048  007DCA                     	if	0	;tblptru may be non-zero
  1049  007DCA                     	endif
  1050  007DCA  0008               	tblrd		*
  1051  007DCC  50F5               	movf	tablat,w,c
  1052  007DCE  0A2A               	xorlw	42
  1053  007DD0  A4D8               	btfss	status,2,c
  1054  007DD2  EFED  F03E         	goto	u1011
  1055  007DD6  EFEF  F03E         	goto	u1010
  1056  007DDA                     u1011:
  1057  007DDA  EF18  F03F         	goto	l2013
  1058  007DDE                     u1010:
  1059  007DDE                     
  1060                           ; BSR set to: 0
  1061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1062  007DDE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1063  007DE2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1064  007DE6  2ADE               	incf	postinc2,f,c
  1065  007DE8  0E00               	movlw	0
  1066  007DEA  22DD               	addwfc	postdec2,f,c
  1067                           
  1068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1069  007DEC  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1070  007DF0  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1071  007DF4  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1072  007DF8  0E02               	movlw	2
  1073  007DFA  26DE               	addwf	postinc2,f,c
  1074  007DFC  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1075  007E00  0E00               	movlw	0
  1076  007E02  22DD               	addwfc	postdec2,f,c
  1077  007E04  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1078  007E08  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1079  007E0C  CFDE F062          	movff	postinc2,_width
  1080  007E10  CFDD F063          	movff	postdec2,_width+1
  1081  007E14                     
  1082                           ; BSR set to: 0
  1083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1084  007E14  BF63               	btfsc	(_width+1)& (0+255),7,b
  1085  007E16  EF11  F03F         	goto	u1020
  1086  007E1A  EF0F  F03F         	goto	u1021
  1087  007E1E                     u1021:
  1088  007E1E  EF5B  F03F         	goto	l2023
  1089  007E22                     u1020:
  1090  007E22                     
  1091                           ; BSR set to: 0
  1092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1093  007E22  8166               	bsf	_flags& (0+255),0,b
  1094                           
  1095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1096  007E24  6D62               	negf	_width& (0+255),b
  1097  007E26  1F63               	comf	(_width+1)& (0+255),f,b
  1098  007E28  B0D8               	btfsc	status,0,c
  1099  007E2A  2B63               	incf	(_width+1)& (0+255),f,b
  1100  007E2C  EF5B  F03F         	goto	l2023
  1101  007E30                     l2013:
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1105  007E30  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1106  007E34  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1107  007E38  CFDE F008          	movff	postinc2,atoi@s
  1108  007E3C  CFDD F009          	movff	postdec2,atoi@s+1
  1109  007E40  EC8D  F03C         	call	_atoi	;wreg free
  1110  007E44  C008  F062         	movff	?_atoi,_width
  1111  007E48  C009  F063         	movff	?_atoi+1,_width+1
  1112                           
  1113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1114  007E4C  EF2F  F03F         	goto	l2017
  1115  007E50                     l2015:
  1116                           
  1117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1118  007E50  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1119  007E54  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1120  007E58  2ADE               	incf	postinc2,f,c
  1121  007E5A  0E00               	movlw	0
  1122  007E5C  22DD               	addwfc	postdec2,f,c
  1123  007E5E                     l2017:
  1124  007E5E  0ED0               	movlw	208
  1125  007E60  6E42               	movwf	??_vfpfcnvrt^0,c
  1126  007E62  0EFF               	movlw	255
  1127  007E64  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1128  007E66  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1129  007E6A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1130  007E6E  CFDE FFF6          	movff	postinc2,tblptrl
  1131  007E72  CFDD FFF7          	movff	postdec2,tblptrh
  1132  007E76                     	if	0	;tblptru may be non-zero
  1133  007E76                     	endif
  1134  007E76                     	if	0	;tblptru may be non-zero
  1135  007E76                     	endif
  1136  007E76  0008               	tblrd		*
  1137  007E78  50F5               	movf	tablat,w,c
  1138  007E7A  6E44               	movwf	(??_vfpfcnvrt+2)^0,c
  1139  007E7C  6A45               	clrf	(??_vfpfcnvrt+3)^0,c
  1140  007E7E  5042               	movf	??_vfpfcnvrt^0,w,c
  1141  007E80  2644               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1142  007E82  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1143  007E84  2245               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1144  007E86  5045               	movf	(??_vfpfcnvrt+3)^0,w,c
  1145  007E88  E10A               	bnz	u1030
  1146  007E8A  0E0A               	movlw	10
  1147  007E8C  5C44               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1148  007E8E  A0D8               	btfss	status,0,c
  1149  007E90  EF4C  F03F         	goto	u1031
  1150  007E94  EF4F  F03F         	goto	u1030
  1151  007E98                     u1031:
  1152  007E98  0E01               	movlw	1
  1153  007E9A  EF50  F03F         	goto	u1040
  1154  007E9E                     u1030:
  1155  007E9E  0E00               	movlw	0
  1156  007EA0                     u1040:
  1157  007EA0  6E50               	movwf	_vfpfcnvrt$614^0,c
  1158  007EA2  6A51               	clrf	(_vfpfcnvrt$614+1)^0,c
  1159  007EA4  5050               	movf	_vfpfcnvrt$614^0,w,c
  1160  007EA6  1051               	iorwf	(_vfpfcnvrt$614+1)^0,w,c
  1161  007EA8  A4D8               	btfss	status,2,c
  1162  007EAA  EF59  F03F         	goto	u1051
  1163  007EAE  EF5B  F03F         	goto	u1050
  1164  007EB2                     u1051:
  1165  007EB2  EF28  F03F         	goto	l2015
  1166  007EB6                     u1050:
  1167  007EB6                     l2023:
  1168                           
  1169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1170  007EB6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1171  007EBA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1172  007EBE  CFDE FFF6          	movff	postinc2,tblptrl
  1173  007EC2  CFDD FFF7          	movff	postdec2,tblptrh
  1174  007EC6                     	if	0	;tblptru may be non-zero
  1175  007EC6                     	endif
  1176  007EC6                     	if	0	;tblptru may be non-zero
  1177  007EC6                     	endif
  1178  007EC6  0008               	tblrd		*
  1179  007EC8  50F5               	movf	tablat,w,c
  1180  007ECA  0A75               	xorlw	117
  1181  007ECC  A4D8               	btfss	status,2,c
  1182  007ECE  EF6B  F03F         	goto	u1061
  1183  007ED2  EF6D  F03F         	goto	u1060
  1184  007ED6                     u1061:
  1185  007ED6  EFAE  F03F         	goto	l2031
  1186  007EDA                     u1060:
  1187  007EDA                     
  1188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1189  007EDA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1190  007EDE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1191  007EE2  2ADE               	incf	postinc2,f,c
  1192  007EE4  0E00               	movlw	0
  1193  007EE6  22DD               	addwfc	postdec2,f,c
  1194                           
  1195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1196  007EE8  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1197  007EEC  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1198  007EF0  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1199  007EF4  0E02               	movlw	2
  1200  007EF6  26DE               	addwf	postinc2,f,c
  1201  007EF8  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1202  007EFC  0E00               	movlw	0
  1203  007EFE  22DD               	addwfc	postdec2,f,c
  1204  007F00  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1205  007F04  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1206  007F08  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  1207  007F0C  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  1208  007F10  C044  F046         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1209  007F14  C045  F047         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1210  007F18  6A48               	clrf	(vfpfcnvrt@llu+2)^0,c
  1211  007F1A  6A49               	clrf	(vfpfcnvrt@llu+3)^0,c
  1212  007F1C  6A4A               	clrf	(vfpfcnvrt@llu+4)^0,c
  1213  007F1E  6A4B               	clrf	(vfpfcnvrt@llu+5)^0,c
  1214  007F20  6A4C               	clrf	(vfpfcnvrt@llu+6)^0,c
  1215  007F22  6A4D               	clrf	(vfpfcnvrt@llu+7)^0,c
  1216  007F24                     
  1217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1218  007F24  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  1219  007F28  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1220  007F2C  C046  F01E         	movff	vfpfcnvrt@llu,utoa@d
  1221  007F30  C047  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1222  007F34  C048  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1223  007F38  C049  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1224  007F3C  C04A  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1225  007F40  C04B  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1226  007F44  C04C  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1227  007F48  C04D  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1228  007F4C  EC55  F03D         	call	_utoa	;wreg free
  1229  007F50  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  1230  007F54  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  1231  007F58  EFFF  F03F         	goto	l297
  1232  007F5C                     l2031:
  1233                           
  1234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1235  007F5C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1236  007F60  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1237  007F64  CFDE FFF6          	movff	postinc2,tblptrl
  1238  007F68  CFDD FFF7          	movff	postdec2,tblptrh
  1239  007F6C                     	if	0	;tblptru may be non-zero
  1240  007F6C                     	endif
  1241  007F6C                     	if	0	;tblptru may be non-zero
  1242  007F6C                     	endif
  1243  007F6C  0008               	tblrd		*
  1244  007F6E  50F5               	movf	tablat,w,c
  1245  007F70  0A25               	xorlw	37
  1246  007F72  A4D8               	btfss	status,2,c
  1247  007F74  EFBE  F03F         	goto	u1071
  1248  007F78  EFC0  F03F         	goto	u1070
  1249  007F7C                     u1071:
  1250  007F7C  EFD7  F03F         	goto	l2041
  1251  007F80                     u1070:
  1252  007F80                     
  1253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1254  007F80  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1255  007F84  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1256  007F88  2ADE               	incf	postinc2,f,c
  1257  007F8A  0E00               	movlw	0
  1258  007F8C  22DD               	addwfc	postdec2,f,c
  1259  007F8E                     
  1260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1261  007F8E  0E00               	movlw	0
  1262  007F90  6E02               	movwf	(fputc@c+1)^0,c
  1263  007F92  0E25               	movlw	37
  1264  007F94  6E01               	movwf	fputc@c^0,c
  1265  007F96  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1266  007F9A  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1267  007F9E  ECCA  F03A         	call	_fputc	;wreg free
  1268  007FA2                     l2037:
  1269                           
  1270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1271  007FA2  0E00               	movlw	0
  1272  007FA4  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1273  007FA6  0E01               	movlw	1
  1274  007FA8  6E3C               	movwf	?_vfpfcnvrt^0,c
  1275  007FAA  EFFF  F03F         	goto	l297
  1276  007FAE                     l2041:
  1277                           
  1278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1279  007FAE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1280  007FB2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1281  007FB6  2ADE               	incf	postinc2,f,c
  1282  007FB8  0E00               	movlw	0
  1283  007FBA  22DD               	addwfc	postdec2,f,c
  1284  007FBC                     
  1285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1286  007FBC  0E00               	movlw	0
  1287  007FBE  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1288  007FC0  0E00               	movlw	0
  1289  007FC2  6E3C               	movwf	?_vfpfcnvrt^0,c
  1290  007FC4  EFFF  F03F         	goto	l297
  1291  007FC8                     l2047:
  1292                           
  1293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1294  007FC8  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1295  007FCC  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1296  007FD0  CFDE FFF6          	movff	postinc2,tblptrl
  1297  007FD4  CFDD FFF7          	movff	postdec2,tblptrh
  1298  007FD8                     	if	0	;tblptru may be non-zero
  1299  007FD8                     	endif
  1300  007FD8                     	if	0	;tblptru may be non-zero
  1301  007FD8                     	endif
  1302  007FD8  0008               	tblrd		*
  1303  007FDA  50F5               	movf	tablat,w,c
  1304  007FDC  6E01               	movwf	fputc@c^0,c
  1305  007FDE  6A02               	clrf	(fputc@c+1)^0,c
  1306  007FE0  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1307  007FE4  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1308  007FE8  ECCA  F03A         	call	_fputc	;wreg free
  1309  007FEC                     
  1310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1311  007FEC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1312  007FF0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1313  007FF4  2ADE               	incf	postinc2,f,c
  1314  007FF6  0E00               	movlw	0
  1315  007FF8  22DD               	addwfc	postdec2,f,c
  1316  007FFA  EFD1  F03F         	goto	l2037
  1317  007FFE                     l297:
  1318  007FFE  0012               	return		;funcret
  1319  008000                     __end_of_vfpfcnvrt:
  1320                           	opt callstack 0
  1321                           
  1322 ;; *************** function _utoa *****************
  1323 ;; Defined at:
  1324 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1327 ;;		 -> sprintf@f(6), 
  1328 ;;  d               8   29[COMRAM] unsigned long long 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  n               8   49[COMRAM] unsigned long long 
  1331 ;;  i               2   57[COMRAM] int 
  1332 ;;  w               2   47[COMRAM] int 
  1333 ;;  p               2   45[COMRAM] int 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  2   27[COMRAM] int 
  1336 ;; Registers used:
  1337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1343 ;;      Params:        10       0       0       0       0       0       0       0       0
  1344 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1345 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1346 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1347 ;;Total ram usage:       32 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    4
  1350 ;; This function calls:
  1351 ;;		___lodiv
  1352 ;;		___lomod
  1353 ;;		_pad
  1354 ;; This function is called by:
  1355 ;;		_vfpfcnvrt
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text4
  1360  007AAA                     __ptext4:
  1361                           	opt callstack 0
  1362  007AAA                     _utoa:
  1363                           	opt callstack 23
  1364  007AAA                     
  1365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1366  007AAA  0100               	movlb	0	; () banked
  1367  007AAC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1368  007AAE  EF5B  F03D         	goto	u831
  1369  007AB2  EF5D  F03D         	goto	u830
  1370  007AB6                     u831:
  1371  007AB6  EF5E  F03D         	goto	l1803
  1372  007ABA                     u830:
  1373  007ABA                     
  1374                           ; BSR set to: 0
  1375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1376  007ABA  9366               	bcf	_flags& (0+255),1,b
  1377  007ABC                     l1803:
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1381  007ABC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1382  007ABE  EF6B  F03D         	goto	u840
  1383  007AC2  5165               	movf	(_prec+1)& (0+255),w,b
  1384  007AC4  E106               	bnz	u841
  1385  007AC6  0564               	decf	_prec& (0+255),w,b
  1386  007AC8  B0D8               	btfsc	status,0,c
  1387  007ACA  EF69  F03D         	goto	u841
  1388  007ACE  EF6B  F03D         	goto	u840
  1389  007AD2                     u841:
  1390  007AD2  EF71  F03D         	goto	l260
  1391  007AD6                     u840:
  1392  007AD6                     
  1393                           ; BSR set to: 0
  1394  007AD6  0E00               	movlw	0
  1395  007AD8  6E2F               	movwf	(utoa@p+1)^0,c
  1396  007ADA  0E01               	movlw	1
  1397  007ADC  6E2E               	movwf	utoa@p^0,c
  1398  007ADE  EF75  F03D         	goto	l262
  1399  007AE2                     l260:
  1400                           
  1401                           ; BSR set to: 0
  1402  007AE2  C064  F02E         	movff	_prec,utoa@p
  1403  007AE6  C065  F02F         	movff	_prec+1,utoa@p+1
  1404  007AEA                     l262:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1408  007AEA  C062  F030         	movff	_width,utoa@w
  1409  007AEE  C063  F031         	movff	_width+1,utoa@w+1
  1410                           
  1411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1412  007AF2  C01E  F032         	movff	utoa@d,utoa@n
  1413  007AF6  C01F  F033         	movff	utoa@d+1,utoa@n+1
  1414  007AFA  C020  F034         	movff	utoa@d+2,utoa@n+2
  1415  007AFE  C021  F035         	movff	utoa@d+3,utoa@n+3
  1416  007B02  C022  F036         	movff	utoa@d+4,utoa@n+4
  1417  007B06  C023  F037         	movff	utoa@d+5,utoa@n+5
  1418  007B0A  C024  F038         	movff	utoa@d+6,utoa@n+6
  1419  007B0E  C025  F039         	movff	utoa@d+7,utoa@n+7
  1420  007B12                     
  1421                           ; BSR set to: 0
  1422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1423  007B12  0E00               	movlw	0
  1424  007B14  6E3B               	movwf	(utoa@i+1)^0,c
  1425  007B16  0E1F               	movlw	31
  1426  007B18  6E3A               	movwf	utoa@i^0,c
  1427  007B1A                     
  1428                           ; BSR set to: 0
  1429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1430  007B1A  0E00               	movlw	0
  1431  007B1C  6F87               	movwf	(_dbuf+31)& (0+255),b
  1432                           
  1433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1434  007B1E  EF07  F03E         	goto	l1821
  1435  007B22                     l1811:
  1436                           
  1437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1438  007B22  063A               	decf	utoa@i^0,f,c
  1439  007B24  A0D8               	btfss	status,0,c
  1440  007B26  063B               	decf	(utoa@i+1)^0,f,c
  1441  007B28                     
  1442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1443  007B28  0E68               	movlw	low _dbuf
  1444  007B2A  243A               	addwf	utoa@i^0,w,c
  1445  007B2C  6ED9               	movwf	fsr2l,c
  1446  007B2E  0E00               	movlw	high _dbuf
  1447  007B30  203B               	addwfc	(utoa@i+1)^0,w,c
  1448  007B32  6EDA               	movwf	fsr2h,c
  1449  007B34  C032  F001         	movff	utoa@n,___lomod@dividend
  1450  007B38  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  1451  007B3C  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  1452  007B40  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  1453  007B44  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  1454  007B48  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  1455  007B4C  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  1456  007B50  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  1457  007B54  0E0A               	movlw	10
  1458  007B56  6E09               	movwf	___lomod@divisor^0,c
  1459  007B58  0E00               	movlw	0
  1460  007B5A  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1461  007B5C  0E00               	movlw	0
  1462  007B5E  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1463  007B60  0E00               	movlw	0
  1464  007B62  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1465  007B64  0E00               	movlw	0
  1466  007B66  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1467  007B68  0E00               	movlw	0
  1468  007B6A  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1469  007B6C  0E00               	movlw	0
  1470  007B6E  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1471  007B70  0E00               	movlw	0
  1472  007B72  6E10               	movwf	(___lomod@divisor+7)^0,c
  1473  007B74  EC2F  F03B         	call	___lomod	;wreg free
  1474  007B78  C001  F026         	movff	?___lomod,??_utoa
  1475  007B7C  C002  F027         	movff	?___lomod+1,??_utoa+1
  1476  007B80  C003  F028         	movff	?___lomod+2,??_utoa+2
  1477  007B84  C004  F029         	movff	?___lomod+3,??_utoa+3
  1478  007B88  C005  F02A         	movff	?___lomod+4,??_utoa+4
  1479  007B8C  C006  F02B         	movff	?___lomod+5,??_utoa+5
  1480  007B90  C007  F02C         	movff	?___lomod+6,??_utoa+6
  1481  007B94  C008  F02D         	movff	?___lomod+7,??_utoa+7
  1482  007B98  5026               	movf	??_utoa^0,w,c
  1483  007B9A  0F30               	addlw	48
  1484  007B9C  6EDF               	movwf	indf2,c
  1485  007B9E                     
  1486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  1487  007B9E  062E               	decf	utoa@p^0,f,c
  1488  007BA0  A0D8               	btfss	status,0,c
  1489  007BA2  062F               	decf	(utoa@p+1)^0,f,c
  1490  007BA4                     
  1491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  1492  007BA4  0630               	decf	utoa@w^0,f,c
  1493  007BA6  A0D8               	btfss	status,0,c
  1494  007BA8  0631               	decf	(utoa@w+1)^0,f,c
  1495  007BAA                     
  1496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  1497  007BAA  C032  F001         	movff	utoa@n,___lodiv@dividend
  1498  007BAE  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1499  007BB2  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1500  007BB6  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1501  007BBA  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1502  007BBE  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1503  007BC2  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1504  007BC6  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1505  007BCA  0E0A               	movlw	10
  1506  007BCC  6E09               	movwf	___lodiv@divisor^0,c
  1507  007BCE  0E00               	movlw	0
  1508  007BD0  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1509  007BD2  0E00               	movlw	0
  1510  007BD4  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1511  007BD6  0E00               	movlw	0
  1512  007BD8  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1513  007BDA  0E00               	movlw	0
  1514  007BDC  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1515  007BDE  0E00               	movlw	0
  1516  007BE0  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1517  007BE2  0E00               	movlw	0
  1518  007BE4  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1519  007BE6  0E00               	movlw	0
  1520  007BE8  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1521  007BEA  EC97  F03B         	call	___lodiv	;wreg free
  1522  007BEE  C001  F032         	movff	?___lodiv,utoa@n
  1523  007BF2  C002  F033         	movff	?___lodiv+1,utoa@n+1
  1524  007BF6  C003  F034         	movff	?___lodiv+2,utoa@n+2
  1525  007BFA  C004  F035         	movff	?___lodiv+3,utoa@n+3
  1526  007BFE  C005  F036         	movff	?___lodiv+4,utoa@n+4
  1527  007C02  C006  F037         	movff	?___lodiv+5,utoa@n+5
  1528  007C06  C007  F038         	movff	?___lodiv+6,utoa@n+6
  1529  007C0A  C008  F039         	movff	?___lodiv+7,utoa@n+7
  1530  007C0E                     l1821:
  1531                           
  1532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1533  007C0E  503A               	movf	utoa@i^0,w,c
  1534  007C10  103B               	iorwf	(utoa@i+1)^0,w,c
  1535  007C12  B4D8               	btfsc	status,2,c
  1536  007C14  EF0E  F03E         	goto	u851
  1537  007C18  EF10  F03E         	goto	u850
  1538  007C1C                     u851:
  1539  007C1C  EF41  F03E         	goto	l1831
  1540  007C20                     u850:
  1541  007C20  5032               	movf	utoa@n^0,w,c
  1542  007C22  1033               	iorwf	(utoa@n+1)^0,w,c
  1543  007C24  1034               	iorwf	(utoa@n+2)^0,w,c
  1544  007C26  1035               	iorwf	(utoa@n+3)^0,w,c
  1545  007C28  1036               	iorwf	(utoa@n+4)^0,w,c
  1546  007C2A  1037               	iorwf	(utoa@n+5)^0,w,c
  1547  007C2C  1038               	iorwf	(utoa@n+6)^0,w,c
  1548  007C2E  1039               	iorwf	(utoa@n+7)^0,w,c
  1549  007C30  A4D8               	btfss	status,2,c
  1550  007C32  EF1D  F03E         	goto	u861
  1551  007C36  EF1F  F03E         	goto	u860
  1552  007C3A                     u861:
  1553  007C3A  EF91  F03D         	goto	l1811
  1554  007C3E                     u860:
  1555  007C3E  BE2F               	btfsc	(utoa@p+1)^0,7,c
  1556  007C40  EF2C  F03E         	goto	u870
  1557  007C44  502F               	movf	(utoa@p+1)^0,w,c
  1558  007C46  E106               	bnz	u871
  1559  007C48  042E               	decf	utoa@p^0,w,c
  1560  007C4A  B0D8               	btfsc	status,0,c
  1561  007C4C  EF2A  F03E         	goto	u871
  1562  007C50  EF2C  F03E         	goto	u870
  1563  007C54                     u871:
  1564  007C54  EF91  F03D         	goto	l1811
  1565  007C58                     u870:
  1566  007C58  BE31               	btfsc	(utoa@w+1)^0,7,c
  1567  007C5A  EF37  F03E         	goto	u881
  1568  007C5E  5031               	movf	(utoa@w+1)^0,w,c
  1569  007C60  E108               	bnz	u880
  1570  007C62  0430               	decf	utoa@w^0,w,c
  1571  007C64  A0D8               	btfss	status,0,c
  1572  007C66  EF37  F03E         	goto	u881
  1573  007C6A  EF39  F03E         	goto	u880
  1574  007C6E                     u881:
  1575  007C6E  EF41  F03E         	goto	l1831
  1576  007C72                     u880:
  1577  007C72  0100               	movlb	0	; () banked
  1578  007C74  B366               	btfsc	_flags& (0+255),1,b
  1579  007C76  EF3F  F03E         	goto	u891
  1580  007C7A  EF41  F03E         	goto	u890
  1581  007C7E                     u891:
  1582  007C7E  EF91  F03D         	goto	l1811
  1583  007C82                     u890:
  1584  007C82                     l1831:
  1585                           
  1586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  1587  007C82  C01C  F011         	movff	utoa@fp,pad@fp
  1588  007C86  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  1589  007C8A  0E68               	movlw	low _dbuf
  1590  007C8C  243A               	addwf	utoa@i^0,w,c
  1591  007C8E  6E13               	movwf	pad@buf^0,c
  1592  007C90  0E00               	movlw	high _dbuf
  1593  007C92  203B               	addwfc	(utoa@i+1)^0,w,c
  1594  007C94  6E14               	movwf	(pad@buf+1)^0,c
  1595  007C96  C030  F015         	movff	utoa@w,pad@p
  1596  007C9A  C031  F016         	movff	utoa@w+1,pad@p+1
  1597  007C9E  EC67  F03A         	call	_pad	;wreg free
  1598  007CA2  C011  F01C         	movff	?_pad,?_utoa
  1599  007CA6  C012  F01D         	movff	?_pad+1,?_utoa+1
  1600  007CAA  0012               	return		;funcret
  1601  007CAC                     __end_of_utoa:
  1602                           	opt callstack 0
  1603                           
  1604 ;; *************** function _pad *****************
  1605 ;; Defined at:
  1606 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1609 ;;		 -> sprintf@f(6), 
  1610 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1611 ;;		 -> dbuf(32), 
  1612 ;;  p               2   20[COMRAM] int 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  w               2   25[COMRAM] int 
  1615 ;;  i               2   23[COMRAM] int 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  2   16[COMRAM] int 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1625 ;;      Params:         6       0       0       0       0       0       0       0       0
  1626 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1627 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1628 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1629 ;;Total ram usage:       11 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    3
  1632 ;; This function calls:
  1633 ;;		_fputc
  1634 ;;		_fputs
  1635 ;;		_strlen
  1636 ;; This function is called by:
  1637 ;;		_utoa
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text5
  1642  0074CE                     __ptext5:
  1643                           	opt callstack 0
  1644  0074CE                     _pad:
  1645                           	opt callstack 23
  1646  0074CE                     
  1647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1648  0074CE  0100               	movlb	0	; () banked
  1649  0074D0  A166               	btfss	_flags& (0+255),0,b
  1650  0074D2  EF6D  F03A         	goto	u671
  1651  0074D6  EF6F  F03A         	goto	u670
  1652  0074DA                     u671:
  1653  0074DA  EF79  F03A         	goto	l1713
  1654  0074DE                     u670:
  1655  0074DE                     
  1656                           ; BSR set to: 0
  1657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1658  0074DE  C013  F00A         	movff	pad@buf,fputs@s
  1659  0074E2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1660  0074E6  C011  F00C         	movff	pad@fp,fputs@fp
  1661  0074EA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1662  0074EE  EC5E  F039         	call	_fputs	;wreg free
  1663  0074F2                     l1713:
  1664                           
  1665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1666  0074F2  BE16               	btfsc	(pad@p+1)^0,7,c
  1667  0074F4  EF7E  F03A         	goto	u681
  1668  0074F8  EF80  F03A         	goto	u680
  1669  0074FC                     u681:
  1670  0074FC  EF86  F03A         	goto	l1717
  1671  007500                     u680:
  1672  007500  C015  F01A         	movff	pad@p,pad@w
  1673  007504  C016  F01B         	movff	pad@p+1,pad@w+1
  1674  007508  EF8A  F03A         	goto	l250
  1675  00750C                     l1717:
  1676  00750C  0E00               	movlw	0
  1677  00750E  6E1B               	movwf	(pad@w+1)^0,c
  1678  007510  0E00               	movlw	0
  1679  007512  6E1A               	movwf	pad@w^0,c
  1680  007514                     l250:
  1681                           
  1682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1683  007514  0E00               	movlw	0
  1684  007516  6E19               	movwf	(pad@i+1)^0,c
  1685  007518  0E00               	movlw	0
  1686  00751A  6E18               	movwf	pad@i^0,c
  1687                           
  1688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1689  00751C  EF9C  F03A         	goto	l1723
  1690  007520                     l1719:
  1691                           
  1692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1693  007520  0E00               	movlw	0
  1694  007522  6E02               	movwf	(fputc@c+1)^0,c
  1695  007524  0E20               	movlw	32
  1696  007526  6E01               	movwf	fputc@c^0,c
  1697  007528  C011  F003         	movff	pad@fp,fputc@fp
  1698  00752C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1699  007530  ECCA  F03A         	call	_fputc	;wreg free
  1700  007534                     
  1701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1702  007534  4A18               	infsnz	pad@i^0,f,c
  1703  007536  2A19               	incf	(pad@i+1)^0,f,c
  1704  007538                     l1723:
  1705                           
  1706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1707  007538  501A               	movf	pad@w^0,w,c
  1708  00753A  5C18               	subwf	pad@i^0,w,c
  1709  00753C  5019               	movf	(pad@i+1)^0,w,c
  1710  00753E  0A80               	xorlw	128
  1711  007540  6E17               	movwf	??_pad^0,c
  1712  007542  501B               	movf	(pad@w+1)^0,w,c
  1713  007544  0A80               	xorlw	128
  1714  007546  5817               	subwfb	??_pad^0,w,c
  1715  007548  A0D8               	btfss	status,0,c
  1716  00754A  EFA9  F03A         	goto	u691
  1717  00754E  EFAB  F03A         	goto	u690
  1718  007552                     u691:
  1719  007552  EF90  F03A         	goto	l1719
  1720  007556                     u690:
  1721  007556                     
  1722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1723  007556  0100               	movlb	0	; () banked
  1724  007558  B166               	btfsc	_flags& (0+255),0,b
  1725  00755A  EFB1  F03A         	goto	u701
  1726  00755E  EFB3  F03A         	goto	u700
  1727  007562                     u701:
  1728  007562  EFBD  F03A         	goto	l1727
  1729  007566                     u700:
  1730  007566                     
  1731                           ; BSR set to: 0
  1732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1733  007566  C013  F00A         	movff	pad@buf,fputs@s
  1734  00756A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1735  00756E  C011  F00C         	movff	pad@fp,fputs@fp
  1736  007572  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1737  007576  EC5E  F039         	call	_fputs	;wreg free
  1738  00757A                     l1727:
  1739                           
  1740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1741  00757A  C013  F001         	movff	pad@buf,strlen@s
  1742  00757E  C014  F002         	movff	pad@buf+1,strlen@s+1
  1743  007582  ECE4  F038         	call	_strlen	;wreg free
  1744  007586  501A               	movf	pad@w^0,w,c
  1745  007588  2401               	addwf	?_strlen^0,w,c
  1746  00758A  6E11               	movwf	?_pad^0,c
  1747  00758C  501B               	movf	(pad@w+1)^0,w,c
  1748  00758E  2002               	addwfc	(?_strlen+1)^0,w,c
  1749  007590  6E12               	movwf	(?_pad+1)^0,c
  1750  007592  0012               	return		;funcret
  1751  007594                     __end_of_pad:
  1752                           	opt callstack 0
  1753                           
  1754 ;; *************** function _strlen *****************
  1755 ;; Defined at:
  1756 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1759 ;;		 -> dbuf(32), 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1762 ;;		 -> dbuf(32), 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  2    0[COMRAM] unsigned int 
  1765 ;; Registers used:
  1766 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1772 ;;      Params:         2       0       0       0       0       0       0       0       0
  1773 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1775 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1776 ;;Total ram usage:        4 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_pad
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text6
  1786  0071C8                     __ptext6:
  1787                           	opt callstack 0
  1788  0071C8                     _strlen:
  1789                           	opt callstack 25
  1790  0071C8  C001  F003         	movff	strlen@s,strlen@a
  1791  0071CC  C002  F004         	movff	strlen@s+1,strlen@a+1
  1792  0071D0  EFEC  F038         	goto	l1703
  1793  0071D4                     l1701:
  1794  0071D4  4A01               	infsnz	strlen@s^0,f,c
  1795  0071D6  2A02               	incf	(strlen@s+1)^0,f,c
  1796  0071D8                     l1703:
  1797  0071D8  C001  FFD9         	movff	strlen@s,fsr2l
  1798  0071DC  C002  FFDA         	movff	strlen@s+1,fsr2h
  1799  0071E0  50DF               	movf	indf2,w,c
  1800  0071E2  A4D8               	btfss	status,2,c
  1801  0071E4  EFF6  F038         	goto	u661
  1802  0071E8  EFF8  F038         	goto	u660
  1803  0071EC                     u661:
  1804  0071EC  EFEA  F038         	goto	l1701
  1805  0071F0                     u660:
  1806  0071F0  5003               	movf	strlen@a^0,w,c
  1807  0071F2  5C01               	subwf	strlen@s^0,w,c
  1808  0071F4  6E01               	movwf	?_strlen^0,c
  1809  0071F6  5004               	movf	(strlen@a+1)^0,w,c
  1810  0071F8  5802               	subwfb	(strlen@s+1)^0,w,c
  1811  0071FA  6E02               	movwf	(?_strlen+1)^0,c
  1812  0071FC  0012               	return		;funcret
  1813  0071FE                     __end_of_strlen:
  1814                           	opt callstack 0
  1815                           
  1816 ;; *************** function _fputs *****************
  1817 ;; Defined at:
  1818 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1821 ;;		 -> dbuf(32), 
  1822 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1823 ;;		 -> sprintf@f(6), 
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  i               2   14[COMRAM] int 
  1826 ;;  c               1   13[COMRAM] unsigned char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  2    9[COMRAM] int 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1836 ;;      Params:         4       0       0       0       0       0       0       0       0
  1837 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1839 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1840 ;;Total ram usage:        7 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    2
  1843 ;; This function calls:
  1844 ;;		_fputc
  1845 ;; This function is called by:
  1846 ;;		_pad
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text7
  1851  0072BC                     __ptext7:
  1852                           	opt callstack 0
  1853  0072BC                     _fputs:
  1854                           	opt callstack 23
  1855  0072BC  0E00               	movlw	0
  1856  0072BE  6E10               	movwf	(fputs@i+1)^0,c
  1857  0072C0  0E00               	movlw	0
  1858  0072C2  6E0F               	movwf	fputs@i^0,c
  1859  0072C4  EF6F  F039         	goto	l1697
  1860  0072C8                     l1693:
  1861  0072C8  C00E  F001         	movff	fputs@c,fputc@c
  1862  0072CC  6A02               	clrf	(fputc@c+1)^0,c
  1863  0072CE  C00C  F003         	movff	fputs@fp,fputc@fp
  1864  0072D2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1865  0072D6  ECCA  F03A         	call	_fputc	;wreg free
  1866  0072DA  4A0F               	infsnz	fputs@i^0,f,c
  1867  0072DC  2A10               	incf	(fputs@i+1)^0,f,c
  1868  0072DE                     l1697:
  1869  0072DE  500F               	movf	fputs@i^0,w,c
  1870  0072E0  240A               	addwf	fputs@s^0,w,c
  1871  0072E2  6ED9               	movwf	fsr2l,c
  1872  0072E4  5010               	movf	(fputs@i+1)^0,w,c
  1873  0072E6  200B               	addwfc	(fputs@s+1)^0,w,c
  1874  0072E8  6EDA               	movwf	fsr2h,c
  1875  0072EA  50DF               	movf	indf2,w,c
  1876  0072EC  6E0E               	movwf	fputs@c^0,c
  1877  0072EE  500E               	movf	fputs@c^0,w,c
  1878  0072F0  A4D8               	btfss	status,2,c
  1879  0072F2  EF7D  F039         	goto	u651
  1880  0072F6  EF7F  F039         	goto	u650
  1881  0072FA                     u651:
  1882  0072FA  EF64  F039         	goto	l1693
  1883  0072FE                     u650:
  1884  0072FE  0012               	return		;funcret
  1885  007300                     __end_of_fputs:
  1886                           	opt callstack 0
  1887                           
  1888 ;; *************** function _fputc *****************
  1889 ;; Defined at:
  1890 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  c               2    0[COMRAM] int 
  1893 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1894 ;;		 -> sprintf@f(6), 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  2    0[COMRAM] int 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1906 ;;      Params:         4       0       0       0       0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1908 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1909 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1910 ;;Total ram usage:        9 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    1
  1913 ;; This function calls:
  1914 ;;		_putch
  1915 ;; This function is called by:
  1916 ;;		_pad
  1917 ;;		_vfpfcnvrt
  1918 ;;		_fputs
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text8
  1923  007594                     __ptext8:
  1924                           	opt callstack 0
  1925  007594                     _fputc:
  1926                           	opt callstack 23
  1927  007594  5003               	movf	fputc@fp^0,w,c
  1928  007596  1004               	iorwf	(fputc@fp+1)^0,w,c
  1929  007598  B4D8               	btfsc	status,2,c
  1930  00759A  EFD1  F03A         	goto	u611
  1931  00759E  EFD3  F03A         	goto	u610
  1932  0075A2                     u611:
  1933  0075A2  EFDC  F03A         	goto	l1681
  1934  0075A6                     u610:
  1935  0075A6  5003               	movf	fputc@fp^0,w,c
  1936  0075A8  1004               	iorwf	(fputc@fp+1)^0,w,c
  1937  0075AA  A4D8               	btfss	status,2,c
  1938  0075AC  EFDA  F03A         	goto	u621
  1939  0075B0  EFDC  F03A         	goto	u620
  1940  0075B4                     u621:
  1941  0075B4  EFE1  F03A         	goto	l1683
  1942  0075B8                     u620:
  1943  0075B8                     l1681:
  1944  0075B8  5001               	movf	fputc@c^0,w,c
  1945  0075BA  EC36  F038         	call	_putch
  1946  0075BE  EF2E  F03B         	goto	l1035
  1947  0075C2                     l1683:
  1948  0075C2  EE20 F004          	lfsr	2,4
  1949  0075C6  5003               	movf	fputc@fp^0,w,c
  1950  0075C8  26D9               	addwf	fsr2l,f,c
  1951  0075CA  5004               	movf	(fputc@fp+1)^0,w,c
  1952  0075CC  22DA               	addwfc	fsr2h,f,c
  1953  0075CE  50DE               	movf	postinc2,w,c
  1954  0075D0  10DE               	iorwf	postinc2,w,c
  1955  0075D2  B4D8               	btfsc	status,2,c
  1956  0075D4  EFEE  F03A         	goto	u631
  1957  0075D8  EFF0  F03A         	goto	u630
  1958  0075DC                     u631:
  1959  0075DC  EF0B  F03B         	goto	l1687
  1960  0075E0                     u630:
  1961  0075E0  EE20 F004          	lfsr	2,4
  1962  0075E4  5003               	movf	fputc@fp^0,w,c
  1963  0075E6  26D9               	addwf	fsr2l,f,c
  1964  0075E8  5004               	movf	(fputc@fp+1)^0,w,c
  1965  0075EA  22DA               	addwfc	fsr2h,f,c
  1966  0075EC  EE10 F002          	lfsr	1,2
  1967  0075F0  5003               	movf	fputc@fp^0,w,c
  1968  0075F2  26E1               	addwf	fsr1l,f,c
  1969  0075F4  5004               	movf	(fputc@fp+1)^0,w,c
  1970  0075F6  22E2               	addwfc	fsr1h,f,c
  1971  0075F8  50DE               	movf	postinc2,w,c
  1972  0075FA  5CE6               	subwf	postinc1,w,c
  1973  0075FC  50E6               	movf	postinc1,w,c
  1974  0075FE  0A80               	xorlw	128
  1975  007600  6E09               	movwf	(??_fputc+4)^0,c
  1976  007602  50DE               	movf	postinc2,w,c
  1977  007604  0A80               	xorlw	128
  1978  007606  5809               	subwfb	(??_fputc+4)^0,w,c
  1979  007608  B0D8               	btfsc	status,0,c
  1980  00760A  EF09  F03B         	goto	u641
  1981  00760E  EF0B  F03B         	goto	u640
  1982  007612                     u641:
  1983  007612  EF2E  F03B         	goto	l1035
  1984  007616                     u640:
  1985  007616                     l1687:
  1986  007616  EE20 F002          	lfsr	2,2
  1987  00761A  5003               	movf	fputc@fp^0,w,c
  1988  00761C  26D9               	addwf	fsr2l,f,c
  1989  00761E  5004               	movf	(fputc@fp+1)^0,w,c
  1990  007620  22DA               	addwfc	fsr2h,f,c
  1991  007622  CFDE F005          	movff	postinc2,??_fputc
  1992  007626  CFDD F006          	movff	postdec2,??_fputc+1
  1993  00762A  C003  FFD9         	movff	fputc@fp,fsr2l
  1994  00762E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1995  007632  CFDE F007          	movff	postinc2,??_fputc+2
  1996  007636  CFDD F008          	movff	postdec2,??_fputc+3
  1997  00763A  5005               	movf	??_fputc^0,w,c
  1998  00763C  2407               	addwf	(??_fputc+2)^0,w,c
  1999  00763E  6ED9               	movwf	fsr2l,c
  2000  007640  5006               	movf	(??_fputc+1)^0,w,c
  2001  007642  2008               	addwfc	(??_fputc+3)^0,w,c
  2002  007644  6EDA               	movwf	fsr2h,c
  2003  007646  C001  FFDF         	movff	fputc@c,indf2
  2004  00764A  EE20 F002          	lfsr	2,2
  2005  00764E  5003               	movf	fputc@fp^0,w,c
  2006  007650  26D9               	addwf	fsr2l,f,c
  2007  007652  5004               	movf	(fputc@fp+1)^0,w,c
  2008  007654  22DA               	addwfc	fsr2h,f,c
  2009  007656  2ADE               	incf	postinc2,f,c
  2010  007658  0E00               	movlw	0
  2011  00765A  22DD               	addwfc	postdec2,f,c
  2012  00765C                     l1035:
  2013  00765C  0012               	return		;funcret
  2014  00765E                     __end_of_fputc:
  2015                           	opt callstack 0
  2016                           
  2017 ;; *************** function _putch *****************
  2018 ;; Defined at:
  2019 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  c               1    wreg     unsigned char 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  c               1    0[COMRAM] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2033 ;;      Params:         0       0       0       0       0       0       0       0       0
  2034 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2036 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_fputc
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text9
  2047  00706C                     __ptext9:
  2048                           	opt callstack 0
  2049  00706C                     _putch:
  2050                           	opt callstack 23
  2051  00706C  0012               	return		;funcret
  2052  00706E                     __end_of_putch:
  2053                           	opt callstack 0
  2054                           
  2055 ;; *************** function ___lomod *****************
  2056 ;; Defined at:
  2057 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  dividend        8    0[COMRAM] unsigned long long 
  2060 ;;  divisor         8    8[COMRAM] unsigned long long 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  counter         1   16[COMRAM] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  8    0[COMRAM] unsigned long long 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2072 ;;      Params:        16       0       0       0       0       0       0       0       0
  2073 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2075 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2076 ;;Total ram usage:       17 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_utoa
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text10
  2086  00765E                     __ptext10:
  2087                           	opt callstack 0
  2088  00765E                     ___lomod:
  2089                           	opt callstack 26
  2090  00765E  5009               	movf	___lomod@divisor^0,w,c
  2091  007660  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2092  007662  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2093  007664  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2094  007666  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2095  007668  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2096  00766A  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2097  00766C  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2098  00766E  B4D8               	btfsc	status,2,c
  2099  007670  EF3C  F03B         	goto	u771
  2100  007674  EF3E  F03B         	goto	u770
  2101  007678                     u771:
  2102  007678  EF86  F03B         	goto	l755
  2103  00767C                     u770:
  2104  00767C  0E01               	movlw	1
  2105  00767E  6E11               	movwf	___lomod@counter^0,c
  2106  007680  EF4C  F03B         	goto	l1769
  2107  007684                     l1767:
  2108  007684  90D8               	bcf	status,0,c
  2109  007686  3609               	rlcf	___lomod@divisor^0,f,c
  2110  007688  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2111  00768A  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2112  00768C  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2113  00768E  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2114  007690  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2115  007692  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2116  007694  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2117  007696  2A11               	incf	___lomod@counter^0,f,c
  2118  007698                     l1769:
  2119  007698  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2120  00769A  EF51  F03B         	goto	u781
  2121  00769E  EF53  F03B         	goto	u780
  2122  0076A2                     u781:
  2123  0076A2  EF42  F03B         	goto	l1767
  2124  0076A6                     u780:
  2125  0076A6                     l1771:
  2126  0076A6  5009               	movf	___lomod@divisor^0,w,c
  2127  0076A8  5C01               	subwf	___lomod@dividend^0,w,c
  2128  0076AA  500A               	movf	(___lomod@divisor+1)^0,w,c
  2129  0076AC  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2130  0076AE  500B               	movf	(___lomod@divisor+2)^0,w,c
  2131  0076B0  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2132  0076B2  500C               	movf	(___lomod@divisor+3)^0,w,c
  2133  0076B4  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2134  0076B6  500D               	movf	(___lomod@divisor+4)^0,w,c
  2135  0076B8  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2136  0076BA  500E               	movf	(___lomod@divisor+5)^0,w,c
  2137  0076BC  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2138  0076BE  500F               	movf	(___lomod@divisor+6)^0,w,c
  2139  0076C0  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2140  0076C2  5010               	movf	(___lomod@divisor+7)^0,w,c
  2141  0076C4  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2142  0076C6  A0D8               	btfss	status,0,c
  2143  0076C8  EF68  F03B         	goto	u791
  2144  0076CC  EF6A  F03B         	goto	u790
  2145  0076D0                     u791:
  2146  0076D0  EF7A  F03B         	goto	l1775
  2147  0076D4                     u790:
  2148  0076D4  5009               	movf	___lomod@divisor^0,w,c
  2149  0076D6  5E01               	subwf	___lomod@dividend^0,f,c
  2150  0076D8  500A               	movf	(___lomod@divisor+1)^0,w,c
  2151  0076DA  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2152  0076DC  500B               	movf	(___lomod@divisor+2)^0,w,c
  2153  0076DE  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2154  0076E0  500C               	movf	(___lomod@divisor+3)^0,w,c
  2155  0076E2  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2156  0076E4  500D               	movf	(___lomod@divisor+4)^0,w,c
  2157  0076E6  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2158  0076E8  500E               	movf	(___lomod@divisor+5)^0,w,c
  2159  0076EA  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2160  0076EC  500F               	movf	(___lomod@divisor+6)^0,w,c
  2161  0076EE  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2162  0076F0  5010               	movf	(___lomod@divisor+7)^0,w,c
  2163  0076F2  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2164  0076F4                     l1775:
  2165  0076F4  90D8               	bcf	status,0,c
  2166  0076F6  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2167  0076F8  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2168  0076FA  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2169  0076FC  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2170  0076FE  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2171  007700  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2172  007702  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2173  007704  3209               	rrcf	___lomod@divisor^0,f,c
  2174  007706  2E11               	decfsz	___lomod@counter^0,f,c
  2175  007708  EF53  F03B         	goto	l1771
  2176  00770C                     l755:
  2177  00770C  C001  F001         	movff	___lomod@dividend,?___lomod
  2178  007710  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2179  007714  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2180  007718  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2181  00771C  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2182  007720  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2183  007724  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2184  007728  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2185  00772C  0012               	return		;funcret
  2186  00772E                     __end_of___lomod:
  2187                           	opt callstack 0
  2188                           
  2189 ;; *************** function ___lodiv *****************
  2190 ;; Defined at:
  2191 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  dividend        8    0[COMRAM] unsigned long long 
  2194 ;;  divisor         8    8[COMRAM] unsigned long long 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  quotient        8   16[COMRAM] unsigned long long 
  2197 ;;  counter         1   24[COMRAM] unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  8    0[COMRAM] unsigned long long 
  2200 ;; Registers used:
  2201 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2207 ;;      Params:        16       0       0       0       0       0       0       0       0
  2208 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2210 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2211 ;;Total ram usage:       25 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_utoa
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text11
  2221  00772E                     __ptext11:
  2222                           	opt callstack 0
  2223  00772E                     ___lodiv:
  2224                           	opt callstack 26
  2225  00772E  EE20  F011         	lfsr	2,___lodiv@quotient
  2226  007732  0E07               	movlw	7
  2227  007734                     u731:
  2228  007734  6ADE               	clrf	postinc2,c
  2229  007736  06E8               	decf	wreg,f,c
  2230  007738  E2FD               	bc	u731
  2231  00773A  5009               	movf	___lodiv@divisor^0,w,c
  2232  00773C  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2233  00773E  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2234  007740  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2235  007742  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2236  007744  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2237  007746  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2238  007748  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2239  00774A  B4D8               	btfsc	status,2,c
  2240  00774C  EFAA  F03B         	goto	u741
  2241  007750  EFAC  F03B         	goto	u740
  2242  007754                     u741:
  2243  007754  EFFE  F03B         	goto	l745
  2244  007758                     u740:
  2245  007758  0E01               	movlw	1
  2246  00775A  6E19               	movwf	___lodiv@counter^0,c
  2247  00775C  EFBA  F03B         	goto	l1749
  2248  007760                     l1747:
  2249  007760  90D8               	bcf	status,0,c
  2250  007762  3609               	rlcf	___lodiv@divisor^0,f,c
  2251  007764  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2252  007766  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2253  007768  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2254  00776A  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2255  00776C  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2256  00776E  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2257  007770  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2258  007772  2A19               	incf	___lodiv@counter^0,f,c
  2259  007774                     l1749:
  2260  007774  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2261  007776  EFBF  F03B         	goto	u751
  2262  00777A  EFC1  F03B         	goto	u750
  2263  00777E                     u751:
  2264  00777E  EFB0  F03B         	goto	l1747
  2265  007782                     u750:
  2266  007782                     l1751:
  2267  007782  90D8               	bcf	status,0,c
  2268  007784  3611               	rlcf	___lodiv@quotient^0,f,c
  2269  007786  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2270  007788  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2271  00778A  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2272  00778C  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2273  00778E  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2274  007790  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2275  007792  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2276  007794  5009               	movf	___lodiv@divisor^0,w,c
  2277  007796  5C01               	subwf	___lodiv@dividend^0,w,c
  2278  007798  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2279  00779A  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2280  00779C  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2281  00779E  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2282  0077A0  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2283  0077A2  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2284  0077A4  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2285  0077A6  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2286  0077A8  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2287  0077AA  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2288  0077AC  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2289  0077AE  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2290  0077B0  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2291  0077B2  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2292  0077B4  A0D8               	btfss	status,0,c
  2293  0077B6  EFDF  F03B         	goto	u761
  2294  0077BA  EFE1  F03B         	goto	u760
  2295  0077BE                     u761:
  2296  0077BE  EFF2  F03B         	goto	l1759
  2297  0077C2                     u760:
  2298  0077C2  5009               	movf	___lodiv@divisor^0,w,c
  2299  0077C4  5E01               	subwf	___lodiv@dividend^0,f,c
  2300  0077C6  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2301  0077C8  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2302  0077CA  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2303  0077CC  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2304  0077CE  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2305  0077D0  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2306  0077D2  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2307  0077D4  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2308  0077D6  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2309  0077D8  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2310  0077DA  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2311  0077DC  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2312  0077DE  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2313  0077E0  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2314  0077E2  8011               	bsf	___lodiv@quotient^0,0,c
  2315  0077E4                     l1759:
  2316  0077E4  90D8               	bcf	status,0,c
  2317  0077E6  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2318  0077E8  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2319  0077EA  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2320  0077EC  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2321  0077EE  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2322  0077F0  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2323  0077F2  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2324  0077F4  3209               	rrcf	___lodiv@divisor^0,f,c
  2325  0077F6  2E19               	decfsz	___lodiv@counter^0,f,c
  2326  0077F8  EFC1  F03B         	goto	l1751
  2327  0077FC                     l745:
  2328  0077FC  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2329  007800  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2330  007804  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2331  007808  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2332  00780C  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2333  007810  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2334  007814  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2335  007818  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2336  00781C  0012               	return		;funcret
  2337  00781E                     __end_of___lodiv:
  2338                           	opt callstack 0
  2339                           
  2340 ;; *************** function _atoi *****************
  2341 ;; Defined at:
  2342 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2345 ;;		 -> STR_1(5), 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  n               2   20[COMRAM] int 
  2348 ;;  neg             2   13[COMRAM] int 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  2    7[COMRAM] int 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2358 ;;      Params:         2       0       0       0       0       0       0       0       0
  2359 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2360 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2361 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2362 ;;Total ram usage:       15 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    1
  2365 ;; This function calls:
  2366 ;;		___wmul
  2367 ;;		_isdigit
  2368 ;;		_isspace
  2369 ;; This function is called by:
  2370 ;;		_vfpfcnvrt
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text12
  2375  00791A                     __ptext12:
  2376                           	opt callstack 0
  2377  00791A                     _atoi:
  2378                           	opt callstack 26
  2379  00791A  0E00               	movlw	0
  2380  00791C  6E16               	movwf	(atoi@n+1)^0,c
  2381  00791E  0E00               	movlw	0
  2382  007920  6E15               	movwf	atoi@n^0,c
  2383  007922  0E00               	movlw	0
  2384  007924  6E0F               	movwf	(atoi@neg+1)^0,c
  2385  007926  0E00               	movlw	0
  2386  007928  6E0E               	movwf	atoi@neg^0,c
  2387  00792A  EF99  F03C         	goto	l1839
  2388  00792E                     l1837:
  2389  00792E  4A08               	infsnz	atoi@s^0,f,c
  2390  007930  2A09               	incf	(atoi@s+1)^0,f,c
  2391  007932                     l1839:
  2392  007932  0E01               	movlw	1
  2393  007934  6E14               	movwf	_atoi$1070^0,c
  2394  007936  C008  FFF6         	movff	atoi@s,tblptrl
  2395  00793A  C009  FFF7         	movff	atoi@s+1,tblptrh
  2396  00793E                     	if	0	;tblptru may be non-zero
  2397  00793E                     	endif
  2398  00793E                     	if	0	;tblptru may be non-zero
  2399  00793E                     	endif
  2400  00793E  0008               	tblrd		*
  2401  007940  50F5               	movf	tablat,w,c
  2402  007942  0A20               	xorlw	32
  2403  007944  B4D8               	btfsc	status,2,c
  2404  007946  EFA7  F03C         	goto	u901
  2405  00794A  EFA9  F03C         	goto	u900
  2406  00794E                     u901:
  2407  00794E  EFC6  F03C         	goto	l1847
  2408  007952                     u900:
  2409  007952  0EF7               	movlw	247
  2410  007954  6E0A               	movwf	??_atoi^0,c
  2411  007956  0EFF               	movlw	255
  2412  007958  6E0B               	movwf	(??_atoi+1)^0,c
  2413  00795A  C008  FFF6         	movff	atoi@s,tblptrl
  2414  00795E  C009  FFF7         	movff	atoi@s+1,tblptrh
  2415  007962                     	if	0	;tblptru may be non-zero
  2416  007962                     	endif
  2417  007962                     	if	0	;tblptru may be non-zero
  2418  007962                     	endif
  2419  007962  0008               	tblrd		*
  2420  007964  50F5               	movf	tablat,w,c
  2421  007966  6E0C               	movwf	(??_atoi+2)^0,c
  2422  007968  6A0D               	clrf	(??_atoi+3)^0,c
  2423  00796A  500A               	movf	??_atoi^0,w,c
  2424  00796C  260C               	addwf	(??_atoi+2)^0,f,c
  2425  00796E  500B               	movf	(??_atoi+1)^0,w,c
  2426  007970  220D               	addwfc	(??_atoi+3)^0,f,c
  2427  007972  500D               	movf	(??_atoi+3)^0,w,c
  2428  007974  E109               	bnz	u910
  2429  007976  0E05               	movlw	5
  2430  007978  5C0C               	subwf	(??_atoi+2)^0,w,c
  2431  00797A  A0D8               	btfss	status,0,c
  2432  00797C  EFC2  F03C         	goto	u911
  2433  007980  EFC4  F03C         	goto	u910
  2434  007984                     u911:
  2435  007984  EFC6  F03C         	goto	l1847
  2436  007988                     u910:
  2437  007988  0E00               	movlw	0
  2438  00798A  6E14               	movwf	_atoi$1070^0,c
  2439  00798C                     l1847:
  2440  00798C  C014  F010         	movff	_atoi$1070,_atoi$1069
  2441  007990  6A11               	clrf	(_atoi$1069+1)^0,c
  2442  007992  5010               	movf	_atoi$1069^0,w,c
  2443  007994  1011               	iorwf	(_atoi$1069+1)^0,w,c
  2444  007996  A4D8               	btfss	status,2,c
  2445  007998  EFD0  F03C         	goto	u921
  2446  00799C  EFD2  F03C         	goto	u920
  2447  0079A0                     u921:
  2448  0079A0  EF97  F03C         	goto	l1837
  2449  0079A4                     u920:
  2450  0079A4  EFDC  F03C         	goto	l1857
  2451  0079A8                     l1853:
  2452  0079A8  0E00               	movlw	0
  2453  0079AA  6E0F               	movwf	(atoi@neg+1)^0,c
  2454  0079AC  0E01               	movlw	1
  2455  0079AE  6E0E               	movwf	atoi@neg^0,c
  2456  0079B0                     l1855:
  2457  0079B0  4A08               	infsnz	atoi@s^0,f,c
  2458  0079B2  2A09               	incf	(atoi@s+1)^0,f,c
  2459  0079B4  EF11  F03D         	goto	l1863
  2460  0079B8                     l1857:
  2461  0079B8  C008  FFF6         	movff	atoi@s,tblptrl
  2462  0079BC  C009  FFF7         	movff	atoi@s+1,tblptrh
  2463  0079C0                     	if	0	;tblptru may be non-zero
  2464  0079C0                     	endif
  2465  0079C0                     	if	0	;tblptru may be non-zero
  2466  0079C0                     	endif
  2467  0079C0  0008               	tblrd		*
  2468  0079C2  50F5               	movf	tablat,w,c
  2469  0079C4  6E0A               	movwf	??_atoi^0,c
  2470  0079C6  6A0B               	clrf	(??_atoi+1)^0,c
  2471                           
  2472                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2473                           ; Switch size 1, requested type "simple"
  2474                           ; Number of cases is 1, Range of values is 0 to 0
  2475                           ; switch strategies available:
  2476                           ; Name         Instructions Cycles
  2477                           ; simple_byte            4     3 (average)
  2478                           ;	Chosen strategy is simple_byte
  2479  0079C8  500B               	movf	(??_atoi+1)^0,w,c
  2480  0079CA  0A00               	xorlw	0	; case 0
  2481  0079CC  B4D8               	btfsc	status,2,c
  2482  0079CE  EFEB  F03C         	goto	l2339
  2483  0079D2  EF11  F03D         	goto	l1863
  2484  0079D6                     l2339:
  2485                           
  2486                           ; Switch size 1, requested type "simple"
  2487                           ; Number of cases is 2, Range of values is 43 to 45
  2488                           ; switch strategies available:
  2489                           ; Name         Instructions Cycles
  2490                           ; simple_byte            7     4 (average)
  2491                           ;	Chosen strategy is simple_byte
  2492  0079D6  500A               	movf	??_atoi^0,w,c
  2493  0079D8  0A2B               	xorlw	43	; case 43
  2494  0079DA  B4D8               	btfsc	status,2,c
  2495  0079DC  EFD8  F03C         	goto	l1855
  2496  0079E0  0A06               	xorlw	6	; case 45
  2497  0079E2  B4D8               	btfsc	status,2,c
  2498  0079E4  EFD4  F03C         	goto	l1853
  2499  0079E8  EF11  F03D         	goto	l1863
  2500  0079EC                     l1859:
  2501  0079EC  C015  F001         	movff	atoi@n,___wmul@multiplier
  2502  0079F0  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  2503  0079F4  0E00               	movlw	0
  2504  0079F6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2505  0079F8  0E0A               	movlw	10
  2506  0079FA  6E03               	movwf	___wmul@multiplicand^0,c
  2507  0079FC  ECA5  F038         	call	___wmul	;wreg free
  2508  007A00  C008  FFF6         	movff	atoi@s,tblptrl
  2509  007A04  C009  FFF7         	movff	atoi@s+1,tblptrh
  2510  007A08                     	if	0	;tblptru may be non-zero
  2511  007A08                     	endif
  2512  007A08                     	if	0	;tblptru may be non-zero
  2513  007A08                     	endif
  2514  007A08  0008               	tblrd		*
  2515  007A0A  50F5               	movf	tablat,w,c
  2516  007A0C  5E01               	subwf	?___wmul^0,f,c
  2517  007A0E  0E00               	movlw	0
  2518  007A10  5A02               	subwfb	(?___wmul+1)^0,f,c
  2519  007A12  0E30               	movlw	48
  2520  007A14  2401               	addwf	?___wmul^0,w,c
  2521  007A16  6E15               	movwf	atoi@n^0,c
  2522  007A18  0E00               	movlw	0
  2523  007A1A  2002               	addwfc	(?___wmul+1)^0,w,c
  2524  007A1C  6E16               	movwf	(atoi@n+1)^0,c
  2525  007A1E  EFD8  F03C         	goto	l1855
  2526  007A22                     l1863:
  2527  007A22  0ED0               	movlw	208
  2528  007A24  6E0A               	movwf	??_atoi^0,c
  2529  007A26  0EFF               	movlw	255
  2530  007A28  6E0B               	movwf	(??_atoi+1)^0,c
  2531  007A2A  C008  FFF6         	movff	atoi@s,tblptrl
  2532  007A2E  C009  FFF7         	movff	atoi@s+1,tblptrh
  2533  007A32                     	if	0	;tblptru may be non-zero
  2534  007A32                     	endif
  2535  007A32                     	if	0	;tblptru may be non-zero
  2536  007A32                     	endif
  2537  007A32  0008               	tblrd		*
  2538  007A34  50F5               	movf	tablat,w,c
  2539  007A36  6E0C               	movwf	(??_atoi+2)^0,c
  2540  007A38  6A0D               	clrf	(??_atoi+3)^0,c
  2541  007A3A  500A               	movf	??_atoi^0,w,c
  2542  007A3C  260C               	addwf	(??_atoi+2)^0,f,c
  2543  007A3E  500B               	movf	(??_atoi+1)^0,w,c
  2544  007A40  220D               	addwfc	(??_atoi+3)^0,f,c
  2545  007A42  500D               	movf	(??_atoi+3)^0,w,c
  2546  007A44  E10A               	bnz	u930
  2547  007A46  0E0A               	movlw	10
  2548  007A48  5C0C               	subwf	(??_atoi+2)^0,w,c
  2549  007A4A  A0D8               	btfss	status,0,c
  2550  007A4C  EF2A  F03D         	goto	u931
  2551  007A50  EF2D  F03D         	goto	u930
  2552  007A54                     u931:
  2553  007A54  0E01               	movlw	1
  2554  007A56  EF2E  F03D         	goto	u940
  2555  007A5A                     u930:
  2556  007A5A  0E00               	movlw	0
  2557  007A5C                     u940:
  2558  007A5C  6E12               	movwf	_atoi$1071^0,c
  2559  007A5E  6A13               	clrf	(_atoi$1071+1)^0,c
  2560  007A60  5012               	movf	_atoi$1071^0,w,c
  2561  007A62  1013               	iorwf	(_atoi$1071+1)^0,w,c
  2562  007A64  A4D8               	btfss	status,2,c
  2563  007A66  EF37  F03D         	goto	u951
  2564  007A6A  EF39  F03D         	goto	u950
  2565  007A6E                     u951:
  2566  007A6E  EFF6  F03C         	goto	l1859
  2567  007A72                     u950:
  2568  007A72  500E               	movf	atoi@neg^0,w,c
  2569  007A74  100F               	iorwf	(atoi@neg+1)^0,w,c
  2570  007A76  A4D8               	btfss	status,2,c
  2571  007A78  EF40  F03D         	goto	u961
  2572  007A7C  EF42  F03D         	goto	u960
  2573  007A80                     u961:
  2574  007A80  EF50  F03D         	goto	l1006
  2575  007A84                     u960:
  2576  007A84  C015  F00A         	movff	atoi@n,??_atoi
  2577  007A88  C016  F00B         	movff	atoi@n+1,??_atoi+1
  2578  007A8C  1E0A               	comf	??_atoi^0,f,c
  2579  007A8E  1E0B               	comf	(??_atoi+1)^0,f,c
  2580  007A90  4A0A               	infsnz	??_atoi^0,f,c
  2581  007A92  2A0B               	incf	(??_atoi+1)^0,f,c
  2582  007A94  C00A  F008         	movff	??_atoi,?_atoi
  2583  007A98  C00B  F009         	movff	??_atoi+1,?_atoi+1
  2584  007A9C  EF54  F03D         	goto	l1009
  2585  007AA0                     l1006:
  2586  007AA0  C015  F008         	movff	atoi@n,?_atoi
  2587  007AA4  C016  F009         	movff	atoi@n+1,?_atoi+1
  2588  007AA8                     l1009:
  2589  007AA8  0012               	return		;funcret
  2590  007AAA                     __end_of_atoi:
  2591                           	opt callstack 0
  2592                           
  2593 ;; *************** function _isspace *****************
  2594 ;; Defined at:
  2595 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  c               2    0[COMRAM] int 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  2    0[COMRAM] int 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2609 ;;      Params:         2       0       0       0       0       0       0       0       0
  2610 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2611 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2612 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2613 ;;Total ram usage:        7 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_atoi
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text13
  2623  00734A                     __ptext13:
  2624                           	opt callstack 0
  2625  00734A                     _isspace:
  2626                           	opt callstack 26
  2627  00734A  0E01               	movlw	1
  2628  00734C  6E07               	movwf	_isspace$1087^0,c
  2629  00734E  0E20               	movlw	32
  2630  007350  1801               	xorwf	isspace@c^0,w,c
  2631  007352  1002               	iorwf	(isspace@c+1)^0,w,c
  2632  007354  B4D8               	btfsc	status,2,c
  2633  007356  EFAF  F039         	goto	u801
  2634  00735A  EFB1  F039         	goto	u800
  2635  00735E                     u801:
  2636  00735E  EFCA  F039         	goto	l1787
  2637  007362                     u800:
  2638  007362  0EF7               	movlw	247
  2639  007364  6E03               	movwf	??_isspace^0,c
  2640  007366  0EFF               	movlw	255
  2641  007368  6E04               	movwf	(??_isspace+1)^0,c
  2642  00736A  C001  F005         	movff	isspace@c,??_isspace+2
  2643  00736E  C002  F006         	movff	isspace@c+1,??_isspace+3
  2644  007372  5003               	movf	??_isspace^0,w,c
  2645  007374  2605               	addwf	(??_isspace+2)^0,f,c
  2646  007376  5004               	movf	(??_isspace+1)^0,w,c
  2647  007378  2206               	addwfc	(??_isspace+3)^0,f,c
  2648  00737A  5006               	movf	(??_isspace+3)^0,w,c
  2649  00737C  E109               	bnz	u810
  2650  00737E  0E05               	movlw	5
  2651  007380  5C05               	subwf	(??_isspace+2)^0,w,c
  2652  007382  A0D8               	btfss	status,0,c
  2653  007384  EFC6  F039         	goto	u811
  2654  007388  EFC8  F039         	goto	u810
  2655  00738C                     u811:
  2656  00738C  EFCA  F039         	goto	l1787
  2657  007390                     u810:
  2658  007390  0E00               	movlw	0
  2659  007392  6E07               	movwf	_isspace$1087^0,c
  2660  007394                     l1787:
  2661  007394  C007  F001         	movff	_isspace$1087,?_isspace
  2662  007398  6A02               	clrf	(?_isspace+1)^0,c
  2663  00739A  0012               	return		;funcret
  2664  00739C                     __end_of_isspace:
  2665                           	opt callstack 0
  2666                           
  2667 ;; *************** function _isdigit *****************
  2668 ;; Defined at:
  2669 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  c               2    0[COMRAM] int 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  2    0[COMRAM] int 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2683 ;;      Params:         2       0       0       0       0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2685 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2686 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2687 ;;Total ram usage:        6 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_vfpfcnvrt
  2693 ;;		_atoi
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text14
  2698  0071FE                     __ptext14:
  2699                           	opt callstack 0
  2700  0071FE                     _isdigit:
  2701                           	opt callstack 27
  2702  0071FE  0ED0               	movlw	208
  2703  007200  6E03               	movwf	??_isdigit^0,c
  2704  007202  0EFF               	movlw	255
  2705  007204  6E04               	movwf	(??_isdigit+1)^0,c
  2706  007206  C001  F005         	movff	isdigit@c,??_isdigit+2
  2707  00720A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  2708  00720E  5003               	movf	??_isdigit^0,w,c
  2709  007210  2605               	addwf	(??_isdigit+2)^0,f,c
  2710  007212  5004               	movf	(??_isdigit+1)^0,w,c
  2711  007214  2206               	addwfc	(??_isdigit+3)^0,f,c
  2712  007216  5006               	movf	(??_isdigit+3)^0,w,c
  2713  007218  E10A               	bnz	u710
  2714  00721A  0E0A               	movlw	10
  2715  00721C  5C05               	subwf	(??_isdigit+2)^0,w,c
  2716  00721E  A0D8               	btfss	status,0,c
  2717  007220  EF14  F039         	goto	u711
  2718  007224  EF17  F039         	goto	u710
  2719  007228                     u711:
  2720  007228  0E01               	movlw	1
  2721  00722A  EF18  F039         	goto	u720
  2722  00722E                     u710:
  2723  00722E  0E00               	movlw	0
  2724  007230                     u720:
  2725  007230  6E01               	movwf	?_isdigit^0,c
  2726  007232  6A02               	clrf	(?_isdigit+1)^0,c
  2727  007234  0012               	return		;funcret
  2728  007236                     __end_of_isdigit:
  2729                           	opt callstack 0
  2730                           
  2731 ;; *************** function ___wmul *****************
  2732 ;; Defined at:
  2733 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  multiplier      2    0[COMRAM] unsigned int 
  2736 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  product         2    4[COMRAM] unsigned int 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  2    0[COMRAM] unsigned int 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0, prodl, prodh
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2748 ;;      Params:         4       0       0       0       0       0       0       0       0
  2749 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2751 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2752 ;;Total ram usage:        6 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_atoi
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text15
  2762  00714A                     __ptext15:
  2763                           	opt callstack 0
  2764  00714A                     ___wmul:
  2765                           	opt callstack 26
  2766  00714A  5001               	movf	___wmul@multiplier^0,w,c
  2767  00714C  0203               	mulwf	___wmul@multiplicand^0,c
  2768  00714E  CFF3 F005          	movff	prodl,___wmul@product
  2769  007152  CFF4 F006          	movff	prodh,___wmul@product+1
  2770  007156  5001               	movf	___wmul@multiplier^0,w,c
  2771  007158  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2772  00715A  50F3               	movf	243,w,c
  2773  00715C  2606               	addwf	(___wmul@product+1)^0,f,c
  2774  00715E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2775  007160  0203               	mulwf	___wmul@multiplicand^0,c
  2776  007162  50F3               	movf	243,w,c
  2777  007164  2606               	addwf	(___wmul@product+1)^0,f,c
  2778  007166  C005  F001         	movff	___wmul@product,?___wmul
  2779  00716A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2780  00716E  0012               	return		;funcret
  2781  007170                     __end_of___wmul:
  2782                           	opt callstack 0
  2783                           
  2784 ;; *************** function _putsXLCD *****************
  2785 ;; Defined at:
  2786 ;;		line 16 in file "XLCD/putsxlcd.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  2789 ;;		 -> strResultado(5), 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2801 ;;      Params:         2       0       0       0       0       0       0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2804 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2805 ;;Total ram usage:        2 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    2
  2808 ;; This function calls:
  2809 ;;		_BusyXLCD
  2810 ;;		_WriteDataXLCD
  2811 ;; This function is called by:
  2812 ;;		_main
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text16
  2817  007278                     __ptext16:
  2818                           	opt callstack 0
  2819  007278                     _putsXLCD:
  2820                           	opt callstack 28
  2821  007278                     
  2822                           ;XLCD/putsxlcd.c: 16: void putsXLCD(char *buffer);XLCD/putsxlcd.c: 17: {;XLCD/putsxlcd.c
      +                          : 18:         while(*buffer)
  2823  007278  EF51  F039         	goto	l2143
  2824  00727C                     l2137:
  2825  00727C  ECCD  F038         	call	_BusyXLCD	;wreg free
  2826  007280  0900               	iorlw	0
  2827  007282  A4D8               	btfss	status,2,c
  2828  007284  EF46  F039         	goto	u1181
  2829  007288  EF48  F039         	goto	u1180
  2830  00728C                     u1181:
  2831  00728C  EF3E  F039         	goto	l2137
  2832  007290                     u1180:
  2833  007290                     
  2834                           ;XLCD/putsxlcd.c: 21:                 WriteDataXLCD(*buffer);
  2835  007290  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  2836  007294  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  2837  007298  50DF               	movf	indf2,w,c
  2838  00729A  EC5F  F038         	call	_WriteDataXLCD
  2839  00729E                     
  2840                           ;XLCD/putsxlcd.c: 22:                 buffer++;
  2841  00729E  4A02               	infsnz	putsXLCD@buffer^0,f,c
  2842  0072A0  2A03               	incf	(putsXLCD@buffer+1)^0,f,c
  2843  0072A2                     l2143:
  2844                           
  2845                           ;XLCD/putsxlcd.c: 18:         while(*buffer)
  2846  0072A2  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  2847  0072A6  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  2848  0072AA  50DF               	movf	indf2,w,c
  2849  0072AC  A4D8               	btfss	status,2,c
  2850  0072AE  EF5B  F039         	goto	u1191
  2851  0072B2  EF5D  F039         	goto	u1190
  2852  0072B6                     u1191:
  2853  0072B6  EF3E  F039         	goto	l2137
  2854  0072BA                     u1190:
  2855  0072BA  0012               	return		;funcret
  2856  0072BC                     __end_of_putsXLCD:
  2857                           	opt callstack 0
  2858                           
  2859 ;; *************** function _initLCD *****************
  2860 ;; Defined at:
  2861 ;;		line 60 in file "main.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    3
  2882 ;; This function calls:
  2883 ;;		_OpenXLCD
  2884 ;;		_WriteCmdXLCD
  2885 ;;		_putrsXLCD
  2886 ;; This function is called by:
  2887 ;;		_main
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text17
  2892  007124                     __ptext17:
  2893                           	opt callstack 0
  2894  007124                     _initLCD:
  2895                           	opt callstack 27
  2896  007124                     
  2897                           ;main.c: 61:     OpenXLCD(0b00111100 & 0b00111000);
  2898  007124  0E38               	movlw	56
  2899  007126  EC0F  F03C         	call	_OpenXLCD
  2900  00712A                     
  2901                           ;main.c: 62:     WriteCmdXLCD(0b00000110);
  2902  00712A  0E06               	movlw	6
  2903  00712C  EC6F  F038         	call	_WriteCmdXLCD
  2904  007130                     
  2905                           ;main.c: 63:     WriteCmdXLCD(0b00001111);
  2906  007130  0E0F               	movlw	15
  2907  007132  EC6F  F038         	call	_WriteCmdXLCD
  2908  007136                     
  2909                           ;main.c: 64:     WriteCmdXLCD(0b00001110);
  2910  007136  0E0E               	movlw	14
  2911  007138  EC6F  F038         	call	_WriteCmdXLCD
  2912  00713C                     
  2913                           ;main.c: 65:     putrsXLCD("Convertidor AD:");
  2914  00713C  0E05               	movlw	low STR_2
  2915  00713E  6E02               	movwf	putrsXLCD@buffer^0,c
  2916  007140  0E10               	movlw	high STR_2
  2917  007142  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  2918  007144  EC80  F039         	call	_putrsXLCD	;wreg free
  2919  007148  0012               	return		;funcret
  2920  00714A                     __end_of_initLCD:
  2921                           	opt callstack 0
  2922                           
  2923 ;; *************** function _putrsXLCD *****************
  2924 ;; Defined at:
  2925 ;;		line 16 in file "XLCD/putrxlcd.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
  2928 ;;		 -> STR_2(16), 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2940 ;;      Params:         2       0       0       0       0       0       0       0       0
  2941 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2943 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2944 ;;Total ram usage:        2 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    2
  2947 ;; This function calls:
  2948 ;;		_BusyXLCD
  2949 ;;		_WriteDataXLCD
  2950 ;; This function is called by:
  2951 ;;		_initLCD
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text18
  2956  007300                     __ptext18:
  2957                           	opt callstack 0
  2958  007300                     _putrsXLCD:
  2959                           	opt callstack 27
  2960  007300                     
  2961                           ;XLCD/putrxlcd.c: 16: void putrsXLCD(const char *buffer);XLCD/putrxlcd.c: 17: {;XLCD/put
      +                          rxlcd.c: 18:         while(*buffer)
  2962  007300  EF96  F039         	goto	l2123
  2963  007304                     l2117:
  2964  007304  ECCD  F038         	call	_BusyXLCD	;wreg free
  2965  007308  0900               	iorlw	0
  2966  00730A  A4D8               	btfss	status,2,c
  2967  00730C  EF8A  F039         	goto	u1151
  2968  007310  EF8C  F039         	goto	u1150
  2969  007314                     u1151:
  2970  007314  EF82  F039         	goto	l2117
  2971  007318                     u1150:
  2972  007318                     
  2973                           ;XLCD/putrxlcd.c: 21:                 WriteDataXLCD(*buffer);
  2974  007318  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2975  00731C  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2976  007320                     	if	0	;tblptru may be non-zero
  2977  007320                     	endif
  2978  007320                     	if	0	;tblptru may be non-zero
  2979  007320                     	endif
  2980  007320  0008               	tblrd		*
  2981  007322  50F5               	movf	tablat,w,c
  2982  007324  EC5F  F038         	call	_WriteDataXLCD
  2983  007328                     
  2984                           ;XLCD/putrxlcd.c: 22:                 buffer++;
  2985  007328  4A02               	infsnz	putrsXLCD@buffer^0,f,c
  2986  00732A  2A03               	incf	(putrsXLCD@buffer+1)^0,f,c
  2987  00732C                     l2123:
  2988                           
  2989                           ;XLCD/putrxlcd.c: 18:         while(*buffer)
  2990  00732C  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2991  007330  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2992  007334                     	if	0	;tblptru may be non-zero
  2993  007334                     	endif
  2994  007334                     	if	0	;tblptru may be non-zero
  2995  007334                     	endif
  2996  007334  0008               	tblrd		*
  2997  007336  50F5               	movf	tablat,w,c
  2998  007338  0900               	iorlw	0
  2999  00733A  A4D8               	btfss	status,2,c
  3000  00733C  EFA2  F039         	goto	u1161
  3001  007340  EFA4  F039         	goto	u1160
  3002  007344                     u1161:
  3003  007344  EF82  F039         	goto	l2117
  3004  007348                     u1160:
  3005  007348  0012               	return		;funcret
  3006  00734A                     __end_of_putrsXLCD:
  3007                           	opt callstack 0
  3008                           
  3009 ;; *************** function _WriteDataXLCD *****************
  3010 ;; Defined at:
  3011 ;;		line 16 in file "XLCD/writdata.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  data            1    wreg     unsigned char 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  data            1    0[COMRAM] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3025 ;;      Params:         0       0       0       0       0       0       0       0       0
  3026 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3028 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3029 ;;Total ram usage:        1 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    1
  3032 ;; This function calls:
  3033 ;;		_DelayFor18TCY
  3034 ;; This function is called by:
  3035 ;;		_putrsXLCD
  3036 ;;		_putsXLCD
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text19
  3041  0070BE                     __ptext19:
  3042                           	opt callstack 0
  3043  0070BE                     _WriteDataXLCD:
  3044                           	opt callstack 28
  3045                           
  3046                           ;incstack = 0
  3047                           ;WriteDataXLCD@data stored from wreg
  3048  0070BE  6E01               	movwf	WriteDataXLCD@data^0,c
  3049  0070C0                     
  3050                           ;XLCD/writdata.c: 16: void WriteDataXLCD(char data);XLCD/writdata.c: 17: {;XLCD/writdata
      +                          .c: 19:         TRISD = 0;
  3051  0070C0  0E00               	movlw	0
  3052  0070C2  6E95               	movwf	149,c	;volatile
  3053  0070C4                     
  3054                           ;XLCD/writdata.c: 20:         PORTD = data;
  3055  0070C4  C001  FF83         	movff	WriteDataXLCD@data,3971	;volatile
  3056  0070C8                     
  3057                           ;XLCD/writdata.c: 21:         LATEbits.LATE0 = 1;
  3058  0070C8  808D               	bsf	141,0,c	;volatile
  3059  0070CA                     
  3060                           ;XLCD/writdata.c: 22:         LATEbits.LATE1 = 0;
  3061  0070CA  928D               	bcf	141,1,c	;volatile
  3062  0070CC                     
  3063                           ;XLCD/writdata.c: 23:         DelayFor18TCY();
  3064  0070CC  EC37  F038         	call	_DelayFor18TCY	;wreg free
  3065  0070D0                     
  3066                           ;XLCD/writdata.c: 24:         LATEbits.LATE2 = 1;
  3067  0070D0  848D               	bsf	141,2,c	;volatile
  3068  0070D2                     
  3069                           ;XLCD/writdata.c: 25:         DelayFor18TCY();
  3070  0070D2  EC37  F038         	call	_DelayFor18TCY	;wreg free
  3071  0070D6                     
  3072                           ;XLCD/writdata.c: 26:         LATEbits.LATE2 = 0;
  3073  0070D6  948D               	bcf	141,2,c	;volatile
  3074  0070D8                     
  3075                           ;XLCD/writdata.c: 27:         LATEbits.LATE0 = 0;
  3076  0070D8  908D               	bcf	141,0,c	;volatile
  3077  0070DA                     
  3078                           ;XLCD/writdata.c: 28:         TRISD = 0xff;
  3079  0070DA  6895               	setf	149,c	;volatile
  3080  0070DC  0012               	return		;funcret
  3081  0070DE                     __end_of_WriteDataXLCD:
  3082                           	opt callstack 0
  3083                           
  3084 ;; *************** function _OpenXLCD *****************
  3085 ;; Defined at:
  3086 ;;		line 19 in file "XLCD/openxlcd.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  lcdtype         1    wreg     unsigned char 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  lcdtype         1    6[COMRAM] unsigned char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3100 ;;      Params:         0       0       0       0       0       0       0       0       0
  3101 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3102 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3103 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3104 ;;Total ram usage:        2 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    2
  3107 ;; This function calls:
  3108 ;;		_BusyXLCD
  3109 ;;		_DelayPORXLCD
  3110 ;;		_SetDDRamAddr
  3111 ;;		_WriteCmdXLCD
  3112 ;; This function is called by:
  3113 ;;		_initLCD
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text20
  3118  00781E                     __ptext20:
  3119                           	opt callstack 0
  3120  00781E                     _OpenXLCD:
  3121                           	opt callstack 27
  3122                           
  3123                           ;incstack = 0
  3124                           ;OpenXLCD@lcdtype stored from wreg
  3125  00781E  6E07               	movwf	OpenXLCD@lcdtype^0,c
  3126  007820                     
  3127                           ;XLCD/openxlcd.c: 19: void OpenXLCD(unsigned char lcdtype);XLCD/openxlcd.c: 20: {;XLCD/o
      +                          penxlcd.c: 24:         PORTD = 0;
  3128  007820  0E00               	movlw	0
  3129  007822  6E83               	movwf	131,c	;volatile
  3130                           
  3131                           ;XLCD/openxlcd.c: 25:         TRISD = 0x00;
  3132  007824  0E00               	movlw	0
  3133  007826  6E95               	movwf	149,c	;volatile
  3134  007828                     
  3135                           ;XLCD/openxlcd.c: 35:         TRISEbits.TRISE1 = 0;
  3136  007828  9296               	bcf	150,1,c	;volatile
  3137  00782A                     
  3138                           ;XLCD/openxlcd.c: 36:         TRISEbits.TRISE0 = 0;
  3139  00782A  9096               	bcf	150,0,c	;volatile
  3140  00782C                     
  3141                           ;XLCD/openxlcd.c: 37:         TRISEbits.TRISE2 = 0;
  3142  00782C  9496               	bcf	150,2,c	;volatile
  3143  00782E                     
  3144                           ;XLCD/openxlcd.c: 38:         LATEbits.LATE1 = 0;
  3145  00782E  928D               	bcf	141,1,c	;volatile
  3146  007830                     
  3147                           ;XLCD/openxlcd.c: 39:         LATEbits.LATE0 = 0;
  3148  007830  908D               	bcf	141,0,c	;volatile
  3149  007832                     
  3150                           ;XLCD/openxlcd.c: 40:         LATEbits.LATE2 = 0;
  3151  007832  948D               	bcf	141,2,c	;volatile
  3152  007834                     
  3153                           ;XLCD/openxlcd.c: 43:         DelayPORXLCD();
  3154  007834  EC49  F038         	call	_DelayPORXLCD	;wreg free
  3155  007838                     
  3156                           ;XLCD/openxlcd.c: 45:    WriteCmdXLCD(0x30);
  3157  007838  0E30               	movlw	48
  3158  00783A  EC6F  F038         	call	_WriteCmdXLCD
  3159  00783E                     
  3160                           ;XLCD/openxlcd.c: 47:          _delay(50000);
  3161  00783E  0E41               	movlw	65
  3162  007840  6E06               	movwf	??_OpenXLCD^0,c
  3163  007842  0EEE               	movlw	238
  3164  007844                     u1217:
  3165  007844  2EE8               	decfsz	wreg,f,c
  3166  007846  D7FE               	bra	u1217
  3167  007848  2E06               	decfsz	??_OpenXLCD^0,f,c
  3168  00784A  D7FC               	bra	u1217
  3169  00784C  D000               	nop2	
  3170  00784E                     
  3171                           ;XLCD/openxlcd.c: 49:    WriteCmdXLCD(0x30);
  3172  00784E  0E30               	movlw	48
  3173  007850  EC6F  F038         	call	_WriteCmdXLCD
  3174  007854                     
  3175                           ;XLCD/openxlcd.c: 51:           _delay(10000);
  3176  007854  0E0D               	movlw	13
  3177  007856  6E06               	movwf	??_OpenXLCD^0,c
  3178  007858  0EFC               	movlw	252
  3179  00785A                     u1227:
  3180  00785A  2EE8               	decfsz	wreg,f,c
  3181  00785C  D7FE               	bra	u1227
  3182  00785E  2E06               	decfsz	??_OpenXLCD^0,f,c
  3183  007860  D7FC               	bra	u1227
  3184  007862                     
  3185                           ;XLCD/openxlcd.c: 54:    WriteCmdXLCD(0x32);
  3186  007862  0E32               	movlw	50
  3187  007864  EC6F  F038         	call	_WriteCmdXLCD
  3188  007868                     l2087:
  3189  007868  ECCD  F038         	call	_BusyXLCD	;wreg free
  3190  00786C  0900               	iorlw	0
  3191  00786E  A4D8               	btfss	status,2,c
  3192  007870  EF3C  F03C         	goto	u1081
  3193  007874  EF3E  F03C         	goto	u1080
  3194  007878                     u1081:
  3195  007878  EF34  F03C         	goto	l2087
  3196  00787C                     u1080:
  3197  00787C                     l2089:
  3198  00787C  ECCD  F038         	call	_BusyXLCD	;wreg free
  3199  007880  0900               	iorlw	0
  3200  007882  A4D8               	btfss	status,2,c
  3201  007884  EF46  F03C         	goto	u1091
  3202  007888  EF48  F03C         	goto	u1090
  3203  00788C                     u1091:
  3204  00788C  EF3E  F03C         	goto	l2089
  3205  007890                     u1090:
  3206  007890                     
  3207                           ;XLCD/openxlcd.c: 61:         WriteCmdXLCD(lcdtype);
  3208  007890  5007               	movf	OpenXLCD@lcdtype^0,w,c
  3209  007892  EC6F  F038         	call	_WriteCmdXLCD
  3210  007896                     l2093:
  3211  007896  ECCD  F038         	call	_BusyXLCD	;wreg free
  3212  00789A  0900               	iorlw	0
  3213  00789C  A4D8               	btfss	status,2,c
  3214  00789E  EF53  F03C         	goto	u1101
  3215  0078A2  EF55  F03C         	goto	u1100
  3216  0078A6                     u1101:
  3217  0078A6  EF4B  F03C         	goto	l2093
  3218  0078AA                     u1100:
  3219  0078AA                     
  3220                           ;XLCD/openxlcd.c: 65:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  3221  0078AA  0E08               	movlw	8
  3222  0078AC  EC6F  F038         	call	_WriteCmdXLCD
  3223  0078B0                     l2097:
  3224  0078B0  ECCD  F038         	call	_BusyXLCD	;wreg free
  3225  0078B4  0900               	iorlw	0
  3226  0078B6  A4D8               	btfss	status,2,c
  3227  0078B8  EF60  F03C         	goto	u1111
  3228  0078BC  EF62  F03C         	goto	u1110
  3229  0078C0                     u1111:
  3230  0078C0  EF58  F03C         	goto	l2097
  3231  0078C4                     u1110:
  3232  0078C4                     
  3233                           ;XLCD/openxlcd.c: 67:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  3234  0078C4  0E0F               	movlw	15
  3235  0078C6  EC6F  F038         	call	_WriteCmdXLCD
  3236  0078CA                     l2101:
  3237  0078CA  ECCD  F038         	call	_BusyXLCD	;wreg free
  3238  0078CE  0900               	iorlw	0
  3239  0078D0  A4D8               	btfss	status,2,c
  3240  0078D2  EF6D  F03C         	goto	u1121
  3241  0078D6  EF6F  F03C         	goto	u1120
  3242  0078DA                     u1121:
  3243  0078DA  EF65  F03C         	goto	l2101
  3244  0078DE                     u1120:
  3245  0078DE                     
  3246                           ;XLCD/openxlcd.c: 71:         WriteCmdXLCD(0x01);
  3247  0078DE  0E01               	movlw	1
  3248  0078E0  EC6F  F038         	call	_WriteCmdXLCD
  3249  0078E4                     l2105:
  3250  0078E4  ECCD  F038         	call	_BusyXLCD	;wreg free
  3251  0078E8  0900               	iorlw	0
  3252  0078EA  A4D8               	btfss	status,2,c
  3253  0078EC  EF7A  F03C         	goto	u1131
  3254  0078F0  EF7C  F03C         	goto	u1130
  3255  0078F4                     u1131:
  3256  0078F4  EF72  F03C         	goto	l2105
  3257  0078F8                     u1130:
  3258  0078F8                     
  3259                           ;XLCD/openxlcd.c: 75:         WriteCmdXLCD(0b00000100);
  3260  0078F8  0E04               	movlw	4
  3261  0078FA  EC6F  F038         	call	_WriteCmdXLCD
  3262  0078FE                     l2109:
  3263  0078FE  ECCD  F038         	call	_BusyXLCD	;wreg free
  3264  007902  0900               	iorlw	0
  3265  007904  A4D8               	btfss	status,2,c
  3266  007906  EF87  F03C         	goto	u1141
  3267  00790A  EF89  F03C         	goto	u1140
  3268  00790E                     u1141:
  3269  00790E  EF7F  F03C         	goto	l2109
  3270  007912                     u1140:
  3271  007912                     
  3272                           ;XLCD/openxlcd.c: 79:         SetDDRamAddr(0x80);
  3273  007912  0E80               	movlw	128
  3274  007914  EC80  F038         	call	_SetDDRamAddr
  3275  007918  0012               	return		;funcret
  3276  00791A                     __end_of_OpenXLCD:
  3277                           	opt callstack 0
  3278                           
  3279 ;; *************** function _WriteCmdXLCD *****************
  3280 ;; Defined at:
  3281 ;;		line 13 in file "XLCD/wcmdxlcd.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  cmd             1    wreg     unsigned char 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  cmd             1    0[COMRAM] unsigned char 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3295 ;;      Params:         0       0       0       0       0       0       0       0       0
  3296 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3298 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3299 ;;Total ram usage:        1 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    1
  3302 ;; This function calls:
  3303 ;;		_DelayFor18TCY
  3304 ;; This function is called by:
  3305 ;;		_OpenXLCD
  3306 ;;		_main
  3307 ;;		_initLCD
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text21
  3312  0070DE                     __ptext21:
  3313                           	opt callstack 0
  3314  0070DE                     _WriteCmdXLCD:
  3315                           	opt callstack 28
  3316                           
  3317                           ;incstack = 0
  3318                           ;WriteCmdXLCD@cmd stored from wreg
  3319  0070DE  6E01               	movwf	WriteCmdXLCD@cmd^0,c
  3320  0070E0                     
  3321                           ;XLCD/wcmdxlcd.c: 13: void WriteCmdXLCD(unsigned char cmd);XLCD/wcmdxlcd.c: 14: {;XLCD/w
      +                          cmdxlcd.c: 16:         TRISD = 0;
  3322  0070E0  0E00               	movlw	0
  3323  0070E2  6E95               	movwf	149,c	;volatile
  3324  0070E4                     
  3325                           ;XLCD/wcmdxlcd.c: 17:         PORTD = cmd;
  3326  0070E4  C001  FF83         	movff	WriteCmdXLCD@cmd,3971	;volatile
  3327  0070E8                     
  3328                           ;XLCD/wcmdxlcd.c: 18:         LATEbits.LATE1 = 0;
  3329  0070E8  928D               	bcf	141,1,c	;volatile
  3330  0070EA                     
  3331                           ;XLCD/wcmdxlcd.c: 19:         LATEbits.LATE0 = 0;
  3332  0070EA  908D               	bcf	141,0,c	;volatile
  3333  0070EC                     
  3334                           ;XLCD/wcmdxlcd.c: 20:         DelayFor18TCY();
  3335  0070EC  EC37  F038         	call	_DelayFor18TCY	;wreg free
  3336  0070F0                     
  3337                           ;XLCD/wcmdxlcd.c: 21:         LATEbits.LATE2 = 1;
  3338  0070F0  848D               	bsf	141,2,c	;volatile
  3339  0070F2                     
  3340                           ;XLCD/wcmdxlcd.c: 22:         DelayFor18TCY();
  3341  0070F2  EC37  F038         	call	_DelayFor18TCY	;wreg free
  3342  0070F6                     
  3343                           ;XLCD/wcmdxlcd.c: 23:         LATEbits.LATE2 = 0;
  3344  0070F6  948D               	bcf	141,2,c	;volatile
  3345  0070F8                     
  3346                           ;XLCD/wcmdxlcd.c: 24:         DelayFor18TCY();
  3347  0070F8  EC37  F038         	call	_DelayFor18TCY	;wreg free
  3348  0070FC                     
  3349                           ;XLCD/wcmdxlcd.c: 25:         TRISD = 0xff;
  3350  0070FC  6895               	setf	149,c	;volatile
  3351  0070FE  0012               	return		;funcret
  3352  007100                     __end_of_WriteCmdXLCD:
  3353                           	opt callstack 0
  3354                           
  3355 ;; *************** function _SetDDRamAddr *****************
  3356 ;; Defined at:
  3357 ;;		line 13 in file "XLCD/setddram.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  DDaddr          1    wreg     unsigned char 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  DDaddr          1    0[COMRAM] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3371 ;;      Params:         0       0       0       0       0       0       0       0       0
  3372 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3374 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3375 ;;Total ram usage:        1 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    1
  3378 ;; This function calls:
  3379 ;;		_DelayFor18TCY
  3380 ;; This function is called by:
  3381 ;;		_OpenXLCD
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text22
  3386  007100                     __ptext22:
  3387                           	opt callstack 0
  3388  007100                     _SetDDRamAddr:
  3389                           	opt callstack 27
  3390                           
  3391                           ;incstack = 0
  3392                           ;SetDDRamAddr@DDaddr stored from wreg
  3393  007100  6E01               	movwf	SetDDRamAddr@DDaddr^0,c
  3394  007102                     
  3395                           ;XLCD/setddram.c: 13: void SetDDRamAddr(unsigned char DDaddr);XLCD/setddram.c: 14: {;XLC
      +                          D/setddram.c: 16:         TRISD = 0;
  3396  007102  0E00               	movlw	0
  3397  007104  6E95               	movwf	149,c	;volatile
  3398  007106                     
  3399                           ;XLCD/setddram.c: 17:         PORTD = DDaddr | 0b10000000;
  3400  007106  5001               	movf	SetDDRamAddr@DDaddr^0,w,c
  3401  007108  0980               	iorlw	128
  3402  00710A  6E83               	movwf	131,c	;volatile
  3403  00710C                     
  3404                           ;XLCD/setddram.c: 18:         LATEbits.LATE1 = 0;
  3405  00710C  928D               	bcf	141,1,c	;volatile
  3406  00710E                     
  3407                           ;XLCD/setddram.c: 19:         LATEbits.LATE0 = 0;
  3408  00710E  908D               	bcf	141,0,c	;volatile
  3409  007110                     
  3410                           ;XLCD/setddram.c: 20:         DelayFor18TCY();
  3411  007110  EC37  F038         	call	_DelayFor18TCY	;wreg free
  3412  007114                     
  3413                           ;XLCD/setddram.c: 21:         LATEbits.LATE2 = 1;
  3414  007114  848D               	bsf	141,2,c	;volatile
  3415  007116                     
  3416                           ;XLCD/setddram.c: 22:         DelayFor18TCY();
  3417  007116  EC37  F038         	call	_DelayFor18TCY	;wreg free
  3418  00711A                     
  3419                           ;XLCD/setddram.c: 23:         LATEbits.LATE2 = 0;
  3420  00711A  948D               	bcf	141,2,c	;volatile
  3421  00711C                     
  3422                           ;XLCD/setddram.c: 24:         DelayFor18TCY();
  3423  00711C  EC37  F038         	call	_DelayFor18TCY	;wreg free
  3424  007120                     
  3425                           ;XLCD/setddram.c: 25:         TRISD = 0xff;
  3426  007120  6895               	setf	149,c	;volatile
  3427  007122  0012               	return		;funcret
  3428  007124                     __end_of_SetDDRamAddr:
  3429                           	opt callstack 0
  3430                           
  3431 ;; *************** function _DelayPORXLCD *****************
  3432 ;; Defined at:
  3433 ;;		line 100 in file "main.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0, cstack
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3447 ;;      Params:         0       0       0       0       0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3450 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3451 ;;Total ram usage:        0 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    1
  3454 ;; This function calls:
  3455 ;;		_delay_ms
  3456 ;; This function is called by:
  3457 ;;		_OpenXLCD
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           	psect	text23
  3462  007092                     __ptext23:
  3463                           	opt callstack 0
  3464  007092                     _DelayPORXLCD:
  3465                           	opt callstack 27
  3466  007092                     
  3467                           ;main.c: 101:     delay_ms(15);
  3468  007092  0E0F               	movlw	15
  3469  007094  6E01               	movwf	delay_ms@n^0,c
  3470  007096  0E00               	movlw	0
  3471  007098  6E02               	movwf	(delay_ms@n+1)^0,c
  3472  00709A  0E00               	movlw	0
  3473  00709C  6E03               	movwf	(delay_ms@n+2)^0,c
  3474  00709E  0E00               	movlw	0
  3475  0070A0  6E04               	movwf	(delay_ms@n+3)^0,c
  3476  0070A2  EC1B  F039         	call	_delay_ms	;wreg free
  3477  0070A6  0012               	return		;funcret
  3478  0070A8                     __end_of_DelayPORXLCD:
  3479                           	opt callstack 0
  3480                           
  3481 ;; *************** function _delay_ms *****************
  3482 ;; Defined at:
  3483 ;;		line 157 in file "../AlteriADC.X/Alteri.h"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  n               4    0[COMRAM] long 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3497 ;;      Params:         4       0       0       0       0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3499 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3500 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3501 ;;Total ram usage:        5 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_main
  3507 ;;		_DelayPORXLCD
  3508 ;;		_DelayXLCD
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text24
  3513  007236                     __ptext24:
  3514                           	opt callstack 0
  3515  007236                     _delay_ms:
  3516                           	opt callstack 27
  3517  007236                     
  3518                           ;../AlteriADC.X/Alteri.h: 157:  extern void delay_ms(long int n);../AlteriADC.X/Alteri.h
      +                          : 158:     {;../AlteriADC.X/Alteri.h: 159:         while(n-- !=0){
  3519  007236  EF25  F039         	goto	l1797
  3520  00723A                     l1795:
  3521                           
  3522                           ;../AlteriADC.X/Alteri.h: 160:             _delay((unsigned long)((1)*(48000000/4000.0))
      +                          );
  3523  00723A  0E10               	movlw	16
  3524  00723C  6E05               	movwf	??_delay_ms^0,c
  3525  00723E  0E94               	movlw	148
  3526  007240                     u1237:
  3527  007240  2EE8               	decfsz	wreg,f,c
  3528  007242  D7FE               	bra	u1237
  3529  007244  2E05               	decfsz	??_delay_ms^0,f,c
  3530  007246  D7FC               	bra	u1237
  3531  007248  D000               	nop2	
  3532  00724A                     l1797:
  3533                           
  3534                           ;../AlteriADC.X/Alteri.h: 159:         while(n-- !=0){
  3535  00724A  0EFF               	movlw	255
  3536  00724C  2601               	addwf	delay_ms@n^0,f,c
  3537  00724E  0EFF               	movlw	255
  3538  007250  2202               	addwfc	(delay_ms@n+1)^0,f,c
  3539  007252  0EFF               	movlw	255
  3540  007254  2203               	addwfc	(delay_ms@n+2)^0,f,c
  3541  007256  0EFF               	movlw	255
  3542  007258  2204               	addwfc	(delay_ms@n+3)^0,f,c
  3543  00725A  2801               	incf	delay_ms@n^0,w,c
  3544  00725C  E10A               	bnz	u821
  3545  00725E  2802               	incf	(delay_ms@n+1)^0,w,c
  3546  007260  E108               	bnz	u821
  3547  007262  2803               	incf	(delay_ms@n+2)^0,w,c
  3548  007264  E106               	bnz	u821
  3549  007266  2804               	incf	(delay_ms@n+3)^0,w,c
  3550  007268  A4D8               	btfss	status,2,c
  3551  00726A  EF39  F039         	goto	u821
  3552  00726E  EF3B  F039         	goto	u820
  3553  007272                     u821:
  3554  007272  EF1D  F039         	goto	l1795
  3555  007276                     u820:
  3556  007276  0012               	return		;funcret
  3557  007278                     __end_of_delay_ms:
  3558                           	opt callstack 0
  3559                           
  3560 ;; *************** function _BusyXLCD *****************
  3561 ;; Defined at:
  3562 ;;		line 11 in file "XLCD/busyxlcd.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;		None
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      unsigned char 
  3569 ;; Registers used:
  3570 ;;		wreg, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3576 ;;      Params:         0       0       0       0       0       0       0       0       0
  3577 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3579 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3580 ;;Total ram usage:        0 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    1
  3583 ;; This function calls:
  3584 ;;		_DelayFor18TCY
  3585 ;; This function is called by:
  3586 ;;		_OpenXLCD
  3587 ;;		_putrsXLCD
  3588 ;;		_putsXLCD
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text25
  3593  00719A                     __ptext25:
  3594                           	opt callstack 0
  3595  00719A                     _BusyXLCD:
  3596                           	opt callstack 28
  3597  00719A                     
  3598                           ;XLCD/busyxlcd.c: 13:         LATEbits.LATE1 = 1;
  3599  00719A  828D               	bsf	141,1,c	;volatile
  3600                           
  3601                           ;XLCD/busyxlcd.c: 14:         LATEbits.LATE0 = 0;
  3602  00719C  908D               	bcf	141,0,c	;volatile
  3603  00719E                     
  3604                           ;XLCD/busyxlcd.c: 15:         DelayFor18TCY();
  3605  00719E  EC37  F038         	call	_DelayFor18TCY	;wreg free
  3606  0071A2                     
  3607                           ;XLCD/busyxlcd.c: 16:         LATEbits.LATE2 = 1;
  3608  0071A2  848D               	bsf	141,2,c	;volatile
  3609                           
  3610                           ;XLCD/busyxlcd.c: 17:         DelayFor18TCY();
  3611  0071A4  EC37  F038         	call	_DelayFor18TCY	;wreg free
  3612  0071A8                     
  3613                           ;XLCD/busyxlcd.c: 19:         if(PORTD&0x80)
  3614  0071A8  AE83               	btfss	131,7,c	;volatile
  3615  0071AA  EFD9  F038         	goto	u971
  3616  0071AE  EFDB  F038         	goto	u970
  3617  0071B2                     u971:
  3618  0071B2  EFE0  F038         	goto	l9
  3619  0071B6                     u970:
  3620  0071B6                     
  3621                           ;XLCD/busyxlcd.c: 20:         {;XLCD/busyxlcd.c: 21:                 LATEbits.LATE2 = 0;
  3622  0071B6  948D               	bcf	141,2,c	;volatile
  3623                           
  3624                           ;XLCD/busyxlcd.c: 22:                 LATEbits.LATE1 = 0;
  3625  0071B8  928D               	bcf	141,1,c	;volatile
  3626  0071BA                     
  3627                           ;XLCD/busyxlcd.c: 23:                 return 1;
  3628  0071BA  0E01               	movlw	1
  3629  0071BC  EFE3  F038         	goto	l10
  3630  0071C0                     l9:
  3631                           
  3632                           ;XLCD/busyxlcd.c: 26:         {;XLCD/busyxlcd.c: 27:                 LATEbits.LATE2 = 0;
  3633  0071C0  948D               	bcf	141,2,c	;volatile
  3634                           
  3635                           ;XLCD/busyxlcd.c: 28:                 LATEbits.LATE1 = 0;
  3636  0071C2  928D               	bcf	141,1,c	;volatile
  3637  0071C4                     
  3638                           ;XLCD/busyxlcd.c: 29:                 return 0;
  3639  0071C4  0E00               	movlw	0
  3640  0071C6                     l10:
  3641  0071C6  0012               	return		;funcret
  3642  0071C8                     __end_of_BusyXLCD:
  3643                           	opt callstack 0
  3644                           
  3645 ;; *************** function _DelayFor18TCY *****************
  3646 ;; Defined at:
  3647 ;;		line 97 in file "main.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;		None
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3661 ;;      Params:         0       0       0       0       0       0       0       0       0
  3662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3664 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3665 ;;Total ram usage:        0 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_BusyXLCD
  3671 ;;		_SetDDRamAddr
  3672 ;;		_WriteCmdXLCD
  3673 ;;		_WriteDataXLCD
  3674 ;;		_ReadAddrXLCD
  3675 ;;		_ReadDataXLCD
  3676 ;;		_SetCGRamAddr
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text26
  3681  00706E                     __ptext26:
  3682                           	opt callstack 0
  3683  00706E                     _DelayFor18TCY:
  3684                           	opt callstack 28
  3685  00706E                     
  3686                           ;main.c: 98:   _delay(240);
  3687  00706E  0E50               	movlw	80
  3688  007070                     u1247:
  3689  007070  2EE8               	decfsz	wreg,f,c
  3690  007072  D7FE               	bra	u1247
  3691  007074  0012               	return		;funcret
  3692  007076                     __end_of_DelayFor18TCY:
  3693                           	opt callstack 0
  3694                           
  3695 ;; *************** function _initADC *****************
  3696 ;; Defined at:
  3697 ;;		line 53 in file "main.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3711 ;;      Params:         0       0       0       0       0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3715 ;;Total ram usage:        0 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text27
  3725  007084                     __ptext27:
  3726                           	opt callstack 0
  3727  007084                     _initADC:
  3728                           	opt callstack 30
  3729  007084                     
  3730                           ;main.c: 54:     ADCON0 = 0b00000001;
  3731  007084  0E01               	movlw	1
  3732  007086  6EC2               	movwf	194,c	;volatile
  3733                           
  3734                           ;main.c: 56:     ADCON1 = 0b00001110;
  3735  007088  0E0E               	movlw	14
  3736  00708A  6EC1               	movwf	193,c	;volatile
  3737                           
  3738                           ;main.c: 58:     ADCON2 = 0b10111100;
  3739  00708C  0EBC               	movlw	188
  3740  00708E  6EC0               	movwf	192,c	;volatile
  3741  007090  0012               	return		;funcret
  3742  007092                     __end_of_initADC:
  3743                           	opt callstack 0
  3744                           
  3745 ;; *************** function _conversionADC *****************
  3746 ;; Defined at:
  3747 ;;		line 67 in file "main.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  resultado       2    0        unsigned int 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  2    2[COMRAM] unsigned int 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3761 ;;      Params:         2       0       0       0       0       0       0       0       0
  3762 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3764 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3765 ;;Total ram usage:        4 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    1
  3768 ;; This function calls:
  3769 ;;		_ChecarLEDs
  3770 ;; This function is called by:
  3771 ;;		_main
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text28
  3776  007170                     __ptext28:
  3777                           	opt callstack 0
  3778  007170                     _conversionADC:
  3779                           	opt callstack 29
  3780  007170                     
  3781                           ;main.c: 68:     unsigned int resultado;;main.c: 69:     ADCON0bits.GO_DONE = 1;
  3782  007170  82C2               	bsf	194,1,c	;volatile
  3783  007172                     l206:
  3784  007172  B2C2               	btfsc	194,1,c	;volatile
  3785  007174  EFBE  F038         	goto	u1201
  3786  007178  EFC0  F038         	goto	u1200
  3787  00717C                     u1201:
  3788  00717C  EFB9  F038         	goto	l206
  3789  007180                     u1200:
  3790  007180  50C4               	movf	196,w,c	;volatile
  3791  007182  50C3               	movf	195,w,c	;volatile
  3792  007184                     
  3793                           ;main.c: 73:     ChecarLEDs(resultado);
  3794  007184  0E03               	movlw	3
  3795  007186  6E02               	movwf	(ChecarLEDs@res+1)^0,c
  3796  007188  0EF9               	movlw	249
  3797  00718A  6E01               	movwf	ChecarLEDs@res^0,c
  3798  00718C  EC3B  F038         	call	_ChecarLEDs	;wreg free
  3799  007190                     
  3800                           ;main.c: 74:     return resultado;
  3801  007190  0E03               	movlw	3
  3802  007192  6E04               	movwf	(?_conversionADC+1)^0,c
  3803  007194  0EF9               	movlw	249
  3804  007196  6E03               	movwf	?_conversionADC^0,c
  3805  007198  0012               	return		;funcret
  3806  00719A                     __end_of_conversionADC:
  3807                           	opt callstack 0
  3808                           
  3809 ;; *************** function _ChecarLEDs *****************
  3810 ;; Defined at:
  3811 ;;		line 77 in file "main.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  res             2    0[COMRAM] unsigned int 
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		None
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3825 ;;      Params:         2       0       0       0       0       0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3828 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3829 ;;Total ram usage:        2 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; This function calls:
  3832 ;;		Nothing
  3833 ;; This function is called by:
  3834 ;;		_conversionADC
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           	psect	text29
  3839  007076                     __ptext29:
  3840                           	opt callstack 0
  3841  007076                     _ChecarLEDs:
  3842                           	opt callstack 29
  3843  007076                     
  3844                           ;main.c: 78:     LATBbits.LATB0 = 1;
  3845  007076  808A               	bsf	138,0,c	;volatile
  3846                           
  3847                           ;main.c: 79:     LATBbits.LATB4 = 0;
  3848  007078  988A               	bcf	138,4,c	;volatile
  3849                           
  3850                           ;main.c: 80:     LATBbits.LATB5 = 0;
  3851  00707A  9A8A               	bcf	138,5,c	;volatile
  3852                           
  3853                           ;main.c: 81:     LATBbits.LATB1 = 0;
  3854  00707C  928A               	bcf	138,1,c	;volatile
  3855                           
  3856                           ;main.c: 82:     LATBbits.LATB2 = 0;
  3857  00707E  948A               	bcf	138,2,c	;volatile
  3858                           
  3859                           ;main.c: 83:     LATBbits.LATB6 = 0;
  3860  007080  9C8A               	bcf	138,6,c	;volatile
  3861  007082  0012               	return		;funcret
  3862  007084                     __end_of_ChecarLEDs:
  3863                           	opt callstack 0
  3864                           
  3865                           	psect	rparam
  3866  0000                     tosu	equ	0xFFF
  3867                           tosh	equ	0xFFE
  3868                           tosl	equ	0xFFD
  3869                           stkptr	equ	0xFFC
  3870                           pclatu	equ	0xFFB
  3871                           pclath	equ	0xFFA
  3872                           pcl	equ	0xFF9
  3873                           tblptru	equ	0xFF8
  3874                           tblptrh	equ	0xFF7
  3875                           tblptrl	equ	0xFF6
  3876                           tablat	equ	0xFF5
  3877                           prodh	equ	0xFF4
  3878                           prodl	equ	0xFF3
  3879                           indf0	equ	0xFEF
  3880                           postinc0	equ	0xFEE
  3881                           postdec0	equ	0xFED
  3882                           preinc0	equ	0xFEC
  3883                           plusw0	equ	0xFEB
  3884                           fsr0h	equ	0xFEA
  3885                           fsr0l	equ	0xFE9
  3886                           wreg	equ	0xFE8
  3887                           indf1	equ	0xFE7
  3888                           postinc1	equ	0xFE6
  3889                           postdec1	equ	0xFE5
  3890                           preinc1	equ	0xFE4
  3891                           plusw1	equ	0xFE3
  3892                           fsr1h	equ	0xFE2
  3893                           fsr1l	equ	0xFE1
  3894                           bsr	equ	0xFE0
  3895                           indf2	equ	0xFDF
  3896                           postinc2	equ	0xFDE
  3897                           postdec2	equ	0xFDD
  3898                           preinc2	equ	0xFDC
  3899                           plusw2	equ	0xFDB
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8


Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     10      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1091_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _putsXLCD->_WriteDataXLCD
    _initLCD->_OpenXLCD
    _putrsXLCD->_WriteDataXLCD
    _DelayPORXLCD->_delay_ms
    _conversionADC->_ChecarLEDs

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8642
                       _WriteCmdXLCD
                      _conversionADC
                           _delay_ms
                            _initADC
                            _initLCD
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7624
                                             89 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                      _conversionADC (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7271
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    6899
                                             59 COMRAM    22    16      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3759
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1198
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     143
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     481
                           _OpenXLCD
                       _WriteCmdXLCD
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     143
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      22
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             2     2      0     316
                                              5 COMRAM     2     2      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      22
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      22
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0     250
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             5     1      4     250
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conversionADC                                        4     2      2     122
                                              2 COMRAM     4     2      2
                         _ChecarLEDs
 ---------------------------------------------------------------------------------
 (2) _ChecarLEDs                                           2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteCmdXLCD
     _DelayFor18TCY
   _conversionADC
     _ChecarLEDs
   _delay_ms
   _initADC
   _initLCD
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
         _delay_ms
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _sprintf
     _conversionADC (ARG)
       _ChecarLEDs
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      A      37       5       34.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96      20        0.0%
DATA                 0      0      96       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 15 21:59:38 2020

                      l9 71C0                       l10 71C6                       l53 7918  
                     l66 7348                       l79 72BA              __CFG_BOR$ON 000000  
    ___wmul@multiplicand 0003              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000                      l200 7090                      l130 70FE  
                    l203 7148                      l212 7082                      l141 70DC  
                    l206 7172                      l215 7074                      l119 7122  
                    l303 7446                      l304 744E                      l209 7198  
                    l218 70A6                      l250 7514                      l307 716E  
                    l260 7AE2                      l253 7556                      l270 7CAA  
                    l262 7AEA                      l255 7592                      l187 7276  
                    l284 7DA8                      l297 7FFE                      l752 781C  
                    l745 77FC                      l762 772C                      l755 770C  
           __CFG_CPB$OFF 000000                      u610 75A6                      u611 75A2  
                    u620 75B8                      u700 7566                      u621 75B4  
                    u701 7562                      u710 722E                      u630 75E0  
                    u711 7228                      u631 75DC                      u720 7230  
                    u800 7362                      u640 7616                      u801 735E  
                    u641 7612                      u810 7390                      u650 72FE  
                    u811 738C                      u731 7734                      u651 72FA  
                    u820 7276                      u900 7952                      u740 7758  
                    u660 71F0                      u821 7272                      u901 794E  
                    u741 7754                      u661 71EC                      u910 7988  
                    u750 7782                      u670 74DE                      u830 7ABA  
                    u911 7984                      u751 777E                      u671 74DA  
                    u831 7AB6                      u920 79A4                      u760 77C2  
                    u680 7500                      u840 7AD6                      u921 79A0  
                    u761 77BE                      u681 74FC                      u841 7AD2  
                    u930 7A5A                      u770 767C                      u690 7556  
                    u850 7C20                      u931 7A54                      u771 7678  
                    u691 7552                      u851 7C1C                      u940 7A5C  
                    u780 76A6                      u860 7C3E                      u781 76A2  
                    u861 7C3A                      u950 7A72                      u790 76D4  
                    u870 7C58                      u951 7A6E                      u791 76D0  
                    u871 7C54                      u960 7A84                      u880 7C72  
                    u961 7A80                      u881 7C6E                      u970 71B6  
                    u890 7C82                      u971 71B2                      u891 7C7E  
                    u980 7CD0                      u981 7CCC                      u990 7DA8  
                    u991 7DA4                      _pad 74CE    __size_of_WriteCmdXLCD 0022  
                    wreg 000FE8               _ChecarLEDs 7076             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l1012 7234                     l1020 739A  
                   l1006 7AA0                     l1009 7AA8                     l2001 7D96  
                   l1050 73EC                     l1035 765C                     l1043 72FE  
                   l2011 7E22                     l2003 7DB8                     l2101 78CA  
                   l1053 706C                     l2021 7EA4                     l2013 7E30  
                   l2005 7DBA                     l2111 7912                     l2103 78DE  
                   l2031 7F5C                     l2015 7E50                     l2023 7EB6  
                   l2007 7DDE                     l2105 78E4                     l2121 7328  
                   l2033 7F80                     l2041 7FAE                     l2025 7EDA  
                   l2017 7E5E                     l2009 7E14                     l2107 78F8  
                   l2123 732C                     l2115 7300                     l1059 71FC  
                   l2043 7FBC                     l2035 7F8E                     l2027 7F24  
                   l2131 7404                     l2125 7076                     l2109 78FE  
                   l2061 7820                     l2117 7304                     l2141 729E  
                   l2037 7FA2                     l2133 742A                     l2071 7830  
                   l2063 7828                     l2119 7318                     l2151 7136  
                   l2143 72A2                     l2135 7278                     l2047 7FC8  
                   l2127 73EE                     l2161 7184                     l2081 784E  
                   l2073 7832                     l2065 782A                     l2153 713C  
                   l2145 7124                     l2137 727C                     l2049 7FEC  
                   l2129 73F6                     l2241 745C                     l2233 7450  
                   l2163 7184                     l2155 7084                     l2091 7890  
                   l2083 7854                     l2075 7834                     l2067 782C  
                   l2147 712A                     l2139 7290                     l2171 73AE  
                   l2251 7466                     l2243 745E                     l2235 7454  
                   l2165 7190                     l2157 7170                     l2093 7896  
                   l2085 7862                     l2077 7838                     l2069 782E  
                   l2149 7130                     l1701 71D4                     l2173 73B6  
                   l2261 7470                     l2253 7468                     l2245 7460  
                   l2237 7458                     l2159 7180                     l2095 78AA  
                   l2087 7868                     l2079 783E                     l1703 71D8  
                   l1711 74DE                     l2175 73BE                     l2271 747A  
                   l2263 7472                     l2255 746A                     l2247 7462  
                   l2239 745A                     l2097 78B0                     l2089 787C  
                   l1705 71F0                     l1721 7534                     l1713 74F2  
                   l1801 7ABA                     l2337 7D68                     l2177 73DA  
                   l2169 739C                     l2281 74A6                     l2273 747C  
                   l2265 7474                     l2257 746C                     l2249 7464  
                   l2099 78C4                     l1731 71FE                     l2339 79D6  
                   l1723 7538                     l1715 7500                     l1811 7B22  
                   l1803 7ABC                     l2283 74B2                     l2275 747E  
                   l2267 7476                     l2259 746E                     l1901 70E4  
                   l1741 772E                     l1725 7566                     l1717 750C  
                   l1709 74CE                     l1813 7B28                     l1821 7C0E  
                   l1805 7AD6                     l2277 7480                     l2269 7478  
                   l1911 70F2                     l1903 70E8                     l1735 714A  
                   l1751 7782                     l1743 773A                     l1727 757A  
                   l1719 7520                     l1823 7C20                     l1831 7C82  
                   l1815 7B9E                     l1807 7B12                     l2279 74A0  
                   l1921 7102                     l1913 70F6                     l1905 70EA  
                   l1737 7166                     l1841 7936                     l1761 77F6  
                   l1753 7794                     l1745 7758                     l1681 75B8  
                   l1825 7C3E                     l1817 7BA4                     l1809 7B1A  
                   l1931 7114                     l1923 7106                     l1915 70F8  
                   l1907 70EC                     l1851 7992                     l1843 7952  
                   l1835 791A                     l1755 77C2                     l1747 7760  
                   l1771 76A6                     l1763 765E                     l1683 75C2  
                   l1691 72BC                     l1827 7C58                     l1819 7BAA  
                   l1933 7116                     l1925 710C                     l1917 70FC  
                   l1909 70F0                     l1781 734E                     l1853 79A8  
                   l1845 7988                     l1837 792E                     l1757 77E2  
                   l1749 7774                     l1773 76D4                     l1765 767C  
                   l1685 75E0                     l1677 7594                     l1693 72C8  
                   l1829 7C72                     l1791 706E                     l1935 711A  
                   l1927 710E                     l1951 70CC                     l1943 70C0  
                   l1783 7362                     l1871 7A84                     l1863 7A22  
                   l1855 79B0                     l1847 798C                     l1839 7932  
                   l1759 77E4                     l1775 76F4                     l1767 7684  
                   l1687 7616                     l1679 75A6                     l1695 72DA  
                   l1881 71A2                     l1793 7236                     l1937 711C  
                   l1929 7110                     l1961 70DA                     l1953 70D0  
                   l1945 70C4                     l1785 7390                     l1857 79B8  
                   l1777 7706                     l1769 7698                     l1697 72DE  
                   l1883 71A8                     l1795 723A                     l1939 7120  
                   l1955 70D2                     l1947 70C8                     l1787 7394  
                   l1779 734A                     l1867 7A60                     l1859 79EC  
                   l1699 71C8                     l1971 7CF0                     l1893 71C4  
                   l1885 71B6                     l1877 719A                     l1797 724A  
                   l1957 70D6                     l1949 70CA                     l1869 7A72  
                   l1973 7CF4                     l1965 7CAC                     ?_pad 0011  
                   l1887 71BA                     l1879 719E                     l1959 70D8  
                   l1799 7AAA                     l1991 7D2E                     l1983 7D1E  
                   l1975 7D00                     l1967 7CD0                     l1897 7092  
                   l1977 7D04                     l1969 7CDE                     l1899 70E0  
                   l1995 7D36                     l1987 7D26                     l1979 7D16  
                   l1999 7D42                     STR_1 1015                     STR_2 1005  
                   u1000 7DB8                     u1001 7DB4                     u1010 7DDE  
                   u1011 7DDA                     u1100 78AA                     u1020 7E22  
                   u1101 78A6                     u1021 7E1E                     u1110 78C4  
                   u1030 7E9E                     u1111 78C0                     u1031 7E98  
                   u1200 7180                     u1120 78DE                     u1040 7EA0  
                   u1201 717C                     u1121 78DA                     u1130 78F8  
                   u1050 7EB6                     u1131 78F4                     u1051 7EB2  
                   u1140 7912                     u1060 7EDA                     u1141 790E  
                   u1061 7ED6                     u1150 7318                     u1070 7F80  
                   u1151 7314                     u1071 7F7C                     u1080 787C  
                   u1160 7348                     u1081 7878                     u1217 7844  
                   u1161 7344                     u1090 7890                     u1170 7446  
                   u1091 788C                     u1227 785A                     u1171 7442  
                   u1180 7290                     u1237 7240                     u1181 728C  
                   u1190 72BA                     u1247 7070                     u1191 72B6  
                   _dbuf 0068                     _atoi 791A                     _main 7450  
                   _prec 0064                     _nout 0060                     pad@i 0018  
                   pad@p 0015                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9                     _utoa 7AAA             _strResultado 0088  
 __size_of_WriteDataXLCD 0020                     prodh 000FF4                     prodl 000FF3  
                   start 1000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_pad 0017             _WriteCmdXLCD 70DE  
          __CFG_PLLDIV$5 000000                    ?_atoi 0008            _conversionADC 7170  
          ?_SetDDRamAddr 0001                    ?_main 0001                    ?_utoa 001C  
        __end_of___lodiv 781E          __end_of___lomod 772E             vfpfcnvrt@fmt 003E  
           vfpfcnvrt@llu 0046                    _PORTD 000F83            __CFG_USBDIV$2 000000  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
        __end_of_initADC 7092          __end_of_initLCD 714A           __CFG_EBTRB$OFF 000000  
                  _flags 0066                    _fputc 7594                    _fputs 72BC  
        __end_of_isdigit 7236                    atoi@n 0015                    pad@fp 0011  
                  atoi@s 0008                    _width 0062                    _putch 706C  
        __end_of_isspace 739C                    tablat 000FF5                    utoa@d 001E  
                  utoa@i 003A                    utoa@n 0032                    utoa@p 002E  
                  utoa@w 0030                    status 000FD8          __end_of_sprintf 73EE  
       ___lodiv@dividend 0001          __initialization 70A8             __end_of_atoi 7AAA  
           __end_of_main 74CE             __end_of_utoa 7CAC         __end_of_BusyXLCD 71C8  
  __size_of_DelayPORXLCD 0016           ?_conversionADC 0003           ??_SetDDRamAddr 0001  
       __end_of_OpenXLCD 791A                   ??_atoi 000A                   ??_main 0060  
                 ??_utoa 0026            __activetblptr 000002            _WriteDataXLCD 70BE  
       ___lodiv@quotient 0011              ?_ChecarLEDs 0001                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_fputc 0001  
                 ?_fputs 000A                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 ?_putch 0001            vfpfcnvrt@done 004E           __CFG_VREGEN$ON 000000  
       __end_of_delay_ms 7278             _DelayPORXLCD 7092           __CFG_XINST$OFF 000000  
           vfprintf@cfmt 0058                   ___wmul 714A           __CFG_STVREN$ON 000000  
              ??___lodiv 0011                ??___lomod 0011                   clear_0 70AE  
                 pad@buf 0013           ?_WriteDataXLCD 0001                   _strlen 71C8  
              ??_initADC 0001                ??_initLCD 0008                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
              ??_isdigit 0003             __mediumconst 0000                ??_isspace 0003  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_putsXLCD 72BC         __end_of_vfprintf 7450  
                 utoa@fp 001C                ??_sprintf 0060               __accesstop 0060  
__end_of__initialization 70B4          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001      __size_of_ChecarLEDs 000E          ??_conversionADC 0005  
          __end_of_fputc 765E            __end_of_fputs 7300            __end_of_putch 706E  
                ??_fputc 0005                  ??_fputs 000E   __size_of_DelayFor18TCY 0008  
                ??_putch 0001               __pbssBANK0 0060                ?_BusyXLCD 0001  
        WriteCmdXLCD@cmd 0001     __end_of_SetDDRamAddr 7124                ?_OpenXLCD 0001  
      WriteDataXLCD@data 0001                  ?___wmul 0001          ??_WriteDataXLCD 0001  
                ?_strlen 0001                ?_delay_ms 0001       __size_of_vfpfcnvrt 0354  
       ___lomod@dividend 0001       __size_of_putrsXLCD 004A               ??_BusyXLCD 0001  
             ??_OpenXLCD 0006                  __Hparam 0000                  __Lparam 0000  
          _DelayFor18TCY 706E          __size_of___wmul 0026                  ___lodiv 772E  
                ___lomod 765E                ?_putsXLCD 0002                ?_vfprintf 0052  
           __psmallconst 1004                  __pcinit 70A8          putrsXLCD@buffer 0002  
                __ramtop 0800                  __ptext0 7450                  __ptext1 739C  
                __ptext2 73EE                  __ptext3 7CAC                  __ptext4 7AAA  
                __ptext5 74CE                  __ptext6 71C8                  __ptext7 72BC  
                __ptext8 7594                  __ptext9 706C                  _initADC 7084  
        __size_of_strlen 0036                  _initLCD 7124             __size_of_pad 00C6  
                _isdigit 71FE                  _isspace 734A               ??_delay_ms 0005  
           ??_ChecarLEDs 0003                  atoi@neg 000E                  _sprintf 739C  
   end_of_initialization 70B4                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C        __end_of_vfpfcnvrt 8000           ?_DelayFor18TCY 0001  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_putsXLCD 0004       __end_of_ChecarLEDs 7084  
             ??_vfprintf 0058                  strlen@a 0003                  strlen@s 0001  
      __end_of_putrsXLCD 734A                _TRISBbits 000F93                _TRISDbits 000F95  
              _TRISEbits 000F96    __size_of_SetDDRamAddr 0024              vfpfcnvrt@ap 0040  
            vfpfcnvrt@fp 003C           __end_of___wmul 7170             _SetDDRamAddr 7100  
     SetDDRamAddr@DDaddr 0001           __end_of_strlen 71FE      start_initialization 70A8  
        ___lodiv@divisor 0009          ___lodiv@counter 0019              __end_of_pad 7594  
      __size_of_BusyXLCD 002E          ??_DelayFor18TCY 0001              vfprintf@fmt 0054  
      __size_of_OpenXLCD 00FC                 ??___wmul 0005            ?_WriteCmdXLCD 0001  
       __CFG_LPT1OSC$OFF 000000    __end_of_conversionADC 719A                 ??_strlen 0003  
          __pcstackBANK0 008D        __size_of_delay_ms 0042                _atoi$1070 0014  
              _atoi$1071 0012                _atoi$1069 0010           putsXLCD@buffer 0002  
         ??_WriteCmdXLCD 0001                 ?___lodiv 0001                 ?___lomod 0001  
      __size_of_putsXLCD 0044    __end_of_WriteDataXLCD 70DE        __size_of_vfprintf 0062  
               ?_initADC 0001          ___lomod@divisor 0009                 ?_initLCD 0001  
            __smallconst 1004          ___lomod@counter 0011                 ?_isdigit 0001  
               ?_isspace 0001                 ?_sprintf 005A           __size_of_fputc 00CA  
         __size_of_fputs 0044           __size_of_putch 0002           ___wmul@product 0005  
               _LATBbits 000F8A                 _LATDbits 000F8C                 _LATEbits 000F8D  
              delay_ms@n 0001            ?_DelayPORXLCD 0001          OpenXLCD@lcdtype 0007  
       __CFG_WDTPS$32768 000000                _vfpfcnvrt 7CAC               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001                _putrsXLCD 7300             _isspace$1087 0007  
               _BusyXLCD 719A           ??_DelayPORXLCD 0006                 _OpenXLCD 781E  
               __Hrparam 0000               vfprintf@ap 0056                 __Lrparam 0000  
             vfprintf@fp 0052         __size_of___lodiv 00F0         __size_of___lomod 00D0  
             ?_vfpfcnvrt 003C               sprintf@fmt 005C               ?_putrsXLCD 0002  
       __size_of_initADC 000E         __size_of_initLCD 0026         __size_of_isdigit 0038  
               _delay_ms 7236         __size_of_isspace 0052            ChecarLEDs@res 0001  
               __ptext10 765E                 __ptext11 772E                 __ptext20 781E  
               __ptext12 791A                 __ptext21 70DE                 __ptext13 734A  
               __ptext22 7100                 __ptext14 71FE                 __ptext23 7092  
               __ptext15 714A                 __ptext24 7236                 __ptext16 7278  
               __ptext25 719A                 __ptext17 7124                 __ptext26 706E  
               __ptext18 7300                 __ptext27 7084                 __ptext19 70BE  
               __ptext28 7170                 __ptext29 7076     __end_of_WriteCmdXLCD 7100  
       __size_of_sprintf 0052            __size_of_atoi 0190            __size_of_main 007E  
          __size_of_utoa 0202                 _putsXLCD 7278                 _vfprintf 73EE  
  __CFG_CPUDIV$OSC1_PLL2 000000                 isdigit@c 0001                sprintf@ap 008F  
               isspace@c 0001    __end_of_DelayFor18TCY 7076              ??_vfpfcnvrt 0042  
          _vfpfcnvrt$614 0050                 sprintf@f 0091                 sprintf@s 005A  
   __end_of_DelayPORXLCD 70A8              ??_putrsXLCD 0004       __CFG_FOSC$HSPLL_HS 000000  
 __size_of_conversionADC 002A  
