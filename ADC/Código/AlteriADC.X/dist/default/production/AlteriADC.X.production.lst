

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Mar 18 23:36:11 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4550 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     _ADRESL	set	4035
    79  0000                     _ADRESH	set	4036
    80  0000                     _ADCON0bits	set	4034
    81  0000                     _ADCON2	set	4032
    82  0000                     _ADCON1	set	4033
    83  0000                     _ADCON0	set	4034
    84  0000                     _LATBbits	set	3978
    85  0000                     _LATAbits	set	3977
    86  0000                     _TRISBbits	set	3987
    87  0000                     _TRISAbits	set	3986
    88  0000                     _TRISEbits	set	3990
    89  0000                     _TRISD	set	3989
    90  0000                     _PORTD	set	3971
    91  0000                     _LATEbits	set	3981
    92                           
    93                           	psect	smallconst
    94  001004                     __psmallconst:
    95                           	opt callstack 0
    96  001004  00                 	db	0
    97  001005                     STR_2:
    98  001005  43                 	db	67	;'C'
    99  001006  6F                 	db	111	;'o'
   100  001007  6E                 	db	110	;'n'
   101  001008  76                 	db	118	;'v'
   102  001009  65                 	db	101	;'e'
   103  00100A  72                 	db	114	;'r'
   104  00100B  74                 	db	116	;'t'
   105  00100C  69                 	db	105	;'i'
   106  00100D  64                 	db	100	;'d'
   107  00100E  6F                 	db	111	;'o'
   108  00100F  72                 	db	114	;'r'
   109  001010  20                 	db	32
   110  001011  41                 	db	65	;'A'
   111  001012  44                 	db	68	;'D'
   112  001013  3A                 	db	58	;':'
   113  001014  00                 	db	0
   114  001015                     STR_1:
   115  001015  25                 	db	37
   116  001016  30                 	db	48	;'0'
   117  001017  34                 	db	52	;'4'
   118  001018  75                 	db	117	;'u'
   119  001019  00                 	db	0
   120                           
   121                           ; #config settings
   122  00101A  00                 	db	0	; dummy byte at the end
   123  0000                     
   124                           	psect	cinit
   125  006EBA                     __pcinit:
   126                           	opt callstack 0
   127  006EBA                     start_initialization:
   128                           	opt callstack 0
   129  006EBA                     __initialization:
   130                           	opt callstack 0
   131                           
   132                           ; Clear objects allocated to BANK0 (45 bytes)
   133  006EBA  EE00  F060         	lfsr	0,__pbssBANK0
   134  006EBE  0E2D               	movlw	45
   135  006EC0                     clear_0:
   136  006EC0  6AEE               	clrf	postinc0,c
   137  006EC2  06E8               	decf	wreg,f,c
   138  006EC4  E1FD               	bnz	clear_0
   139  006EC6                     end_of_initialization:
   140                           	opt callstack 0
   141  006EC6                     __end_of__initialization:
   142                           	opt callstack 0
   143  006EC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   144  006EC8  6EF8               	movwf	tblptru,c
   145  006ECA  0100               	movlb	0
   146  006ECC  EF8B  F039         	goto	_main	;jump to C main() function
   147                           
   148                           	psect	bssBANK0
   149  000060                     __pbssBANK0:
   150                           	opt callstack 0
   151  000060                     _nout:
   152                           	opt callstack 0
   153  000060                     	ds	2
   154  000062                     _width:
   155                           	opt callstack 0
   156  000062                     	ds	2
   157  000064                     _prec:
   158                           	opt callstack 0
   159  000064                     	ds	2
   160  000066                     _flags:
   161                           	opt callstack 0
   162  000066                     	ds	2
   163  000068                     _dbuf:
   164                           	opt callstack 0
   165  000068                     	ds	32
   166  000088                     _strResultado:
   167                           	opt callstack 0
   168  000088                     	ds	5
   169                           
   170                           	psect	cstackBANK0
   171  00008D                     __pcstackBANK0:
   172                           	opt callstack 0
   173  00008D                     	ds	2
   174  00008F                     sprintf@ap:
   175                           	opt callstack 0
   176                           
   177                           ; 2 bytes @ 0x2
   178  00008F                     	ds	2
   179  000091                     sprintf@f:
   180                           	opt callstack 0
   181                           
   182                           ; 6 bytes @ 0x4
   183  000091                     	ds	6
   184                           
   185                           	psect	cstackCOMRAM
   186  000001                     __pcstackCOMRAM:
   187                           	opt callstack 0
   188  000001                     ??_SetDDRamAddr:
   189  000001                     ?_conversionADC:
   190                           	opt callstack 0
   191  000001                     ?_strlen:
   192                           	opt callstack 0
   193  000001                     ?_isdigit:
   194                           	opt callstack 0
   195  000001                     ?_isspace:
   196                           	opt callstack 0
   197  000001                     ?___wmul:
   198                           	opt callstack 0
   199  000001                     ?___lodiv:
   200                           	opt callstack 0
   201  000001                     ?___lomod:
   202                           	opt callstack 0
   203  000001                     WriteCmdXLCD@cmd:
   204                           	opt callstack 0
   205  000001                     WriteDataXLCD@data:
   206                           	opt callstack 0
   207  000001                     ___wmul@multiplier:
   208                           	opt callstack 0
   209  000001                     isdigit@c:
   210                           	opt callstack 0
   211  000001                     isspace@c:
   212                           	opt callstack 0
   213  000001                     fputc@c:
   214                           	opt callstack 0
   215  000001                     strlen@s:
   216                           	opt callstack 0
   217  000001                     delay_ms@n:
   218                           	opt callstack 0
   219  000001                     ___lodiv@dividend:
   220                           	opt callstack 0
   221  000001                     ___lomod@dividend:
   222                           	opt callstack 0
   223                           
   224                           ; 8 bytes @ 0x0
   225  000001                     	ds	1
   226  000002                     putrsXLCD@buffer:
   227                           	opt callstack 0
   228  000002                     putsXLCD@buffer:
   229                           	opt callstack 0
   230                           
   231                           ; 2 bytes @ 0x1
   232  000002                     	ds	1
   233  000003                     ??_conversionADC:
   234  000003                     ??_isdigit:
   235  000003                     ??_isspace:
   236  000003                     ___wmul@multiplicand:
   237                           	opt callstack 0
   238  000003                     fputc@fp:
   239                           	opt callstack 0
   240  000003                     strlen@a:
   241                           	opt callstack 0
   242                           
   243                           ; 2 bytes @ 0x2
   244  000003                     	ds	1
   245  000004                     SetDDRamAddr@DDaddr:
   246                           	opt callstack 0
   247                           
   248                           ; 1 bytes @ 0x3
   249  000004                     	ds	1
   250  000005                     ??_fputc:
   251  000005                     ??_delay_ms:
   252  000005                     conversionADC@resultado:
   253                           	opt callstack 0
   254  000005                     ___wmul@product:
   255                           	opt callstack 0
   256                           
   257                           ; 2 bytes @ 0x4
   258  000005                     	ds	1
   259  000006                     ??_OpenXLCD:
   260                           
   261                           ; 1 bytes @ 0x5
   262  000006                     	ds	1
   263  000007                     OpenXLCD@lcdtype:
   264                           	opt callstack 0
   265  000007                     _isspace$1082:
   266                           	opt callstack 0
   267  000007                     ChecarLEDs@res:
   268                           	opt callstack 0
   269                           
   270                           ; 2 bytes @ 0x6
   271  000007                     	ds	1
   272  000008                     ?_atoi:
   273                           	opt callstack 0
   274  000008                     atoi@s:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0x7
   278  000008                     	ds	1
   279  000009                     ??_ChecarLEDs:
   280  000009                     ___lodiv@divisor:
   281                           	opt callstack 0
   282  000009                     ___lomod@divisor:
   283                           	opt callstack 0
   284                           
   285                           ; 8 bytes @ 0x8
   286  000009                     	ds	1
   287  00000A                     ??_atoi:
   288  00000A                     fputs@s:
   289                           	opt callstack 0
   290                           
   291                           ; 2 bytes @ 0x9
   292  00000A                     	ds	2
   293  00000C                     fputs@fp:
   294                           	opt callstack 0
   295                           
   296                           ; 2 bytes @ 0xB
   297  00000C                     	ds	2
   298  00000E                     fputs@c:
   299                           	opt callstack 0
   300  00000E                     atoi@neg:
   301                           	opt callstack 0
   302                           
   303                           ; 2 bytes @ 0xD
   304  00000E                     	ds	1
   305  00000F                     fputs@i:
   306                           	opt callstack 0
   307                           
   308                           ; 2 bytes @ 0xE
   309  00000F                     	ds	1
   310  000010                     _atoi$1064:
   311                           	opt callstack 0
   312                           
   313                           ; 2 bytes @ 0xF
   314  000010                     	ds	1
   315  000011                     ?_pad:
   316                           	opt callstack 0
   317  000011                     ___lomod@counter:
   318                           	opt callstack 0
   319  000011                     pad@fp:
   320                           	opt callstack 0
   321  000011                     ___lodiv@quotient:
   322                           	opt callstack 0
   323                           
   324                           ; 8 bytes @ 0x10
   325  000011                     	ds	1
   326  000012                     _atoi$1066:
   327                           	opt callstack 0
   328                           
   329                           ; 2 bytes @ 0x11
   330  000012                     	ds	1
   331  000013                     pad@buf:
   332                           	opt callstack 0
   333                           
   334                           ; 2 bytes @ 0x12
   335  000013                     	ds	1
   336  000014                     _atoi$1065:
   337                           	opt callstack 0
   338                           
   339                           ; 1 bytes @ 0x13
   340  000014                     	ds	1
   341  000015                     pad@p:
   342                           	opt callstack 0
   343  000015                     atoi@n:
   344                           	opt callstack 0
   345                           
   346                           ; 2 bytes @ 0x14
   347  000015                     	ds	2
   348  000017                     ??_pad:
   349                           
   350                           ; 1 bytes @ 0x16
   351  000017                     	ds	1
   352  000018                     pad@i:
   353                           	opt callstack 0
   354                           
   355                           ; 2 bytes @ 0x17
   356  000018                     	ds	1
   357  000019                     ___lodiv@counter:
   358                           	opt callstack 0
   359                           
   360                           ; 1 bytes @ 0x18
   361  000019                     	ds	1
   362  00001A                     pad@w:
   363                           	opt callstack 0
   364                           
   365                           ; 2 bytes @ 0x19
   366  00001A                     	ds	2
   367  00001C                     ?_utoa:
   368                           	opt callstack 0
   369  00001C                     utoa@fp:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x1B
   373  00001C                     	ds	2
   374  00001E                     utoa@d:
   375                           	opt callstack 0
   376                           
   377                           ; 8 bytes @ 0x1D
   378  00001E                     	ds	8
   379  000026                     ??_utoa:
   380                           
   381                           ; 1 bytes @ 0x25
   382  000026                     	ds	8
   383  00002E                     utoa@p:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x2D
   387  00002E                     	ds	2
   388  000030                     utoa@w:
   389                           	opt callstack 0
   390                           
   391                           ; 2 bytes @ 0x2F
   392  000030                     	ds	2
   393  000032                     utoa@n:
   394                           	opt callstack 0
   395                           
   396                           ; 8 bytes @ 0x31
   397  000032                     	ds	8
   398  00003A                     utoa@i:
   399                           	opt callstack 0
   400                           
   401                           ; 2 bytes @ 0x39
   402  00003A                     	ds	2
   403  00003C                     ?_vfpfcnvrt:
   404                           	opt callstack 0
   405  00003C                     vfpfcnvrt@fp:
   406                           	opt callstack 0
   407                           
   408                           ; 2 bytes @ 0x3B
   409  00003C                     	ds	2
   410  00003E                     vfpfcnvrt@fmt:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0x3D
   414  00003E                     	ds	2
   415  000040                     vfpfcnvrt@ap:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0x3F
   419  000040                     	ds	2
   420  000042                     ??_vfpfcnvrt:
   421                           
   422                           ; 1 bytes @ 0x41
   423  000042                     	ds	4
   424  000046                     vfpfcnvrt@llu:
   425                           	opt callstack 0
   426                           
   427                           ; 8 bytes @ 0x45
   428  000046                     	ds	8
   429  00004E                     vfpfcnvrt@done:
   430                           	opt callstack 0
   431                           
   432                           ; 2 bytes @ 0x4D
   433  00004E                     	ds	2
   434  000050                     _vfpfcnvrt$609:
   435                           	opt callstack 0
   436                           
   437                           ; 2 bytes @ 0x4F
   438  000050                     	ds	2
   439  000052                     ?_vfprintf:
   440                           	opt callstack 0
   441  000052                     vfprintf@fp:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x51
   445  000052                     	ds	2
   446  000054                     vfprintf@fmt:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x53
   450  000054                     	ds	2
   451  000056                     vfprintf@ap:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x55
   455  000056                     	ds	2
   456  000058                     vfprintf@cfmt:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0x57
   460  000058                     	ds	2
   461  00005A                     ?_sprintf:
   462                           	opt callstack 0
   463  00005A                     sprintf@s:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x59
   467  00005A                     	ds	2
   468  00005C                     sprintf@fmt:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x5B
   472  00005C                     	ds	4
   473  000060                     
   474                           ; 1 bytes @ 0x5F
   475 ;;
   476 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   477 ;;
   478 ;; *************** function _main *****************
   479 ;; Defined at:
   480 ;;		line 22 in file "main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   494 ;;      Params:         0       0       0       0       0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels required when called:    8
   500 ;; This function calls:
   501 ;;		_ChecarLEDs
   502 ;;		_WriteCmdXLCD
   503 ;;		_conversionADC
   504 ;;		_delay_ms
   505 ;;		_initADC
   506 ;;		_initLCD
   507 ;;		_initLED
   508 ;;		_putsXLCD
   509 ;;		_sprintf
   510 ;; This function is called by:
   511 ;;		Startup code after reset
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text0
   516  007316                     __ptext0:
   517                           	opt callstack 0
   518  007316                     _main:
   519                           	opt callstack 23
   520  007316                     
   521                           ;main.c: 23:     initLCD();
   522  007316  EC68  F037         	call	_initLCD	;wreg free
   523  00731A                     
   524                           ;main.c: 24:     initADC();
   525  00731A  EC4B  F037         	call	_initADC	;wreg free
   526  00731E                     
   527                           ;main.c: 25:     initLED();
   528  00731E  EC8E  F037         	call	_initLED	;wreg free
   529  007322                     l2280:
   530                           
   531                           ;main.c: 28:         sprintf(strResultado,"%04u",conversionADC());
   532  007322  0E88               	movlw	low _strResultado
   533  007324  6E5A               	movwf	sprintf@s^0,c
   534  007326  0E00               	movlw	high _strResultado
   535  007328  6E5B               	movwf	(sprintf@s+1)^0,c
   536  00732A  0E15               	movlw	low STR_1
   537  00732C  6E5C               	movwf	sprintf@fmt^0,c
   538  00732E  0E10               	movlw	high STR_1
   539  007330  6E5D               	movwf	(sprintf@fmt+1)^0,c
   540  007332  ECA3  F037         	call	_conversionADC	;wreg free
   541  007336  C001  F05E         	movff	?_conversionADC,?_sprintf+4
   542  00733A  C002  F05F         	movff	?_conversionADC+1,?_sprintf+5
   543  00733E  EC04  F039         	call	_sprintf	;wreg free
   544  007342                     
   545                           ;main.c: 29:         ChecarLEDs(conversionADC());
   546  007342  ECA3  F037         	call	_conversionADC	;wreg free
   547  007346  C001  F007         	movff	?_conversionADC,ChecarLEDs@res
   548  00734A  C002  F008         	movff	?_conversionADC+1,ChecarLEDs@res+1
   549  00734E  ECE6  F03B         	call	_ChecarLEDs	;wreg free
   550  007352                     
   551                           ;main.c: 30:         WriteCmdXLCD(0b11000000 + 5);
   552  007352  0EC5               	movlw	197
   553  007354  ECF0  F037         	call	_WriteCmdXLCD
   554  007358                     
   555                           ;main.c: 31:         putsXLCD(strResultado);
   556  007358  0E88               	movlw	low _strResultado
   557  00735A  6E02               	movwf	putsXLCD@buffer^0,c
   558  00735C  0E00               	movlw	high _strResultado
   559  00735E  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   560  007360  EC4F  F038         	call	_putsXLCD	;wreg free
   561  007364                     
   562                           ;main.c: 32:         delay_ms(200);
   563  007364  0EC8               	movlw	200
   564  007366  6E01               	movwf	delay_ms@n^0,c
   565  007368  0E00               	movlw	0
   566  00736A  6E02               	movwf	(delay_ms@n+1)^0,c
   567  00736C  0E00               	movlw	0
   568  00736E  6E03               	movwf	(delay_ms@n+2)^0,c
   569  007370  0E00               	movlw	0
   570  007372  6E04               	movwf	(delay_ms@n+3)^0,c
   571  007374  EC2E  F038         	call	_delay_ms	;wreg free
   572  007378  EF91  F039         	goto	l2280
   573  00737C  EF00  F008         	goto	start
   574  007380                     __end_of_main:
   575                           	opt callstack 0
   576                           
   577 ;; *************** function _sprintf *****************
   578 ;; Defined at:
   579 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;  s               2   89[COMRAM] PTR unsigned char 
   582 ;;		 -> strResultado(5), 
   583 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
   584 ;;		 -> STR_1(5), 
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  f               6    4[BANK0 ] struct _IO_FILE
   587 ;;  ap              2    2[BANK0 ] PTR void [1]
   588 ;;		 -> ?_sprintf(2), 
   589 ;;  ret             2    0        int 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  2   89[COMRAM] int 
   592 ;; Registers used:
   593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   599 ;;      Params:         6       0       0       0       0       0       0       0       0
   600 ;;      Locals:         0      10       0       0       0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0       0       0       0       0
   602 ;;      Totals:         6      10       0       0       0       0       0       0       0
   603 ;;Total ram usage:       16 bytes
   604 ;; Hardware stack levels used:    1
   605 ;; Hardware stack levels required when called:    7
   606 ;; This function calls:
   607 ;;		_vfprintf
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text1
   614  007208                     __ptext1:
   615                           	opt callstack 0
   616  007208                     _sprintf:
   617                           	opt callstack 23
   618  007208  0E5E               	movlw	low (?_sprintf+4)
   619  00720A  0100               	movlb	0	; () banked
   620  00720C  6F8F               	movwf	sprintf@ap& (0+255),b
   621  00720E  0E00               	movlw	high (?_sprintf+4)
   622  007210  6F90               	movwf	(sprintf@ap+1)& (0+255),b
   623  007212  C05A  F091         	movff	sprintf@s,sprintf@f
   624  007216  C05B  F092         	movff	sprintf@s+1,sprintf@f+1
   625  00721A                     
   626                           ; BSR set to: 0
   627  00721A  0E00               	movlw	0
   628  00721C  6F94               	movwf	(sprintf@f+3)& (0+255),b
   629  00721E  0E00               	movlw	0
   630  007220  6F93               	movwf	(sprintf@f+2)& (0+255),b
   631  007222                     
   632                           ; BSR set to: 0
   633  007222  0E00               	movlw	0
   634  007224  6F96               	movwf	(sprintf@f+5)& (0+255),b
   635  007226  0E00               	movlw	0
   636  007228  6F95               	movwf	(sprintf@f+4)& (0+255),b
   637  00722A                     
   638                           ; BSR set to: 0
   639  00722A  0E91               	movlw	low sprintf@f
   640  00722C  6E52               	movwf	vfprintf@fp^0,c
   641  00722E  0E00               	movlw	high sprintf@f
   642  007230  6E53               	movwf	(vfprintf@fp+1)^0,c
   643  007232  C05C  F054         	movff	sprintf@fmt,vfprintf@fmt
   644  007236  C05D  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
   645  00723A  0E8F               	movlw	low sprintf@ap
   646  00723C  6E56               	movwf	vfprintf@ap^0,c
   647  00723E  0E00               	movlw	high sprintf@ap
   648  007240  6E57               	movwf	(vfprintf@ap+1)^0,c
   649  007242  EC5A  F039         	call	_vfprintf	;wreg free
   650  007246  0100               	movlb	0	; () banked
   651  007248  5193               	movf	(sprintf@f+2)& (0+255),w,b
   652  00724A  245A               	addwf	sprintf@s^0,w,c
   653  00724C  6ED9               	movwf	fsr2l,c
   654  00724E  5194               	movf	(sprintf@f+3)& (0+255),w,b
   655  007250  205B               	addwfc	(sprintf@s+1)^0,w,c
   656  007252  6EDA               	movwf	fsr2h,c
   657  007254  0E00               	movlw	0
   658  007256  6EDF               	movwf	indf2,c
   659  007258                     
   660                           ; BSR set to: 0
   661  007258  0012               	return		;funcret
   662  00725A                     __end_of_sprintf:
   663                           	opt callstack 0
   664                           
   665 ;; *************** function _vfprintf *****************
   666 ;; Defined at:
   667 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
   670 ;;		 -> sprintf@f(6), 
   671 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
   672 ;;		 -> STR_1(5), 
   673 ;;  ap              2   85[COMRAM] PTR PTR void 
   674 ;;		 -> sprintf@ap(2), 
   675 ;; Auto vars:     Size  Location     Type
   676 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
   677 ;;		 -> STR_1(5), 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  2   81[COMRAM] int 
   680 ;; Registers used:
   681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   687 ;;      Params:         6       0       0       0       0       0       0       0       0
   688 ;;      Locals:         2       0       0       0       0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0       0       0       0       0
   690 ;;      Totals:         8       0       0       0       0       0       0       0       0
   691 ;;Total ram usage:        8 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    6
   694 ;; This function calls:
   695 ;;		_vfpfcnvrt
   696 ;; This function is called by:
   697 ;;		_sprintf
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text2
   702  0072B4                     __ptext2:
   703                           	opt callstack 0
   704  0072B4                     _vfprintf:
   705                           	opt callstack 23
   706  0072B4                     
   707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   708  0072B4  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
   709  0072B8  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   710  0072BC                     
   711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   712  0072BC  0E00               	movlw	0
   713  0072BE  0100               	movlb	0	; () banked
   714  0072C0  6F61               	movwf	(_nout+1)& (0+255),b
   715  0072C2  0E00               	movlw	0
   716  0072C4  6F60               	movwf	_nout& (0+255),b
   717                           
   718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   719  0072C6  EF78  F039         	goto	l2158
   720  0072CA                     l2156:
   721                           
   722                           ; BSR set to: 0
   723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   724  0072CA  C052  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
   725  0072CE  C053  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   726  0072D2  0E58               	movlw	low vfprintf@cfmt
   727  0072D4  6E3E               	movwf	vfpfcnvrt@fmt^0,c
   728  0072D6  0E00               	movlw	high vfprintf@cfmt
   729  0072D8  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
   730  0072DA  C056  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
   731  0072DE  C057  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   732  0072E2  EC56  F03E         	call	_vfpfcnvrt	;wreg free
   733  0072E6  503C               	movf	?_vfpfcnvrt^0,w,c
   734  0072E8  0100               	movlb	0	; () banked
   735  0072EA  2760               	addwf	_nout& (0+255),f,b
   736  0072EC  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
   737  0072EE  2361               	addwfc	(_nout+1)& (0+255),f,b
   738  0072F0                     l2158:
   739                           
   740                           ; BSR set to: 0
   741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   742  0072F0  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
   743  0072F4  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   744  0072F8                     	if	0	;tblptru may be non-zero
   745  0072F8                     	endif
   746  0072F8                     	if	0	;tblptru may be non-zero
   747  0072F8                     	endif
   748  0072F8  0008               	tblrd		*
   749  0072FA  50F5               	movf	tablat,w,c
   750  0072FC  0900               	iorlw	0
   751  0072FE  A4D8               	btfss	status,2,c
   752  007300  EF84  F039         	goto	u1401
   753  007304  EF86  F039         	goto	u1400
   754  007308                     u1401:
   755  007308  EF65  F039         	goto	l2156
   756  00730C                     u1400:
   757  00730C                     
   758                           ; BSR set to: 0
   759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   760  00730C  C060  F052         	movff	_nout,?_vfprintf
   761  007310  C061  F053         	movff	_nout+1,?_vfprintf+1
   762  007314                     
   763                           ; BSR set to: 0
   764  007314  0012               	return		;funcret
   765  007316                     __end_of_vfprintf:
   766                           	opt callstack 0
   767                           
   768 ;; *************** function _vfpfcnvrt *****************
   769 ;; Defined at:
   770 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
   773 ;;		 -> sprintf@f(6), 
   774 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
   775 ;;		 -> vfprintf@cfmt(2), 
   776 ;;  ap              2   63[COMRAM] PTR PTR void 
   777 ;;		 -> sprintf@ap(2), 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  llu             8   69[COMRAM] unsigned long long 
   780 ;;  ll              8    0        long long 
   781 ;;  f               4    0        long long 
   782 ;;  vp              3    0        PTR void 
   783 ;;  ct              3    0        unsigned char [3]
   784 ;;  cp              3    0        PTR unsigned char 
   785 ;;  done            2   77[COMRAM] int 
   786 ;;  i               2    0        int 
   787 ;;  c               1    0        unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  2   59[COMRAM] int 
   790 ;; Registers used:
   791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   797 ;;      Params:         6       0       0       0       0       0       0       0       0
   798 ;;      Locals:        12       0       0       0       0       0       0       0       0
   799 ;;      Temps:          4       0       0       0       0       0       0       0       0
   800 ;;      Totals:        22       0       0       0       0       0       0       0       0
   801 ;;Total ram usage:       22 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    5
   804 ;; This function calls:
   805 ;;		_atoi
   806 ;;		_fputc
   807 ;;		_isdigit
   808 ;;		_utoa
   809 ;; This function is called by:
   810 ;;		_vfprintf
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text3
   815  007CAC                     __ptext3:
   816                           	opt callstack 0
   817  007CAC                     _vfpfcnvrt:
   818                           	opt callstack 23
   819  007CAC                     
   820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   821  007CAC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   822  007CB0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   823  007CB4  CFDE FFF6          	movff	postinc2,tblptrl
   824  007CB8  CFDD FFF7          	movff	postdec2,tblptrh
   825  007CBC                     	if	0	;tblptru may be non-zero
   826  007CBC                     	endif
   827  007CBC                     	if	0	;tblptru may be non-zero
   828  007CBC                     	endif
   829  007CBC  0008               	tblrd		*
   830  007CBE  50F5               	movf	tablat,w,c
   831  007CC0  0A25               	xorlw	37
   832  007CC2  A4D8               	btfss	status,2,c
   833  007CC4  EF66  F03E         	goto	u1211
   834  007CC8  EF68  F03E         	goto	u1210
   835  007CCC                     u1211:
   836  007CCC  EFE4  F03F         	goto	l2074
   837  007CD0                     u1210:
   838  007CD0                     
   839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
   840  007CD0  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   841  007CD4  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   842  007CD8  2ADE               	incf	postinc2,f,c
   843  007CDA  0E00               	movlw	0
   844  007CDC  22DD               	addwfc	postdec2,f,c
   845  007CDE                     
   846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
   847  007CDE  0E00               	movlw	0
   848  007CE0  0100               	movlb	0	; () banked
   849  007CE2  6F63               	movwf	(_width+1)& (0+255),b
   850  007CE4  0E00               	movlw	0
   851  007CE6  6F62               	movwf	_width& (0+255),b
   852  007CE8  C062  F066         	movff	_width,_flags
   853  007CEC  C063  F067         	movff	_width+1,_flags+1
   854  007CF0                     
   855                           ; BSR set to: 0
   856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
   857  007CF0  6964               	setf	_prec& (0+255),b
   858  007CF2  6965               	setf	(_prec+1)& (0+255),b
   859  007CF4                     
   860                           ; BSR set to: 0
   861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
   862  007CF4  0E00               	movlw	0
   863  007CF6  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
   864  007CF8  0E00               	movlw	0
   865  007CFA  6E4E               	movwf	vfpfcnvrt@done^0,c
   866                           
   867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
   868  007CFC  EFCB  F03E         	goto	l2028
   869  007D00                     l2002:
   870                           
   871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
   872  007D00  0100               	movlb	0	; () banked
   873  007D02  8166               	bsf	_flags& (0+255),0,b
   874  007D04                     l2004:
   875                           
   876                           ; BSR set to: 0
   877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
   878  007D04  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   879  007D08  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   880  007D0C  2ADE               	incf	postinc2,f,c
   881  007D0E  0E00               	movlw	0
   882  007D10  22DD               	addwfc	postdec2,f,c
   883                           
   884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
   885  007D12  EFCB  F03E         	goto	l2028
   886  007D16                     l2006:
   887                           
   888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
   889  007D16  0100               	movlb	0	; () banked
   890  007D18  8366               	bsf	_flags& (0+255),1,b
   891  007D1A  EF82  F03E         	goto	l2004
   892  007D1E                     l2010:
   893                           
   894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
   895  007D1E  0100               	movlb	0	; () banked
   896  007D20  8566               	bsf	_flags& (0+255),2,b
   897  007D22  EF82  F03E         	goto	l2004
   898  007D26                     l2014:
   899                           
   900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
   901  007D26  0100               	movlb	0	; () banked
   902  007D28  8766               	bsf	_flags& (0+255),3,b
   903  007D2A  EF82  F03E         	goto	l2004
   904  007D2E                     l2018:
   905                           
   906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
   907  007D2E  0100               	movlb	0	; () banked
   908  007D30  8966               	bsf	_flags& (0+255),4,b
   909  007D32  EF82  F03E         	goto	l2004
   910  007D36                     l2022:
   911                           
   912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
   913  007D36  0E00               	movlw	0
   914  007D38  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
   915  007D3A  0E01               	movlw	1
   916  007D3C  6E4E               	movwf	vfpfcnvrt@done^0,c
   917                           
   918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
   919  007D3E  EFCB  F03E         	goto	l2028
   920  007D42                     l2026:
   921  007D42  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   922  007D46  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   923  007D4A  CFDE FFF6          	movff	postinc2,tblptrl
   924  007D4E  CFDD FFF7          	movff	postdec2,tblptrh
   925  007D52                     	if	0	;tblptru may be non-zero
   926  007D52                     	endif
   927  007D52                     	if	0	;tblptru may be non-zero
   928  007D52                     	endif
   929  007D52  0008               	tblrd		*
   930  007D54  50F5               	movf	tablat,w,c
   931  007D56  6E42               	movwf	??_vfpfcnvrt^0,c
   932  007D58  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
   933                           
   934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   935                           ; Switch size 1, requested type "simple"
   936                           ; Number of cases is 1, Range of values is 0 to 0
   937                           ; switch strategies available:
   938                           ; Name         Instructions Cycles
   939                           ; simple_byte            4     3 (average)
   940                           ;	Chosen strategy is simple_byte
   941  007D5A  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
   942  007D5C  0A00               	xorlw	0	; case 0
   943  007D5E  B4D8               	btfsc	status,2,c
   944  007D60  EFB4  F03E         	goto	l2342
   945  007D64  EF9B  F03E         	goto	l2022
   946  007D68                     l2342:
   947                           
   948                           ; Switch size 1, requested type "simple"
   949                           ; Number of cases is 5, Range of values is 32 to 48
   950                           ; switch strategies available:
   951                           ; Name         Instructions Cycles
   952                           ; simple_byte           16     9 (average)
   953                           ;	Chosen strategy is simple_byte
   954  007D68  5042               	movf	??_vfpfcnvrt^0,w,c
   955  007D6A  0A20               	xorlw	32	; case 32
   956  007D6C  B4D8               	btfsc	status,2,c
   957  007D6E  EF93  F03E         	goto	l2014
   958  007D72  0A03               	xorlw	3	; case 35
   959  007D74  B4D8               	btfsc	status,2,c
   960  007D76  EF97  F03E         	goto	l2018
   961  007D7A  0A08               	xorlw	8	; case 43
   962  007D7C  B4D8               	btfsc	status,2,c
   963  007D7E  EF8F  F03E         	goto	l2010
   964  007D82  0A06               	xorlw	6	; case 45
   965  007D84  B4D8               	btfsc	status,2,c
   966  007D86  EF80  F03E         	goto	l2002
   967  007D8A  0A1D               	xorlw	29	; case 48
   968  007D8C  B4D8               	btfsc	status,2,c
   969  007D8E  EF8B  F03E         	goto	l2006
   970  007D92  EF9B  F03E         	goto	l2022
   971  007D96                     l2028:
   972                           
   973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
   974  007D96  504E               	movf	vfpfcnvrt@done^0,w,c
   975  007D98  104F               	iorwf	(vfpfcnvrt@done+1)^0,w,c
   976  007D9A  B4D8               	btfsc	status,2,c
   977  007D9C  EFD2  F03E         	goto	u1221
   978  007DA0  EFD4  F03E         	goto	u1220
   979  007DA4                     u1221:
   980  007DA4  EFA1  F03E         	goto	l2026
   981  007DA8                     u1220:
   982  007DA8                     
   983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
   984  007DA8  0100               	movlb	0	; () banked
   985  007DAA  A166               	btfss	_flags& (0+255),0,b
   986  007DAC  EFDA  F03E         	goto	u1231
   987  007DB0  EFDC  F03E         	goto	u1230
   988  007DB4                     u1231:
   989  007DB4  EFDD  F03E         	goto	l2032
   990  007DB8                     u1230:
   991  007DB8                     
   992                           ; BSR set to: 0
   993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
   994  007DB8  9366               	bcf	_flags& (0+255),1,b
   995  007DBA                     l2032:
   996                           
   997                           ; BSR set to: 0
   998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
   999  007DBA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1000  007DBE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1001  007DC2  CFDE FFF6          	movff	postinc2,tblptrl
  1002  007DC6  CFDD FFF7          	movff	postdec2,tblptrh
  1003  007DCA                     	if	0	;tblptru may be non-zero
  1004  007DCA                     	endif
  1005  007DCA                     	if	0	;tblptru may be non-zero
  1006  007DCA                     	endif
  1007  007DCA  0008               	tblrd		*
  1008  007DCC  50F5               	movf	tablat,w,c
  1009  007DCE  0A2A               	xorlw	42
  1010  007DD0  A4D8               	btfss	status,2,c
  1011  007DD2  EFED  F03E         	goto	u1241
  1012  007DD6  EFEF  F03E         	goto	u1240
  1013  007DDA                     u1241:
  1014  007DDA  EF18  F03F         	goto	l2040
  1015  007DDE                     u1240:
  1016  007DDE                     
  1017                           ; BSR set to: 0
  1018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1019  007DDE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1020  007DE2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1021  007DE6  2ADE               	incf	postinc2,f,c
  1022  007DE8  0E00               	movlw	0
  1023  007DEA  22DD               	addwfc	postdec2,f,c
  1024                           
  1025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1026  007DEC  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1027  007DF0  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1028  007DF4  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1029  007DF8  0E02               	movlw	2
  1030  007DFA  26DE               	addwf	postinc2,f,c
  1031  007DFC  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1032  007E00  0E00               	movlw	0
  1033  007E02  22DD               	addwfc	postdec2,f,c
  1034  007E04  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1035  007E08  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1036  007E0C  CFDE F062          	movff	postinc2,_width
  1037  007E10  CFDD F063          	movff	postdec2,_width+1
  1038  007E14                     
  1039                           ; BSR set to: 0
  1040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1041  007E14  BF63               	btfsc	(_width+1)& (0+255),7,b
  1042  007E16  EF11  F03F         	goto	u1250
  1043  007E1A  EF0F  F03F         	goto	u1251
  1044  007E1E                     u1251:
  1045  007E1E  EF5B  F03F         	goto	l2050
  1046  007E22                     u1250:
  1047  007E22                     
  1048                           ; BSR set to: 0
  1049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1050  007E22  8166               	bsf	_flags& (0+255),0,b
  1051                           
  1052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1053  007E24  6D62               	negf	_width& (0+255),b
  1054  007E26  1F63               	comf	(_width+1)& (0+255),f,b
  1055  007E28  B0D8               	btfsc	status,0,c
  1056  007E2A  2B63               	incf	(_width+1)& (0+255),f,b
  1057  007E2C  EF5B  F03F         	goto	l2050
  1058  007E30                     l2040:
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1062  007E30  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1063  007E34  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1064  007E38  CFDE F008          	movff	postinc2,atoi@s
  1065  007E3C  CFDD F009          	movff	postdec2,atoi@s+1
  1066  007E40  EC8D  F03C         	call	_atoi	;wreg free
  1067  007E44  C008  F062         	movff	?_atoi,_width
  1068  007E48  C009  F063         	movff	?_atoi+1,_width+1
  1069                           
  1070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1071  007E4C  EF2F  F03F         	goto	l2044
  1072  007E50                     l2042:
  1073                           
  1074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1075  007E50  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1076  007E54  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1077  007E58  2ADE               	incf	postinc2,f,c
  1078  007E5A  0E00               	movlw	0
  1079  007E5C  22DD               	addwfc	postdec2,f,c
  1080  007E5E                     l2044:
  1081  007E5E  0ED0               	movlw	208
  1082  007E60  6E42               	movwf	??_vfpfcnvrt^0,c
  1083  007E62  0EFF               	movlw	255
  1084  007E64  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1085  007E66  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1086  007E6A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1087  007E6E  CFDE FFF6          	movff	postinc2,tblptrl
  1088  007E72  CFDD FFF7          	movff	postdec2,tblptrh
  1089  007E76                     	if	0	;tblptru may be non-zero
  1090  007E76                     	endif
  1091  007E76                     	if	0	;tblptru may be non-zero
  1092  007E76                     	endif
  1093  007E76  0008               	tblrd		*
  1094  007E78  50F5               	movf	tablat,w,c
  1095  007E7A  6E44               	movwf	(??_vfpfcnvrt+2)^0,c
  1096  007E7C  6A45               	clrf	(??_vfpfcnvrt+3)^0,c
  1097  007E7E  5042               	movf	??_vfpfcnvrt^0,w,c
  1098  007E80  2644               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1099  007E82  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1100  007E84  2245               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1101  007E86  5045               	movf	(??_vfpfcnvrt+3)^0,w,c
  1102  007E88  E10A               	bnz	u1260
  1103  007E8A  0E0A               	movlw	10
  1104  007E8C  5C44               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1105  007E8E  A0D8               	btfss	status,0,c
  1106  007E90  EF4C  F03F         	goto	u1261
  1107  007E94  EF4F  F03F         	goto	u1260
  1108  007E98                     u1261:
  1109  007E98  0E01               	movlw	1
  1110  007E9A  EF50  F03F         	goto	u1270
  1111  007E9E                     u1260:
  1112  007E9E  0E00               	movlw	0
  1113  007EA0                     u1270:
  1114  007EA0  6E50               	movwf	_vfpfcnvrt$609^0,c
  1115  007EA2  6A51               	clrf	(_vfpfcnvrt$609+1)^0,c
  1116  007EA4  5050               	movf	_vfpfcnvrt$609^0,w,c
  1117  007EA6  1051               	iorwf	(_vfpfcnvrt$609+1)^0,w,c
  1118  007EA8  A4D8               	btfss	status,2,c
  1119  007EAA  EF59  F03F         	goto	u1281
  1120  007EAE  EF5B  F03F         	goto	u1280
  1121  007EB2                     u1281:
  1122  007EB2  EF28  F03F         	goto	l2042
  1123  007EB6                     u1280:
  1124  007EB6                     l2050:
  1125                           
  1126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1127  007EB6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1128  007EBA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1129  007EBE  CFDE FFF6          	movff	postinc2,tblptrl
  1130  007EC2  CFDD FFF7          	movff	postdec2,tblptrh
  1131  007EC6                     	if	0	;tblptru may be non-zero
  1132  007EC6                     	endif
  1133  007EC6                     	if	0	;tblptru may be non-zero
  1134  007EC6                     	endif
  1135  007EC6  0008               	tblrd		*
  1136  007EC8  50F5               	movf	tablat,w,c
  1137  007ECA  0A75               	xorlw	117
  1138  007ECC  A4D8               	btfss	status,2,c
  1139  007ECE  EF6B  F03F         	goto	u1291
  1140  007ED2  EF6D  F03F         	goto	u1290
  1141  007ED6                     u1291:
  1142  007ED6  EFAE  F03F         	goto	l2058
  1143  007EDA                     u1290:
  1144  007EDA                     
  1145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1146  007EDA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1147  007EDE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1148  007EE2  2ADE               	incf	postinc2,f,c
  1149  007EE4  0E00               	movlw	0
  1150  007EE6  22DD               	addwfc	postdec2,f,c
  1151                           
  1152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1153  007EE8  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1154  007EEC  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1155  007EF0  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1156  007EF4  0E02               	movlw	2
  1157  007EF6  26DE               	addwf	postinc2,f,c
  1158  007EF8  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1159  007EFC  0E00               	movlw	0
  1160  007EFE  22DD               	addwfc	postdec2,f,c
  1161  007F00  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1162  007F04  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1163  007F08  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  1164  007F0C  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  1165  007F10  C044  F046         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1166  007F14  C045  F047         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1167  007F18  6A48               	clrf	(vfpfcnvrt@llu+2)^0,c
  1168  007F1A  6A49               	clrf	(vfpfcnvrt@llu+3)^0,c
  1169  007F1C  6A4A               	clrf	(vfpfcnvrt@llu+4)^0,c
  1170  007F1E  6A4B               	clrf	(vfpfcnvrt@llu+5)^0,c
  1171  007F20  6A4C               	clrf	(vfpfcnvrt@llu+6)^0,c
  1172  007F22  6A4D               	clrf	(vfpfcnvrt@llu+7)^0,c
  1173  007F24                     
  1174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1175  007F24  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  1176  007F28  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1177  007F2C  C046  F01E         	movff	vfpfcnvrt@llu,utoa@d
  1178  007F30  C047  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1179  007F34  C048  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1180  007F38  C049  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1181  007F3C  C04A  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1182  007F40  C04B  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1183  007F44  C04C  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1184  007F48  C04D  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1185  007F4C  EC55  F03D         	call	_utoa	;wreg free
  1186  007F50  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  1187  007F54  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  1188  007F58  EFFF  F03F         	goto	l302
  1189  007F5C                     l2058:
  1190                           
  1191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1192  007F5C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1193  007F60  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1194  007F64  CFDE FFF6          	movff	postinc2,tblptrl
  1195  007F68  CFDD FFF7          	movff	postdec2,tblptrh
  1196  007F6C                     	if	0	;tblptru may be non-zero
  1197  007F6C                     	endif
  1198  007F6C                     	if	0	;tblptru may be non-zero
  1199  007F6C                     	endif
  1200  007F6C  0008               	tblrd		*
  1201  007F6E  50F5               	movf	tablat,w,c
  1202  007F70  0A25               	xorlw	37
  1203  007F72  A4D8               	btfss	status,2,c
  1204  007F74  EFBE  F03F         	goto	u1301
  1205  007F78  EFC0  F03F         	goto	u1300
  1206  007F7C                     u1301:
  1207  007F7C  EFD7  F03F         	goto	l2068
  1208  007F80                     u1300:
  1209  007F80                     
  1210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1211  007F80  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1212  007F84  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1213  007F88  2ADE               	incf	postinc2,f,c
  1214  007F8A  0E00               	movlw	0
  1215  007F8C  22DD               	addwfc	postdec2,f,c
  1216  007F8E                     
  1217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1218  007F8E  0E00               	movlw	0
  1219  007F90  6E02               	movwf	(fputc@c+1)^0,c
  1220  007F92  0E25               	movlw	37
  1221  007F94  6E01               	movwf	fputc@c^0,c
  1222  007F96  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1223  007F9A  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1224  007F9E  EC23  F03A         	call	_fputc	;wreg free
  1225  007FA2                     l2064:
  1226                           
  1227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1228  007FA2  0E00               	movlw	0
  1229  007FA4  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1230  007FA6  0E01               	movlw	1
  1231  007FA8  6E3C               	movwf	?_vfpfcnvrt^0,c
  1232  007FAA  EFFF  F03F         	goto	l302
  1233  007FAE                     l2068:
  1234                           
  1235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1236  007FAE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1237  007FB2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1238  007FB6  2ADE               	incf	postinc2,f,c
  1239  007FB8  0E00               	movlw	0
  1240  007FBA  22DD               	addwfc	postdec2,f,c
  1241  007FBC                     
  1242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1243  007FBC  0E00               	movlw	0
  1244  007FBE  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1245  007FC0  0E00               	movlw	0
  1246  007FC2  6E3C               	movwf	?_vfpfcnvrt^0,c
  1247  007FC4  EFFF  F03F         	goto	l302
  1248  007FC8                     l2074:
  1249                           
  1250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1251  007FC8  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1252  007FCC  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1253  007FD0  CFDE FFF6          	movff	postinc2,tblptrl
  1254  007FD4  CFDD FFF7          	movff	postdec2,tblptrh
  1255  007FD8                     	if	0	;tblptru may be non-zero
  1256  007FD8                     	endif
  1257  007FD8                     	if	0	;tblptru may be non-zero
  1258  007FD8                     	endif
  1259  007FD8  0008               	tblrd		*
  1260  007FDA  50F5               	movf	tablat,w,c
  1261  007FDC  6E01               	movwf	fputc@c^0,c
  1262  007FDE  6A02               	clrf	(fputc@c+1)^0,c
  1263  007FE0  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1264  007FE4  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1265  007FE8  EC23  F03A         	call	_fputc	;wreg free
  1266  007FEC                     
  1267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1268  007FEC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1269  007FF0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1270  007FF4  2ADE               	incf	postinc2,f,c
  1271  007FF6  0E00               	movlw	0
  1272  007FF8  22DD               	addwfc	postdec2,f,c
  1273  007FFA  EFD1  F03F         	goto	l2064
  1274  007FFE                     l302:
  1275  007FFE  0012               	return		;funcret
  1276  008000                     __end_of_vfpfcnvrt:
  1277                           	opt callstack 0
  1278                           
  1279 ;; *************** function _utoa *****************
  1280 ;; Defined at:
  1281 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1284 ;;		 -> sprintf@f(6), 
  1285 ;;  d               8   29[COMRAM] unsigned long long 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  n               8   49[COMRAM] unsigned long long 
  1288 ;;  i               2   57[COMRAM] int 
  1289 ;;  w               2   47[COMRAM] int 
  1290 ;;  p               2   45[COMRAM] int 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  2   27[COMRAM] int 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1300 ;;      Params:        10       0       0       0       0       0       0       0       0
  1301 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1302 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1303 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1304 ;;Total ram usage:       32 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    4
  1307 ;; This function calls:
  1308 ;;		___lodiv
  1309 ;;		___lomod
  1310 ;;		_pad
  1311 ;; This function is called by:
  1312 ;;		_vfpfcnvrt
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text4
  1317  007AAA                     __ptext4:
  1318                           	opt callstack 0
  1319  007AAA                     _utoa:
  1320                           	opt callstack 23
  1321  007AAA                     
  1322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1323  007AAA  0100               	movlb	0	; () banked
  1324  007AAC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1325  007AAE  EF5B  F03D         	goto	u1051
  1326  007AB2  EF5D  F03D         	goto	u1050
  1327  007AB6                     u1051:
  1328  007AB6  EF5E  F03D         	goto	l1808
  1329  007ABA                     u1050:
  1330  007ABA                     
  1331                           ; BSR set to: 0
  1332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1333  007ABA  9366               	bcf	_flags& (0+255),1,b
  1334  007ABC                     l1808:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1338  007ABC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1339  007ABE  EF6B  F03D         	goto	u1060
  1340  007AC2  5165               	movf	(_prec+1)& (0+255),w,b
  1341  007AC4  E106               	bnz	u1061
  1342  007AC6  0564               	decf	_prec& (0+255),w,b
  1343  007AC8  B0D8               	btfsc	status,0,c
  1344  007ACA  EF69  F03D         	goto	u1061
  1345  007ACE  EF6B  F03D         	goto	u1060
  1346  007AD2                     u1061:
  1347  007AD2  EF71  F03D         	goto	l265
  1348  007AD6                     u1060:
  1349  007AD6                     
  1350                           ; BSR set to: 0
  1351  007AD6  0E00               	movlw	0
  1352  007AD8  6E2F               	movwf	(utoa@p+1)^0,c
  1353  007ADA  0E01               	movlw	1
  1354  007ADC  6E2E               	movwf	utoa@p^0,c
  1355  007ADE  EF75  F03D         	goto	l267
  1356  007AE2                     l265:
  1357                           
  1358                           ; BSR set to: 0
  1359  007AE2  C064  F02E         	movff	_prec,utoa@p
  1360  007AE6  C065  F02F         	movff	_prec+1,utoa@p+1
  1361  007AEA                     l267:
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1365  007AEA  C062  F030         	movff	_width,utoa@w
  1366  007AEE  C063  F031         	movff	_width+1,utoa@w+1
  1367                           
  1368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1369  007AF2  C01E  F032         	movff	utoa@d,utoa@n
  1370  007AF6  C01F  F033         	movff	utoa@d+1,utoa@n+1
  1371  007AFA  C020  F034         	movff	utoa@d+2,utoa@n+2
  1372  007AFE  C021  F035         	movff	utoa@d+3,utoa@n+3
  1373  007B02  C022  F036         	movff	utoa@d+4,utoa@n+4
  1374  007B06  C023  F037         	movff	utoa@d+5,utoa@n+5
  1375  007B0A  C024  F038         	movff	utoa@d+6,utoa@n+6
  1376  007B0E  C025  F039         	movff	utoa@d+7,utoa@n+7
  1377  007B12                     
  1378                           ; BSR set to: 0
  1379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1380  007B12  0E00               	movlw	0
  1381  007B14  6E3B               	movwf	(utoa@i+1)^0,c
  1382  007B16  0E1F               	movlw	31
  1383  007B18  6E3A               	movwf	utoa@i^0,c
  1384  007B1A                     
  1385                           ; BSR set to: 0
  1386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1387  007B1A  0E00               	movlw	0
  1388  007B1C  6F87               	movwf	(_dbuf+31)& (0+255),b
  1389                           
  1390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1391  007B1E  EF07  F03E         	goto	l1826
  1392  007B22                     l1816:
  1393                           
  1394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1395  007B22  063A               	decf	utoa@i^0,f,c
  1396  007B24  A0D8               	btfss	status,0,c
  1397  007B26  063B               	decf	(utoa@i+1)^0,f,c
  1398  007B28                     
  1399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1400  007B28  0E68               	movlw	low _dbuf
  1401  007B2A  243A               	addwf	utoa@i^0,w,c
  1402  007B2C  6ED9               	movwf	fsr2l,c
  1403  007B2E  0E00               	movlw	high _dbuf
  1404  007B30  203B               	addwfc	(utoa@i+1)^0,w,c
  1405  007B32  6EDA               	movwf	fsr2h,c
  1406  007B34  C032  F001         	movff	utoa@n,___lomod@dividend
  1407  007B38  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  1408  007B3C  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  1409  007B40  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  1410  007B44  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  1411  007B48  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  1412  007B4C  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  1413  007B50  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  1414  007B54  0E0A               	movlw	10
  1415  007B56  6E09               	movwf	___lomod@divisor^0,c
  1416  007B58  0E00               	movlw	0
  1417  007B5A  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1418  007B5C  0E00               	movlw	0
  1419  007B5E  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1420  007B60  0E00               	movlw	0
  1421  007B62  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1422  007B64  0E00               	movlw	0
  1423  007B66  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1424  007B68  0E00               	movlw	0
  1425  007B6A  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1426  007B6C  0E00               	movlw	0
  1427  007B6E  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1428  007B70  0E00               	movlw	0
  1429  007B72  6E10               	movwf	(___lomod@divisor+7)^0,c
  1430  007B74  EC88  F03A         	call	___lomod	;wreg free
  1431  007B78  C001  F026         	movff	?___lomod,??_utoa
  1432  007B7C  C002  F027         	movff	?___lomod+1,??_utoa+1
  1433  007B80  C003  F028         	movff	?___lomod+2,??_utoa+2
  1434  007B84  C004  F029         	movff	?___lomod+3,??_utoa+3
  1435  007B88  C005  F02A         	movff	?___lomod+4,??_utoa+4
  1436  007B8C  C006  F02B         	movff	?___lomod+5,??_utoa+5
  1437  007B90  C007  F02C         	movff	?___lomod+6,??_utoa+6
  1438  007B94  C008  F02D         	movff	?___lomod+7,??_utoa+7
  1439  007B98  5026               	movf	??_utoa^0,w,c
  1440  007B9A  0F30               	addlw	48
  1441  007B9C  6EDF               	movwf	indf2,c
  1442  007B9E                     
  1443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  1444  007B9E  062E               	decf	utoa@p^0,f,c
  1445  007BA0  A0D8               	btfss	status,0,c
  1446  007BA2  062F               	decf	(utoa@p+1)^0,f,c
  1447  007BA4                     
  1448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  1449  007BA4  0630               	decf	utoa@w^0,f,c
  1450  007BA6  A0D8               	btfss	status,0,c
  1451  007BA8  0631               	decf	(utoa@w+1)^0,f,c
  1452  007BAA                     
  1453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  1454  007BAA  C032  F001         	movff	utoa@n,___lodiv@dividend
  1455  007BAE  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1456  007BB2  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1457  007BB6  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1458  007BBA  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1459  007BBE  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1460  007BC2  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1461  007BC6  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1462  007BCA  0E0A               	movlw	10
  1463  007BCC  6E09               	movwf	___lodiv@divisor^0,c
  1464  007BCE  0E00               	movlw	0
  1465  007BD0  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1466  007BD2  0E00               	movlw	0
  1467  007BD4  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1468  007BD6  0E00               	movlw	0
  1469  007BD8  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1470  007BDA  0E00               	movlw	0
  1471  007BDC  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1472  007BDE  0E00               	movlw	0
  1473  007BE0  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1474  007BE2  0E00               	movlw	0
  1475  007BE4  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1476  007BE6  0E00               	movlw	0
  1477  007BE8  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1478  007BEA  ECF0  F03A         	call	___lodiv	;wreg free
  1479  007BEE  C001  F032         	movff	?___lodiv,utoa@n
  1480  007BF2  C002  F033         	movff	?___lodiv+1,utoa@n+1
  1481  007BF6  C003  F034         	movff	?___lodiv+2,utoa@n+2
  1482  007BFA  C004  F035         	movff	?___lodiv+3,utoa@n+3
  1483  007BFE  C005  F036         	movff	?___lodiv+4,utoa@n+4
  1484  007C02  C006  F037         	movff	?___lodiv+5,utoa@n+5
  1485  007C06  C007  F038         	movff	?___lodiv+6,utoa@n+6
  1486  007C0A  C008  F039         	movff	?___lodiv+7,utoa@n+7
  1487  007C0E                     l1826:
  1488                           
  1489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1490  007C0E  503A               	movf	utoa@i^0,w,c
  1491  007C10  103B               	iorwf	(utoa@i+1)^0,w,c
  1492  007C12  B4D8               	btfsc	status,2,c
  1493  007C14  EF0E  F03E         	goto	u1071
  1494  007C18  EF10  F03E         	goto	u1070
  1495  007C1C                     u1071:
  1496  007C1C  EF41  F03E         	goto	l1836
  1497  007C20                     u1070:
  1498  007C20  5032               	movf	utoa@n^0,w,c
  1499  007C22  1033               	iorwf	(utoa@n+1)^0,w,c
  1500  007C24  1034               	iorwf	(utoa@n+2)^0,w,c
  1501  007C26  1035               	iorwf	(utoa@n+3)^0,w,c
  1502  007C28  1036               	iorwf	(utoa@n+4)^0,w,c
  1503  007C2A  1037               	iorwf	(utoa@n+5)^0,w,c
  1504  007C2C  1038               	iorwf	(utoa@n+6)^0,w,c
  1505  007C2E  1039               	iorwf	(utoa@n+7)^0,w,c
  1506  007C30  A4D8               	btfss	status,2,c
  1507  007C32  EF1D  F03E         	goto	u1081
  1508  007C36  EF1F  F03E         	goto	u1080
  1509  007C3A                     u1081:
  1510  007C3A  EF91  F03D         	goto	l1816
  1511  007C3E                     u1080:
  1512  007C3E  BE2F               	btfsc	(utoa@p+1)^0,7,c
  1513  007C40  EF2C  F03E         	goto	u1090
  1514  007C44  502F               	movf	(utoa@p+1)^0,w,c
  1515  007C46  E106               	bnz	u1091
  1516  007C48  042E               	decf	utoa@p^0,w,c
  1517  007C4A  B0D8               	btfsc	status,0,c
  1518  007C4C  EF2A  F03E         	goto	u1091
  1519  007C50  EF2C  F03E         	goto	u1090
  1520  007C54                     u1091:
  1521  007C54  EF91  F03D         	goto	l1816
  1522  007C58                     u1090:
  1523  007C58  BE31               	btfsc	(utoa@w+1)^0,7,c
  1524  007C5A  EF37  F03E         	goto	u1101
  1525  007C5E  5031               	movf	(utoa@w+1)^0,w,c
  1526  007C60  E108               	bnz	u1100
  1527  007C62  0430               	decf	utoa@w^0,w,c
  1528  007C64  A0D8               	btfss	status,0,c
  1529  007C66  EF37  F03E         	goto	u1101
  1530  007C6A  EF39  F03E         	goto	u1100
  1531  007C6E                     u1101:
  1532  007C6E  EF41  F03E         	goto	l1836
  1533  007C72                     u1100:
  1534  007C72  0100               	movlb	0	; () banked
  1535  007C74  B366               	btfsc	_flags& (0+255),1,b
  1536  007C76  EF3F  F03E         	goto	u1111
  1537  007C7A  EF41  F03E         	goto	u1110
  1538  007C7E                     u1111:
  1539  007C7E  EF91  F03D         	goto	l1816
  1540  007C82                     u1110:
  1541  007C82                     l1836:
  1542                           
  1543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  1544  007C82  C01C  F011         	movff	utoa@fp,pad@fp
  1545  007C86  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  1546  007C8A  0E68               	movlw	low _dbuf
  1547  007C8C  243A               	addwf	utoa@i^0,w,c
  1548  007C8E  6E13               	movwf	pad@buf^0,c
  1549  007C90  0E00               	movlw	high _dbuf
  1550  007C92  203B               	addwfc	(utoa@i+1)^0,w,c
  1551  007C94  6E14               	movwf	(pad@buf+1)^0,c
  1552  007C96  C030  F015         	movff	utoa@w,pad@p
  1553  007C9A  C031  F016         	movff	utoa@w+1,pad@p+1
  1554  007C9E  ECC0  F039         	call	_pad	;wreg free
  1555  007CA2  C011  F01C         	movff	?_pad,?_utoa
  1556  007CA6  C012  F01D         	movff	?_pad+1,?_utoa+1
  1557  007CAA  0012               	return		;funcret
  1558  007CAC                     __end_of_utoa:
  1559                           	opt callstack 0
  1560                           
  1561 ;; *************** function _pad *****************
  1562 ;; Defined at:
  1563 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1566 ;;		 -> sprintf@f(6), 
  1567 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1568 ;;		 -> dbuf(32), 
  1569 ;;  p               2   20[COMRAM] int 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  w               2   25[COMRAM] int 
  1572 ;;  i               2   23[COMRAM] int 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  2   16[COMRAM] int 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1582 ;;      Params:         6       0       0       0       0       0       0       0       0
  1583 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1584 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1585 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1586 ;;Total ram usage:       11 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    3
  1589 ;; This function calls:
  1590 ;;		_fputc
  1591 ;;		_fputs
  1592 ;;		_strlen
  1593 ;; This function is called by:
  1594 ;;		_utoa
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text5
  1599  007380                     __ptext5:
  1600                           	opt callstack 0
  1601  007380                     _pad:
  1602                           	opt callstack 23
  1603  007380                     
  1604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1605  007380  0100               	movlb	0	; () banked
  1606  007382  A166               	btfss	_flags& (0+255),0,b
  1607  007384  EFC6  F039         	goto	u891
  1608  007388  EFC8  F039         	goto	u890
  1609  00738C                     u891:
  1610  00738C  EFD2  F039         	goto	l1718
  1611  007390                     u890:
  1612  007390                     
  1613                           ; BSR set to: 0
  1614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1615  007390  C013  F00A         	movff	pad@buf,fputs@s
  1616  007394  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1617  007398  C011  F00C         	movff	pad@fp,fputs@fp
  1618  00739C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1619  0073A0  EC71  F038         	call	_fputs	;wreg free
  1620  0073A4                     l1718:
  1621                           
  1622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1623  0073A4  BE16               	btfsc	(pad@p+1)^0,7,c
  1624  0073A6  EFD7  F039         	goto	u901
  1625  0073AA  EFD9  F039         	goto	u900
  1626  0073AE                     u901:
  1627  0073AE  EFDF  F039         	goto	l1722
  1628  0073B2                     u900:
  1629  0073B2  C015  F01A         	movff	pad@p,pad@w
  1630  0073B6  C016  F01B         	movff	pad@p+1,pad@w+1
  1631  0073BA  EFE3  F039         	goto	l255
  1632  0073BE                     l1722:
  1633  0073BE  0E00               	movlw	0
  1634  0073C0  6E1B               	movwf	(pad@w+1)^0,c
  1635  0073C2  0E00               	movlw	0
  1636  0073C4  6E1A               	movwf	pad@w^0,c
  1637  0073C6                     l255:
  1638                           
  1639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1640  0073C6  0E00               	movlw	0
  1641  0073C8  6E19               	movwf	(pad@i+1)^0,c
  1642  0073CA  0E00               	movlw	0
  1643  0073CC  6E18               	movwf	pad@i^0,c
  1644                           
  1645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1646  0073CE  EFF5  F039         	goto	l1728
  1647  0073D2                     l1724:
  1648                           
  1649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1650  0073D2  0E00               	movlw	0
  1651  0073D4  6E02               	movwf	(fputc@c+1)^0,c
  1652  0073D6  0E20               	movlw	32
  1653  0073D8  6E01               	movwf	fputc@c^0,c
  1654  0073DA  C011  F003         	movff	pad@fp,fputc@fp
  1655  0073DE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1656  0073E2  EC23  F03A         	call	_fputc	;wreg free
  1657  0073E6                     
  1658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1659  0073E6  4A18               	infsnz	pad@i^0,f,c
  1660  0073E8  2A19               	incf	(pad@i+1)^0,f,c
  1661  0073EA                     l1728:
  1662                           
  1663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1664  0073EA  501A               	movf	pad@w^0,w,c
  1665  0073EC  5C18               	subwf	pad@i^0,w,c
  1666  0073EE  5019               	movf	(pad@i+1)^0,w,c
  1667  0073F0  0A80               	xorlw	128
  1668  0073F2  6E17               	movwf	??_pad^0,c
  1669  0073F4  501B               	movf	(pad@w+1)^0,w,c
  1670  0073F6  0A80               	xorlw	128
  1671  0073F8  5817               	subwfb	??_pad^0,w,c
  1672  0073FA  A0D8               	btfss	status,0,c
  1673  0073FC  EF02  F03A         	goto	u911
  1674  007400  EF04  F03A         	goto	u910
  1675  007404                     u911:
  1676  007404  EFE9  F039         	goto	l1724
  1677  007408                     u910:
  1678  007408                     
  1679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1680  007408  0100               	movlb	0	; () banked
  1681  00740A  B166               	btfsc	_flags& (0+255),0,b
  1682  00740C  EF0A  F03A         	goto	u921
  1683  007410  EF0C  F03A         	goto	u920
  1684  007414                     u921:
  1685  007414  EF16  F03A         	goto	l1732
  1686  007418                     u920:
  1687  007418                     
  1688                           ; BSR set to: 0
  1689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1690  007418  C013  F00A         	movff	pad@buf,fputs@s
  1691  00741C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1692  007420  C011  F00C         	movff	pad@fp,fputs@fp
  1693  007424  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1694  007428  EC71  F038         	call	_fputs	;wreg free
  1695  00742C                     l1732:
  1696                           
  1697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1698  00742C  C013  F001         	movff	pad@buf,strlen@s
  1699  007430  C014  F002         	movff	pad@buf+1,strlen@s+1
  1700  007434  ECB9  F037         	call	_strlen	;wreg free
  1701  007438  501A               	movf	pad@w^0,w,c
  1702  00743A  2401               	addwf	?_strlen^0,w,c
  1703  00743C  6E11               	movwf	?_pad^0,c
  1704  00743E  501B               	movf	(pad@w+1)^0,w,c
  1705  007440  2002               	addwfc	(?_strlen+1)^0,w,c
  1706  007442  6E12               	movwf	(?_pad+1)^0,c
  1707  007444  0012               	return		;funcret
  1708  007446                     __end_of_pad:
  1709                           	opt callstack 0
  1710                           
  1711 ;; *************** function _strlen *****************
  1712 ;; Defined at:
  1713 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1716 ;;		 -> dbuf(32), 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1719 ;;		 -> dbuf(32), 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  2    0[COMRAM] unsigned int 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1729 ;;      Params:         2       0       0       0       0       0       0       0       0
  1730 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1732 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1733 ;;Total ram usage:        4 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_pad
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text6
  1743  006F72                     __ptext6:
  1744                           	opt callstack 0
  1745  006F72                     _strlen:
  1746                           	opt callstack 25
  1747  006F72  C001  F003         	movff	strlen@s,strlen@a
  1748  006F76  C002  F004         	movff	strlen@s+1,strlen@a+1
  1749  006F7A  EFC1  F037         	goto	l1708
  1750  006F7E                     l1706:
  1751  006F7E  4A01               	infsnz	strlen@s^0,f,c
  1752  006F80  2A02               	incf	(strlen@s+1)^0,f,c
  1753  006F82                     l1708:
  1754  006F82  C001  FFD9         	movff	strlen@s,fsr2l
  1755  006F86  C002  FFDA         	movff	strlen@s+1,fsr2h
  1756  006F8A  50DF               	movf	indf2,w,c
  1757  006F8C  A4D8               	btfss	status,2,c
  1758  006F8E  EFCB  F037         	goto	u881
  1759  006F92  EFCD  F037         	goto	u880
  1760  006F96                     u881:
  1761  006F96  EFBF  F037         	goto	l1706
  1762  006F9A                     u880:
  1763  006F9A  5003               	movf	strlen@a^0,w,c
  1764  006F9C  5C01               	subwf	strlen@s^0,w,c
  1765  006F9E  6E01               	movwf	?_strlen^0,c
  1766  006FA0  5004               	movf	(strlen@a+1)^0,w,c
  1767  006FA2  5802               	subwfb	(strlen@s+1)^0,w,c
  1768  006FA4  6E02               	movwf	(?_strlen+1)^0,c
  1769  006FA6  0012               	return		;funcret
  1770  006FA8                     __end_of_strlen:
  1771                           	opt callstack 0
  1772                           
  1773 ;; *************** function _fputs *****************
  1774 ;; Defined at:
  1775 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1778 ;;		 -> dbuf(32), 
  1779 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1780 ;;		 -> sprintf@f(6), 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  i               2   14[COMRAM] int 
  1783 ;;  c               1   13[COMRAM] unsigned char 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  2    9[COMRAM] int 
  1786 ;; Registers used:
  1787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1793 ;;      Params:         4       0       0       0       0       0       0       0       0
  1794 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1796 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1797 ;;Total ram usage:        7 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    2
  1800 ;; This function calls:
  1801 ;;		_fputc
  1802 ;; This function is called by:
  1803 ;;		_pad
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text7
  1808  0070E2                     __ptext7:
  1809                           	opt callstack 0
  1810  0070E2                     _fputs:
  1811                           	opt callstack 23
  1812  0070E2  0E00               	movlw	0
  1813  0070E4  6E10               	movwf	(fputs@i+1)^0,c
  1814  0070E6  0E00               	movlw	0
  1815  0070E8  6E0F               	movwf	fputs@i^0,c
  1816  0070EA  EF82  F038         	goto	l1702
  1817  0070EE                     l1698:
  1818  0070EE  C00E  F001         	movff	fputs@c,fputc@c
  1819  0070F2  6A02               	clrf	(fputc@c+1)^0,c
  1820  0070F4  C00C  F003         	movff	fputs@fp,fputc@fp
  1821  0070F8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1822  0070FC  EC23  F03A         	call	_fputc	;wreg free
  1823  007100  4A0F               	infsnz	fputs@i^0,f,c
  1824  007102  2A10               	incf	(fputs@i+1)^0,f,c
  1825  007104                     l1702:
  1826  007104  500F               	movf	fputs@i^0,w,c
  1827  007106  240A               	addwf	fputs@s^0,w,c
  1828  007108  6ED9               	movwf	fsr2l,c
  1829  00710A  5010               	movf	(fputs@i+1)^0,w,c
  1830  00710C  200B               	addwfc	(fputs@s+1)^0,w,c
  1831  00710E  6EDA               	movwf	fsr2h,c
  1832  007110  50DF               	movf	indf2,w,c
  1833  007112  6E0E               	movwf	fputs@c^0,c
  1834  007114  500E               	movf	fputs@c^0,w,c
  1835  007116  A4D8               	btfss	status,2,c
  1836  007118  EF90  F038         	goto	u871
  1837  00711C  EF92  F038         	goto	u870
  1838  007120                     u871:
  1839  007120  EF77  F038         	goto	l1698
  1840  007124                     u870:
  1841  007124  0012               	return		;funcret
  1842  007126                     __end_of_fputs:
  1843                           	opt callstack 0
  1844                           
  1845 ;; *************** function _fputc *****************
  1846 ;; Defined at:
  1847 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  c               2    0[COMRAM] int 
  1850 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1851 ;;		 -> sprintf@f(6), 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  2    0[COMRAM] int 
  1856 ;; Registers used:
  1857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1863 ;;      Params:         4       0       0       0       0       0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1865 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1866 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1867 ;;Total ram usage:        9 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    1
  1870 ;; This function calls:
  1871 ;;		_putch
  1872 ;; This function is called by:
  1873 ;;		_pad
  1874 ;;		_vfpfcnvrt
  1875 ;;		_fputs
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text8
  1880  007446                     __ptext8:
  1881                           	opt callstack 0
  1882  007446                     _fputc:
  1883                           	opt callstack 23
  1884  007446  5003               	movf	fputc@fp^0,w,c
  1885  007448  1004               	iorwf	(fputc@fp+1)^0,w,c
  1886  00744A  B4D8               	btfsc	status,2,c
  1887  00744C  EF2A  F03A         	goto	u831
  1888  007450  EF2C  F03A         	goto	u830
  1889  007454                     u831:
  1890  007454  EF35  F03A         	goto	l1686
  1891  007458                     u830:
  1892  007458  5003               	movf	fputc@fp^0,w,c
  1893  00745A  1004               	iorwf	(fputc@fp+1)^0,w,c
  1894  00745C  A4D8               	btfss	status,2,c
  1895  00745E  EF33  F03A         	goto	u841
  1896  007462  EF35  F03A         	goto	u840
  1897  007466                     u841:
  1898  007466  EF3A  F03A         	goto	l1688
  1899  00746A                     u840:
  1900  00746A                     l1686:
  1901  00746A  5001               	movf	fputc@c^0,w,c
  1902  00746C  EC46  F037         	call	_putch
  1903  007470  EF87  F03A         	goto	l1040
  1904  007474                     l1688:
  1905  007474  EE20 F004          	lfsr	2,4
  1906  007478  5003               	movf	fputc@fp^0,w,c
  1907  00747A  26D9               	addwf	fsr2l,f,c
  1908  00747C  5004               	movf	(fputc@fp+1)^0,w,c
  1909  00747E  22DA               	addwfc	fsr2h,f,c
  1910  007480  50DE               	movf	postinc2,w,c
  1911  007482  10DE               	iorwf	postinc2,w,c
  1912  007484  B4D8               	btfsc	status,2,c
  1913  007486  EF47  F03A         	goto	u851
  1914  00748A  EF49  F03A         	goto	u850
  1915  00748E                     u851:
  1916  00748E  EF64  F03A         	goto	l1692
  1917  007492                     u850:
  1918  007492  EE20 F004          	lfsr	2,4
  1919  007496  5003               	movf	fputc@fp^0,w,c
  1920  007498  26D9               	addwf	fsr2l,f,c
  1921  00749A  5004               	movf	(fputc@fp+1)^0,w,c
  1922  00749C  22DA               	addwfc	fsr2h,f,c
  1923  00749E  EE10 F002          	lfsr	1,2
  1924  0074A2  5003               	movf	fputc@fp^0,w,c
  1925  0074A4  26E1               	addwf	fsr1l,f,c
  1926  0074A6  5004               	movf	(fputc@fp+1)^0,w,c
  1927  0074A8  22E2               	addwfc	fsr1h,f,c
  1928  0074AA  50DE               	movf	postinc2,w,c
  1929  0074AC  5CE6               	subwf	postinc1,w,c
  1930  0074AE  50E6               	movf	postinc1,w,c
  1931  0074B0  0A80               	xorlw	128
  1932  0074B2  6E09               	movwf	(??_fputc+4)^0,c
  1933  0074B4  50DE               	movf	postinc2,w,c
  1934  0074B6  0A80               	xorlw	128
  1935  0074B8  5809               	subwfb	(??_fputc+4)^0,w,c
  1936  0074BA  B0D8               	btfsc	status,0,c
  1937  0074BC  EF62  F03A         	goto	u861
  1938  0074C0  EF64  F03A         	goto	u860
  1939  0074C4                     u861:
  1940  0074C4  EF87  F03A         	goto	l1040
  1941  0074C8                     u860:
  1942  0074C8                     l1692:
  1943  0074C8  EE20 F002          	lfsr	2,2
  1944  0074CC  5003               	movf	fputc@fp^0,w,c
  1945  0074CE  26D9               	addwf	fsr2l,f,c
  1946  0074D0  5004               	movf	(fputc@fp+1)^0,w,c
  1947  0074D2  22DA               	addwfc	fsr2h,f,c
  1948  0074D4  CFDE F005          	movff	postinc2,??_fputc
  1949  0074D8  CFDD F006          	movff	postdec2,??_fputc+1
  1950  0074DC  C003  FFD9         	movff	fputc@fp,fsr2l
  1951  0074E0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1952  0074E4  CFDE F007          	movff	postinc2,??_fputc+2
  1953  0074E8  CFDD F008          	movff	postdec2,??_fputc+3
  1954  0074EC  5005               	movf	??_fputc^0,w,c
  1955  0074EE  2407               	addwf	(??_fputc+2)^0,w,c
  1956  0074F0  6ED9               	movwf	fsr2l,c
  1957  0074F2  5006               	movf	(??_fputc+1)^0,w,c
  1958  0074F4  2008               	addwfc	(??_fputc+3)^0,w,c
  1959  0074F6  6EDA               	movwf	fsr2h,c
  1960  0074F8  C001  FFDF         	movff	fputc@c,indf2
  1961  0074FC  EE20 F002          	lfsr	2,2
  1962  007500  5003               	movf	fputc@fp^0,w,c
  1963  007502  26D9               	addwf	fsr2l,f,c
  1964  007504  5004               	movf	(fputc@fp+1)^0,w,c
  1965  007506  22DA               	addwfc	fsr2h,f,c
  1966  007508  2ADE               	incf	postinc2,f,c
  1967  00750A  0E00               	movlw	0
  1968  00750C  22DD               	addwfc	postdec2,f,c
  1969  00750E                     l1040:
  1970  00750E  0012               	return		;funcret
  1971  007510                     __end_of_fputc:
  1972                           	opt callstack 0
  1973                           
  1974 ;; *************** function _putch *****************
  1975 ;; Defined at:
  1976 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  c               1    wreg     unsigned char 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  c               1    0[COMRAM] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1990 ;;      Params:         0       0       0       0       0       0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1993 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_fputc
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text9
  2004  006E8C                     __ptext9:
  2005                           	opt callstack 0
  2006  006E8C                     _putch:
  2007                           	opt callstack 23
  2008  006E8C  0012               	return		;funcret
  2009  006E8E                     __end_of_putch:
  2010                           	opt callstack 0
  2011                           
  2012 ;; *************** function ___lomod *****************
  2013 ;; Defined at:
  2014 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  dividend        8    0[COMRAM] unsigned long long 
  2017 ;;  divisor         8    8[COMRAM] unsigned long long 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  counter         1   16[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  8    0[COMRAM] unsigned long long 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2029 ;;      Params:        16       0       0       0       0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2032 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2033 ;;Total ram usage:       17 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_utoa
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text10
  2043  007510                     __ptext10:
  2044                           	opt callstack 0
  2045  007510                     ___lomod:
  2046                           	opt callstack 26
  2047  007510  5009               	movf	___lomod@divisor^0,w,c
  2048  007512  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2049  007514  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2050  007516  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2051  007518  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2052  00751A  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2053  00751C  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2054  00751E  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2055  007520  B4D8               	btfsc	status,2,c
  2056  007522  EF95  F03A         	goto	u991
  2057  007526  EF97  F03A         	goto	u990
  2058  00752A                     u991:
  2059  00752A  EFDF  F03A         	goto	l760
  2060  00752E                     u990:
  2061  00752E  0E01               	movlw	1
  2062  007530  6E11               	movwf	___lomod@counter^0,c
  2063  007532  EFA5  F03A         	goto	l1774
  2064  007536                     l1772:
  2065  007536  90D8               	bcf	status,0,c
  2066  007538  3609               	rlcf	___lomod@divisor^0,f,c
  2067  00753A  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2068  00753C  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2069  00753E  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2070  007540  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2071  007542  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2072  007544  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2073  007546  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2074  007548  2A11               	incf	___lomod@counter^0,f,c
  2075  00754A                     l1774:
  2076  00754A  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2077  00754C  EFAA  F03A         	goto	u1001
  2078  007550  EFAC  F03A         	goto	u1000
  2079  007554                     u1001:
  2080  007554  EF9B  F03A         	goto	l1772
  2081  007558                     u1000:
  2082  007558                     l1776:
  2083  007558  5009               	movf	___lomod@divisor^0,w,c
  2084  00755A  5C01               	subwf	___lomod@dividend^0,w,c
  2085  00755C  500A               	movf	(___lomod@divisor+1)^0,w,c
  2086  00755E  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2087  007560  500B               	movf	(___lomod@divisor+2)^0,w,c
  2088  007562  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2089  007564  500C               	movf	(___lomod@divisor+3)^0,w,c
  2090  007566  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2091  007568  500D               	movf	(___lomod@divisor+4)^0,w,c
  2092  00756A  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2093  00756C  500E               	movf	(___lomod@divisor+5)^0,w,c
  2094  00756E  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2095  007570  500F               	movf	(___lomod@divisor+6)^0,w,c
  2096  007572  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2097  007574  5010               	movf	(___lomod@divisor+7)^0,w,c
  2098  007576  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2099  007578  A0D8               	btfss	status,0,c
  2100  00757A  EFC1  F03A         	goto	u1011
  2101  00757E  EFC3  F03A         	goto	u1010
  2102  007582                     u1011:
  2103  007582  EFD3  F03A         	goto	l1780
  2104  007586                     u1010:
  2105  007586  5009               	movf	___lomod@divisor^0,w,c
  2106  007588  5E01               	subwf	___lomod@dividend^0,f,c
  2107  00758A  500A               	movf	(___lomod@divisor+1)^0,w,c
  2108  00758C  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2109  00758E  500B               	movf	(___lomod@divisor+2)^0,w,c
  2110  007590  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2111  007592  500C               	movf	(___lomod@divisor+3)^0,w,c
  2112  007594  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2113  007596  500D               	movf	(___lomod@divisor+4)^0,w,c
  2114  007598  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2115  00759A  500E               	movf	(___lomod@divisor+5)^0,w,c
  2116  00759C  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2117  00759E  500F               	movf	(___lomod@divisor+6)^0,w,c
  2118  0075A0  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2119  0075A2  5010               	movf	(___lomod@divisor+7)^0,w,c
  2120  0075A4  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2121  0075A6                     l1780:
  2122  0075A6  90D8               	bcf	status,0,c
  2123  0075A8  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2124  0075AA  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2125  0075AC  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2126  0075AE  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2127  0075B0  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2128  0075B2  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2129  0075B4  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2130  0075B6  3209               	rrcf	___lomod@divisor^0,f,c
  2131  0075B8  2E11               	decfsz	___lomod@counter^0,f,c
  2132  0075BA  EFAC  F03A         	goto	l1776
  2133  0075BE                     l760:
  2134  0075BE  C001  F001         	movff	___lomod@dividend,?___lomod
  2135  0075C2  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2136  0075C6  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2137  0075CA  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2138  0075CE  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2139  0075D2  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2140  0075D6  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2141  0075DA  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2142  0075DE  0012               	return		;funcret
  2143  0075E0                     __end_of___lomod:
  2144                           	opt callstack 0
  2145                           
  2146 ;; *************** function ___lodiv *****************
  2147 ;; Defined at:
  2148 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  dividend        8    0[COMRAM] unsigned long long 
  2151 ;;  divisor         8    8[COMRAM] unsigned long long 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  quotient        8   16[COMRAM] unsigned long long 
  2154 ;;  counter         1   24[COMRAM] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  8    0[COMRAM] unsigned long long 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2164 ;;      Params:        16       0       0       0       0       0       0       0       0
  2165 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2167 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2168 ;;Total ram usage:       25 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_utoa
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text11
  2178  0075E0                     __ptext11:
  2179                           	opt callstack 0
  2180  0075E0                     ___lodiv:
  2181                           	opt callstack 26
  2182  0075E0  EE20  F011         	lfsr	2,___lodiv@quotient
  2183  0075E4  0E07               	movlw	7
  2184  0075E6                     u951:
  2185  0075E6  6ADE               	clrf	postinc2,c
  2186  0075E8  06E8               	decf	wreg,f,c
  2187  0075EA  E2FD               	bc	u951
  2188  0075EC  5009               	movf	___lodiv@divisor^0,w,c
  2189  0075EE  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2190  0075F0  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2191  0075F2  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2192  0075F4  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2193  0075F6  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2194  0075F8  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2195  0075FA  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2196  0075FC  B4D8               	btfsc	status,2,c
  2197  0075FE  EF03  F03B         	goto	u961
  2198  007602  EF05  F03B         	goto	u960
  2199  007606                     u961:
  2200  007606  EF57  F03B         	goto	l750
  2201  00760A                     u960:
  2202  00760A  0E01               	movlw	1
  2203  00760C  6E19               	movwf	___lodiv@counter^0,c
  2204  00760E  EF13  F03B         	goto	l1754
  2205  007612                     l1752:
  2206  007612  90D8               	bcf	status,0,c
  2207  007614  3609               	rlcf	___lodiv@divisor^0,f,c
  2208  007616  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2209  007618  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2210  00761A  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2211  00761C  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2212  00761E  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2213  007620  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2214  007622  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2215  007624  2A19               	incf	___lodiv@counter^0,f,c
  2216  007626                     l1754:
  2217  007626  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2218  007628  EF18  F03B         	goto	u971
  2219  00762C  EF1A  F03B         	goto	u970
  2220  007630                     u971:
  2221  007630  EF09  F03B         	goto	l1752
  2222  007634                     u970:
  2223  007634                     l1756:
  2224  007634  90D8               	bcf	status,0,c
  2225  007636  3611               	rlcf	___lodiv@quotient^0,f,c
  2226  007638  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2227  00763A  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2228  00763C  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2229  00763E  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2230  007640  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2231  007642  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2232  007644  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2233  007646  5009               	movf	___lodiv@divisor^0,w,c
  2234  007648  5C01               	subwf	___lodiv@dividend^0,w,c
  2235  00764A  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2236  00764C  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2237  00764E  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2238  007650  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2239  007652  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2240  007654  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2241  007656  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2242  007658  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2243  00765A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2244  00765C  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2245  00765E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2246  007660  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2247  007662  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2248  007664  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2249  007666  A0D8               	btfss	status,0,c
  2250  007668  EF38  F03B         	goto	u981
  2251  00766C  EF3A  F03B         	goto	u980
  2252  007670                     u981:
  2253  007670  EF4B  F03B         	goto	l1764
  2254  007674                     u980:
  2255  007674  5009               	movf	___lodiv@divisor^0,w,c
  2256  007676  5E01               	subwf	___lodiv@dividend^0,f,c
  2257  007678  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2258  00767A  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2259  00767C  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2260  00767E  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2261  007680  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2262  007682  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2263  007684  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2264  007686  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2265  007688  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2266  00768A  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2267  00768C  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2268  00768E  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2269  007690  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2270  007692  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2271  007694  8011               	bsf	___lodiv@quotient^0,0,c
  2272  007696                     l1764:
  2273  007696  90D8               	bcf	status,0,c
  2274  007698  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2275  00769A  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2276  00769C  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2277  00769E  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2278  0076A0  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2279  0076A2  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2280  0076A4  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2281  0076A6  3209               	rrcf	___lodiv@divisor^0,f,c
  2282  0076A8  2E19               	decfsz	___lodiv@counter^0,f,c
  2283  0076AA  EF1A  F03B         	goto	l1756
  2284  0076AE                     l750:
  2285  0076AE  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2286  0076B2  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2287  0076B6  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2288  0076BA  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2289  0076BE  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2290  0076C2  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2291  0076C6  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2292  0076CA  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2293  0076CE  0012               	return		;funcret
  2294  0076D0                     __end_of___lodiv:
  2295                           	opt callstack 0
  2296                           
  2297 ;; *************** function _atoi *****************
  2298 ;; Defined at:
  2299 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2302 ;;		 -> STR_1(5), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  n               2   20[COMRAM] int 
  2305 ;;  neg             2   13[COMRAM] int 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  2    7[COMRAM] int 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2315 ;;      Params:         2       0       0       0       0       0       0       0       0
  2316 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2317 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2318 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2319 ;;Total ram usage:       15 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    1
  2322 ;; This function calls:
  2323 ;;		___wmul
  2324 ;;		_isdigit
  2325 ;;		_isspace
  2326 ;; This function is called by:
  2327 ;;		_vfpfcnvrt
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text12
  2332  00791A                     __ptext12:
  2333                           	opt callstack 0
  2334  00791A                     _atoi:
  2335                           	opt callstack 26
  2336  00791A  0E00               	movlw	0
  2337  00791C  6E16               	movwf	(atoi@n+1)^0,c
  2338  00791E  0E00               	movlw	0
  2339  007920  6E15               	movwf	atoi@n^0,c
  2340  007922  0E00               	movlw	0
  2341  007924  6E0F               	movwf	(atoi@neg+1)^0,c
  2342  007926  0E00               	movlw	0
  2343  007928  6E0E               	movwf	atoi@neg^0,c
  2344  00792A  EF99  F03C         	goto	l1844
  2345  00792E                     l1842:
  2346  00792E  4A08               	infsnz	atoi@s^0,f,c
  2347  007930  2A09               	incf	(atoi@s+1)^0,f,c
  2348  007932                     l1844:
  2349  007932  0E01               	movlw	1
  2350  007934  6E14               	movwf	_atoi$1065^0,c
  2351  007936  C008  FFF6         	movff	atoi@s,tblptrl
  2352  00793A  C009  FFF7         	movff	atoi@s+1,tblptrh
  2353  00793E                     	if	0	;tblptru may be non-zero
  2354  00793E                     	endif
  2355  00793E                     	if	0	;tblptru may be non-zero
  2356  00793E                     	endif
  2357  00793E  0008               	tblrd		*
  2358  007940  50F5               	movf	tablat,w,c
  2359  007942  0A20               	xorlw	32
  2360  007944  B4D8               	btfsc	status,2,c
  2361  007946  EFA7  F03C         	goto	u1121
  2362  00794A  EFA9  F03C         	goto	u1120
  2363  00794E                     u1121:
  2364  00794E  EFC6  F03C         	goto	l1852
  2365  007952                     u1120:
  2366  007952  0EF7               	movlw	247
  2367  007954  6E0A               	movwf	??_atoi^0,c
  2368  007956  0EFF               	movlw	255
  2369  007958  6E0B               	movwf	(??_atoi+1)^0,c
  2370  00795A  C008  FFF6         	movff	atoi@s,tblptrl
  2371  00795E  C009  FFF7         	movff	atoi@s+1,tblptrh
  2372  007962                     	if	0	;tblptru may be non-zero
  2373  007962                     	endif
  2374  007962                     	if	0	;tblptru may be non-zero
  2375  007962                     	endif
  2376  007962  0008               	tblrd		*
  2377  007964  50F5               	movf	tablat,w,c
  2378  007966  6E0C               	movwf	(??_atoi+2)^0,c
  2379  007968  6A0D               	clrf	(??_atoi+3)^0,c
  2380  00796A  500A               	movf	??_atoi^0,w,c
  2381  00796C  260C               	addwf	(??_atoi+2)^0,f,c
  2382  00796E  500B               	movf	(??_atoi+1)^0,w,c
  2383  007970  220D               	addwfc	(??_atoi+3)^0,f,c
  2384  007972  500D               	movf	(??_atoi+3)^0,w,c
  2385  007974  E109               	bnz	u1130
  2386  007976  0E05               	movlw	5
  2387  007978  5C0C               	subwf	(??_atoi+2)^0,w,c
  2388  00797A  A0D8               	btfss	status,0,c
  2389  00797C  EFC2  F03C         	goto	u1131
  2390  007980  EFC4  F03C         	goto	u1130
  2391  007984                     u1131:
  2392  007984  EFC6  F03C         	goto	l1852
  2393  007988                     u1130:
  2394  007988  0E00               	movlw	0
  2395  00798A  6E14               	movwf	_atoi$1065^0,c
  2396  00798C                     l1852:
  2397  00798C  C014  F010         	movff	_atoi$1065,_atoi$1064
  2398  007990  6A11               	clrf	(_atoi$1064+1)^0,c
  2399  007992  5010               	movf	_atoi$1064^0,w,c
  2400  007994  1011               	iorwf	(_atoi$1064+1)^0,w,c
  2401  007996  A4D8               	btfss	status,2,c
  2402  007998  EFD0  F03C         	goto	u1141
  2403  00799C  EFD2  F03C         	goto	u1140
  2404  0079A0                     u1141:
  2405  0079A0  EF97  F03C         	goto	l1842
  2406  0079A4                     u1140:
  2407  0079A4  EFDC  F03C         	goto	l1862
  2408  0079A8                     l1858:
  2409  0079A8  0E00               	movlw	0
  2410  0079AA  6E0F               	movwf	(atoi@neg+1)^0,c
  2411  0079AC  0E01               	movlw	1
  2412  0079AE  6E0E               	movwf	atoi@neg^0,c
  2413  0079B0                     l1860:
  2414  0079B0  4A08               	infsnz	atoi@s^0,f,c
  2415  0079B2  2A09               	incf	(atoi@s+1)^0,f,c
  2416  0079B4  EF11  F03D         	goto	l1868
  2417  0079B8                     l1862:
  2418  0079B8  C008  FFF6         	movff	atoi@s,tblptrl
  2419  0079BC  C009  FFF7         	movff	atoi@s+1,tblptrh
  2420  0079C0                     	if	0	;tblptru may be non-zero
  2421  0079C0                     	endif
  2422  0079C0                     	if	0	;tblptru may be non-zero
  2423  0079C0                     	endif
  2424  0079C0  0008               	tblrd		*
  2425  0079C2  50F5               	movf	tablat,w,c
  2426  0079C4  6E0A               	movwf	??_atoi^0,c
  2427  0079C6  6A0B               	clrf	(??_atoi+1)^0,c
  2428                           
  2429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2430                           ; Switch size 1, requested type "simple"
  2431                           ; Number of cases is 1, Range of values is 0 to 0
  2432                           ; switch strategies available:
  2433                           ; Name         Instructions Cycles
  2434                           ; simple_byte            4     3 (average)
  2435                           ;	Chosen strategy is simple_byte
  2436  0079C8  500B               	movf	(??_atoi+1)^0,w,c
  2437  0079CA  0A00               	xorlw	0	; case 0
  2438  0079CC  B4D8               	btfsc	status,2,c
  2439  0079CE  EFEB  F03C         	goto	l2344
  2440  0079D2  EF11  F03D         	goto	l1868
  2441  0079D6                     l2344:
  2442                           
  2443                           ; Switch size 1, requested type "simple"
  2444                           ; Number of cases is 2, Range of values is 43 to 45
  2445                           ; switch strategies available:
  2446                           ; Name         Instructions Cycles
  2447                           ; simple_byte            7     4 (average)
  2448                           ;	Chosen strategy is simple_byte
  2449  0079D6  500A               	movf	??_atoi^0,w,c
  2450  0079D8  0A2B               	xorlw	43	; case 43
  2451  0079DA  B4D8               	btfsc	status,2,c
  2452  0079DC  EFD8  F03C         	goto	l1860
  2453  0079E0  0A06               	xorlw	6	; case 45
  2454  0079E2  B4D8               	btfsc	status,2,c
  2455  0079E4  EFD4  F03C         	goto	l1858
  2456  0079E8  EF11  F03D         	goto	l1868
  2457  0079EC                     l1864:
  2458  0079EC  C015  F001         	movff	atoi@n,___wmul@multiplier
  2459  0079F0  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  2460  0079F4  0E00               	movlw	0
  2461  0079F6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2462  0079F8  0E0A               	movlw	10
  2463  0079FA  6E03               	movwf	___wmul@multiplicand^0,c
  2464  0079FC  EC7B  F037         	call	___wmul	;wreg free
  2465  007A00  C008  FFF6         	movff	atoi@s,tblptrl
  2466  007A04  C009  FFF7         	movff	atoi@s+1,tblptrh
  2467  007A08                     	if	0	;tblptru may be non-zero
  2468  007A08                     	endif
  2469  007A08                     	if	0	;tblptru may be non-zero
  2470  007A08                     	endif
  2471  007A08  0008               	tblrd		*
  2472  007A0A  50F5               	movf	tablat,w,c
  2473  007A0C  5E01               	subwf	?___wmul^0,f,c
  2474  007A0E  0E00               	movlw	0
  2475  007A10  5A02               	subwfb	(?___wmul+1)^0,f,c
  2476  007A12  0E30               	movlw	48
  2477  007A14  2401               	addwf	?___wmul^0,w,c
  2478  007A16  6E15               	movwf	atoi@n^0,c
  2479  007A18  0E00               	movlw	0
  2480  007A1A  2002               	addwfc	(?___wmul+1)^0,w,c
  2481  007A1C  6E16               	movwf	(atoi@n+1)^0,c
  2482  007A1E  EFD8  F03C         	goto	l1860
  2483  007A22                     l1868:
  2484  007A22  0ED0               	movlw	208
  2485  007A24  6E0A               	movwf	??_atoi^0,c
  2486  007A26  0EFF               	movlw	255
  2487  007A28  6E0B               	movwf	(??_atoi+1)^0,c
  2488  007A2A  C008  FFF6         	movff	atoi@s,tblptrl
  2489  007A2E  C009  FFF7         	movff	atoi@s+1,tblptrh
  2490  007A32                     	if	0	;tblptru may be non-zero
  2491  007A32                     	endif
  2492  007A32                     	if	0	;tblptru may be non-zero
  2493  007A32                     	endif
  2494  007A32  0008               	tblrd		*
  2495  007A34  50F5               	movf	tablat,w,c
  2496  007A36  6E0C               	movwf	(??_atoi+2)^0,c
  2497  007A38  6A0D               	clrf	(??_atoi+3)^0,c
  2498  007A3A  500A               	movf	??_atoi^0,w,c
  2499  007A3C  260C               	addwf	(??_atoi+2)^0,f,c
  2500  007A3E  500B               	movf	(??_atoi+1)^0,w,c
  2501  007A40  220D               	addwfc	(??_atoi+3)^0,f,c
  2502  007A42  500D               	movf	(??_atoi+3)^0,w,c
  2503  007A44  E10A               	bnz	u1150
  2504  007A46  0E0A               	movlw	10
  2505  007A48  5C0C               	subwf	(??_atoi+2)^0,w,c
  2506  007A4A  A0D8               	btfss	status,0,c
  2507  007A4C  EF2A  F03D         	goto	u1151
  2508  007A50  EF2D  F03D         	goto	u1150
  2509  007A54                     u1151:
  2510  007A54  0E01               	movlw	1
  2511  007A56  EF2E  F03D         	goto	u1160
  2512  007A5A                     u1150:
  2513  007A5A  0E00               	movlw	0
  2514  007A5C                     u1160:
  2515  007A5C  6E12               	movwf	_atoi$1066^0,c
  2516  007A5E  6A13               	clrf	(_atoi$1066+1)^0,c
  2517  007A60  5012               	movf	_atoi$1066^0,w,c
  2518  007A62  1013               	iorwf	(_atoi$1066+1)^0,w,c
  2519  007A64  A4D8               	btfss	status,2,c
  2520  007A66  EF37  F03D         	goto	u1171
  2521  007A6A  EF39  F03D         	goto	u1170
  2522  007A6E                     u1171:
  2523  007A6E  EFF6  F03C         	goto	l1864
  2524  007A72                     u1170:
  2525  007A72  500E               	movf	atoi@neg^0,w,c
  2526  007A74  100F               	iorwf	(atoi@neg+1)^0,w,c
  2527  007A76  A4D8               	btfss	status,2,c
  2528  007A78  EF40  F03D         	goto	u1181
  2529  007A7C  EF42  F03D         	goto	u1180
  2530  007A80                     u1181:
  2531  007A80  EF50  F03D         	goto	l1011
  2532  007A84                     u1180:
  2533  007A84  C015  F00A         	movff	atoi@n,??_atoi
  2534  007A88  C016  F00B         	movff	atoi@n+1,??_atoi+1
  2535  007A8C  1E0A               	comf	??_atoi^0,f,c
  2536  007A8E  1E0B               	comf	(??_atoi+1)^0,f,c
  2537  007A90  4A0A               	infsnz	??_atoi^0,f,c
  2538  007A92  2A0B               	incf	(??_atoi+1)^0,f,c
  2539  007A94  C00A  F008         	movff	??_atoi,?_atoi
  2540  007A98  C00B  F009         	movff	??_atoi+1,?_atoi+1
  2541  007A9C  EF54  F03D         	goto	l1014
  2542  007AA0                     l1011:
  2543  007AA0  C015  F008         	movff	atoi@n,?_atoi
  2544  007AA4  C016  F009         	movff	atoi@n+1,?_atoi+1
  2545  007AA8                     l1014:
  2546  007AA8  0012               	return		;funcret
  2547  007AAA                     __end_of_atoi:
  2548                           	opt callstack 0
  2549                           
  2550 ;; *************** function _isspace *****************
  2551 ;; Defined at:
  2552 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  c               2    0[COMRAM] int 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  2    0[COMRAM] int 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2566 ;;      Params:         2       0       0       0       0       0       0       0       0
  2567 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2568 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2569 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2570 ;;Total ram usage:        7 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_atoi
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text13
  2580  0071B6                     __ptext13:
  2581                           	opt callstack 0
  2582  0071B6                     _isspace:
  2583                           	opt callstack 26
  2584  0071B6  0E01               	movlw	1
  2585  0071B8  6E07               	movwf	_isspace$1082^0,c
  2586  0071BA  0E20               	movlw	32
  2587  0071BC  1801               	xorwf	isspace@c^0,w,c
  2588  0071BE  1002               	iorwf	(isspace@c+1)^0,w,c
  2589  0071C0  B4D8               	btfsc	status,2,c
  2590  0071C2  EFE5  F038         	goto	u1021
  2591  0071C6  EFE7  F038         	goto	u1020
  2592  0071CA                     u1021:
  2593  0071CA  EF00  F039         	goto	l1792
  2594  0071CE                     u1020:
  2595  0071CE  0EF7               	movlw	247
  2596  0071D0  6E03               	movwf	??_isspace^0,c
  2597  0071D2  0EFF               	movlw	255
  2598  0071D4  6E04               	movwf	(??_isspace+1)^0,c
  2599  0071D6  C001  F005         	movff	isspace@c,??_isspace+2
  2600  0071DA  C002  F006         	movff	isspace@c+1,??_isspace+3
  2601  0071DE  5003               	movf	??_isspace^0,w,c
  2602  0071E0  2605               	addwf	(??_isspace+2)^0,f,c
  2603  0071E2  5004               	movf	(??_isspace+1)^0,w,c
  2604  0071E4  2206               	addwfc	(??_isspace+3)^0,f,c
  2605  0071E6  5006               	movf	(??_isspace+3)^0,w,c
  2606  0071E8  E109               	bnz	u1030
  2607  0071EA  0E05               	movlw	5
  2608  0071EC  5C05               	subwf	(??_isspace+2)^0,w,c
  2609  0071EE  A0D8               	btfss	status,0,c
  2610  0071F0  EFFC  F038         	goto	u1031
  2611  0071F4  EFFE  F038         	goto	u1030
  2612  0071F8                     u1031:
  2613  0071F8  EF00  F039         	goto	l1792
  2614  0071FC                     u1030:
  2615  0071FC  0E00               	movlw	0
  2616  0071FE  6E07               	movwf	_isspace$1082^0,c
  2617  007200                     l1792:
  2618  007200  C007  F001         	movff	_isspace$1082,?_isspace
  2619  007204  6A02               	clrf	(?_isspace+1)^0,c
  2620  007206  0012               	return		;funcret
  2621  007208                     __end_of_isspace:
  2622                           	opt callstack 0
  2623                           
  2624 ;; *************** function _isdigit *****************
  2625 ;; Defined at:
  2626 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  c               2    0[COMRAM] int 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  2    0[COMRAM] int 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2640 ;;      Params:         2       0       0       0       0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2642 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2643 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2644 ;;Total ram usage:        6 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_vfpfcnvrt
  2650 ;;		_atoi
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text14
  2655  006FA8                     __ptext14:
  2656                           	opt callstack 0
  2657  006FA8                     _isdigit:
  2658                           	opt callstack 27
  2659  006FA8  0ED0               	movlw	208
  2660  006FAA  6E03               	movwf	??_isdigit^0,c
  2661  006FAC  0EFF               	movlw	255
  2662  006FAE  6E04               	movwf	(??_isdigit+1)^0,c
  2663  006FB0  C001  F005         	movff	isdigit@c,??_isdigit+2
  2664  006FB4  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  2665  006FB8  5003               	movf	??_isdigit^0,w,c
  2666  006FBA  2605               	addwf	(??_isdigit+2)^0,f,c
  2667  006FBC  5004               	movf	(??_isdigit+1)^0,w,c
  2668  006FBE  2206               	addwfc	(??_isdigit+3)^0,f,c
  2669  006FC0  5006               	movf	(??_isdigit+3)^0,w,c
  2670  006FC2  E10A               	bnz	u930
  2671  006FC4  0E0A               	movlw	10
  2672  006FC6  5C05               	subwf	(??_isdigit+2)^0,w,c
  2673  006FC8  A0D8               	btfss	status,0,c
  2674  006FCA  EFE9  F037         	goto	u931
  2675  006FCE  EFEC  F037         	goto	u930
  2676  006FD2                     u931:
  2677  006FD2  0E01               	movlw	1
  2678  006FD4  EFED  F037         	goto	u940
  2679  006FD8                     u930:
  2680  006FD8  0E00               	movlw	0
  2681  006FDA                     u940:
  2682  006FDA  6E01               	movwf	?_isdigit^0,c
  2683  006FDC  6A02               	clrf	(?_isdigit+1)^0,c
  2684  006FDE  0012               	return		;funcret
  2685  006FE0                     __end_of_isdigit:
  2686                           	opt callstack 0
  2687                           
  2688 ;; *************** function ___wmul *****************
  2689 ;; Defined at:
  2690 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  multiplier      2    0[COMRAM] unsigned int 
  2693 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  product         2    4[COMRAM] unsigned int 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  2    0[COMRAM] unsigned int 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0, prodl, prodh
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2705 ;;      Params:         4       0       0       0       0       0       0       0       0
  2706 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2708 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2709 ;;Total ram usage:        6 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_atoi
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text15
  2719  006EF6                     __ptext15:
  2720                           	opt callstack 0
  2721  006EF6                     ___wmul:
  2722                           	opt callstack 26
  2723  006EF6  5001               	movf	___wmul@multiplier^0,w,c
  2724  006EF8  0203               	mulwf	___wmul@multiplicand^0,c
  2725  006EFA  CFF3 F005          	movff	prodl,___wmul@product
  2726  006EFE  CFF4 F006          	movff	prodh,___wmul@product+1
  2727  006F02  5001               	movf	___wmul@multiplier^0,w,c
  2728  006F04  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2729  006F06  50F3               	movf	243,w,c
  2730  006F08  2606               	addwf	(___wmul@product+1)^0,f,c
  2731  006F0A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2732  006F0C  0203               	mulwf	___wmul@multiplicand^0,c
  2733  006F0E  50F3               	movf	243,w,c
  2734  006F10  2606               	addwf	(___wmul@product+1)^0,f,c
  2735  006F12  C005  F001         	movff	___wmul@product,?___wmul
  2736  006F16  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2737  006F1A  0012               	return		;funcret
  2738  006F1C                     __end_of___wmul:
  2739                           	opt callstack 0
  2740                           
  2741 ;; *************** function _putsXLCD *****************
  2742 ;; Defined at:
  2743 ;;		line 16 in file "XLCD/putsxlcd.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  2746 ;;		 -> strResultado(5), 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2758 ;;      Params:         2       0       0       0       0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2761 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2762 ;;Total ram usage:        2 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    2
  2765 ;; This function calls:
  2766 ;;		_BusyXLCD
  2767 ;;		_WriteDataXLCD
  2768 ;; This function is called by:
  2769 ;;		_main
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text16
  2774  00709E                     __ptext16:
  2775                           	opt callstack 0
  2776  00709E                     _putsXLCD:
  2777                           	opt callstack 28
  2778  00709E                     
  2779                           ;XLCD/putsxlcd.c: 16: void putsXLCD(char *buffer);XLCD/putsxlcd.c: 17: {;XLCD/putsxlcd.c
      +                          : 18:         while(*buffer)
  2780  00709E  EF64  F038         	goto	l2168
  2781  0070A2                     l2162:
  2782  0070A2  EC93  F038         	call	_BusyXLCD	;wreg free
  2783  0070A6  0900               	iorlw	0
  2784  0070A8  A4D8               	btfss	status,2,c
  2785  0070AA  EF59  F038         	goto	u1411
  2786  0070AE  EF5B  F038         	goto	u1410
  2787  0070B2                     u1411:
  2788  0070B2  EF51  F038         	goto	l2162
  2789  0070B6                     u1410:
  2790  0070B6                     
  2791                           ;XLCD/putsxlcd.c: 21:                 WriteDataXLCD(*buffer);
  2792  0070B6  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  2793  0070BA  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  2794  0070BE  50DF               	movf	indf2,w,c
  2795  0070C0  EC0F  F038         	call	_WriteDataXLCD
  2796  0070C4                     
  2797                           ;XLCD/putsxlcd.c: 22:                 buffer++;
  2798  0070C4  4A02               	infsnz	putsXLCD@buffer^0,f,c
  2799  0070C6  2A03               	incf	(putsXLCD@buffer+1)^0,f,c
  2800  0070C8                     l2168:
  2801                           
  2802                           ;XLCD/putsxlcd.c: 18:         while(*buffer)
  2803  0070C8  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  2804  0070CC  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  2805  0070D0  50DF               	movf	indf2,w,c
  2806  0070D2  A4D8               	btfss	status,2,c
  2807  0070D4  EF6E  F038         	goto	u1421
  2808  0070D8  EF70  F038         	goto	u1420
  2809  0070DC                     u1421:
  2810  0070DC  EF51  F038         	goto	l2162
  2811  0070E0                     u1420:
  2812  0070E0  0012               	return		;funcret
  2813  0070E2                     __end_of_putsXLCD:
  2814                           	opt callstack 0
  2815                           
  2816 ;; *************** function _initLED *****************
  2817 ;; Defined at:
  2818 ;;		line 36 in file "main.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		None
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2835 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2836 ;;Total ram usage:        0 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text17
  2846  006F1C                     __ptext17:
  2847                           	opt callstack 0
  2848  006F1C                     _initLED:
  2849                           	opt callstack 30
  2850  006F1C                     
  2851                           ;main.c: 37:     TRISAbits.RA1 = 0;
  2852  006F1C  9292               	bcf	146,1,c	;volatile
  2853                           
  2854                           ;main.c: 38:     TRISAbits.RA2 = 0;
  2855  006F1E  9492               	bcf	146,2,c	;volatile
  2856                           
  2857                           ;main.c: 39:     TRISAbits.RA3 = 0;
  2858  006F20  9692               	bcf	146,3,c	;volatile
  2859                           
  2860                           ;main.c: 40:     TRISAbits.RA4 = 0;
  2861  006F22  9892               	bcf	146,4,c	;volatile
  2862                           
  2863                           ;main.c: 41:     TRISAbits.RA5 = 0;
  2864  006F24  9A92               	bcf	146,5,c	;volatile
  2865                           
  2866                           ;main.c: 42:     TRISBbits.RB0 = 0;
  2867  006F26  9093               	bcf	147,0,c	;volatile
  2868                           
  2869                           ;main.c: 43:     TRISBbits.RB1 = 0;
  2870  006F28  9293               	bcf	147,1,c	;volatile
  2871                           
  2872                           ;main.c: 44:     TRISBbits.RB2 = 0;
  2873  006F2A  9493               	bcf	147,2,c	;volatile
  2874                           
  2875                           ;main.c: 45:     TRISBbits.RB3 = 0;
  2876  006F2C  9693               	bcf	147,3,c	;volatile
  2877                           
  2878                           ;main.c: 46:     TRISBbits.RB4 = 0;
  2879  006F2E  9893               	bcf	147,4,c	;volatile
  2880                           
  2881                           ;main.c: 48:     LATAbits.LA1 = 0;
  2882  006F30  9289               	bcf	137,1,c	;volatile
  2883                           
  2884                           ;main.c: 49:     LATAbits.LA2 = 0;
  2885  006F32  9489               	bcf	137,2,c	;volatile
  2886                           
  2887                           ;main.c: 50:     LATAbits.LA3 = 0;
  2888  006F34  9689               	bcf	137,3,c	;volatile
  2889                           
  2890                           ;main.c: 51:     LATAbits.LA4 = 0;
  2891  006F36  9889               	bcf	137,4,c	;volatile
  2892                           
  2893                           ;main.c: 52:     LATAbits.LA5 = 0;
  2894  006F38  9A89               	bcf	137,5,c	;volatile
  2895                           
  2896                           ;main.c: 53:     LATBbits.LB0 = 0;
  2897  006F3A  908A               	bcf	138,0,c	;volatile
  2898                           
  2899                           ;main.c: 54:     LATBbits.LB1 = 0;
  2900  006F3C  928A               	bcf	138,1,c	;volatile
  2901                           
  2902                           ;main.c: 55:     LATBbits.LB2 = 0;
  2903  006F3E  948A               	bcf	138,2,c	;volatile
  2904                           
  2905                           ;main.c: 56:     LATBbits.LB3 = 0;
  2906  006F40  968A               	bcf	138,3,c	;volatile
  2907                           
  2908                           ;main.c: 57:     LATBbits.LB4 = 0;
  2909  006F42  988A               	bcf	138,4,c	;volatile
  2910  006F44  0012               	return		;funcret
  2911  006F46                     __end_of_initLED:
  2912                           	opt callstack 0
  2913                           
  2914 ;; *************** function _initLCD *****************
  2915 ;; Defined at:
  2916 ;;		line 66 in file "main.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    3
  2937 ;; This function calls:
  2938 ;;		_OpenXLCD
  2939 ;;		_WriteCmdXLCD
  2940 ;;		_putrsXLCD
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text18
  2947  006ED0                     __ptext18:
  2948                           	opt callstack 0
  2949  006ED0                     _initLCD:
  2950                           	opt callstack 27
  2951  006ED0                     
  2952                           ;main.c: 67:     OpenXLCD(0b00101100 & 0b00111000);
  2953  006ED0  0E28               	movlw	40
  2954  006ED2  EC68  F03B         	call	_OpenXLCD
  2955                           
  2956                           ;main.c: 68:     WriteCmdXLCD(0b00000110);
  2957  006ED6  0E06               	movlw	6
  2958  006ED8  ECF0  F037         	call	_WriteCmdXLCD
  2959                           
  2960                           ;main.c: 69:     WriteCmdXLCD(0b00001111);
  2961  006EDC  0E0F               	movlw	15
  2962  006EDE  ECF0  F037         	call	_WriteCmdXLCD
  2963                           
  2964                           ;main.c: 70:     WriteCmdXLCD(0b00001110);
  2965  006EE2  0E0E               	movlw	14
  2966  006EE4  ECF0  F037         	call	_WriteCmdXLCD
  2967  006EE8                     
  2968                           ;main.c: 71:     putrsXLCD("Convertidor AD:");
  2969  006EE8  0E05               	movlw	low STR_2
  2970  006EEA  6E02               	movwf	putrsXLCD@buffer^0,c
  2971  006EEC  0E10               	movlw	high STR_2
  2972  006EEE  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  2973  006EF0  ECB6  F038         	call	_putrsXLCD	;wreg free
  2974  006EF4  0012               	return		;funcret
  2975  006EF6                     __end_of_initLCD:
  2976                           	opt callstack 0
  2977                           
  2978 ;; *************** function _putrsXLCD *****************
  2979 ;; Defined at:
  2980 ;;		line 16 in file "XLCD/putrxlcd.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
  2983 ;;		 -> STR_2(16), 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2995 ;;      Params:         2       0       0       0       0       0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2998 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2999 ;;Total ram usage:        2 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    2
  3002 ;; This function calls:
  3003 ;;		_BusyXLCD
  3004 ;;		_WriteDataXLCD
  3005 ;; This function is called by:
  3006 ;;		_initLCD
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text19
  3011  00716C                     __ptext19:
  3012                           	opt callstack 0
  3013  00716C                     _putrsXLCD:
  3014                           	opt callstack 27
  3015  00716C                     
  3016                           ;XLCD/putrxlcd.c: 16: void putrsXLCD(const char *buffer);XLCD/putrxlcd.c: 17: {;XLCD/put
      +                          rxlcd.c: 18:         while(*buffer)
  3017  00716C  EFCC  F038         	goto	l2150
  3018  007170                     l2144:
  3019  007170  EC93  F038         	call	_BusyXLCD	;wreg free
  3020  007174  0900               	iorlw	0
  3021  007176  A4D8               	btfss	status,2,c
  3022  007178  EFC0  F038         	goto	u1381
  3023  00717C  EFC2  F038         	goto	u1380
  3024  007180                     u1381:
  3025  007180  EFB8  F038         	goto	l2144
  3026  007184                     u1380:
  3027  007184                     
  3028                           ;XLCD/putrxlcd.c: 21:                 WriteDataXLCD(*buffer);
  3029  007184  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  3030  007188  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  3031  00718C                     	if	0	;tblptru may be non-zero
  3032  00718C                     	endif
  3033  00718C                     	if	0	;tblptru may be non-zero
  3034  00718C                     	endif
  3035  00718C  0008               	tblrd		*
  3036  00718E  50F5               	movf	tablat,w,c
  3037  007190  EC0F  F038         	call	_WriteDataXLCD
  3038  007194                     
  3039                           ;XLCD/putrxlcd.c: 22:                 buffer++;
  3040  007194  4A02               	infsnz	putrsXLCD@buffer^0,f,c
  3041  007196  2A03               	incf	(putrsXLCD@buffer+1)^0,f,c
  3042  007198                     l2150:
  3043                           
  3044                           ;XLCD/putrxlcd.c: 18:         while(*buffer)
  3045  007198  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  3046  00719C  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  3047  0071A0                     	if	0	;tblptru may be non-zero
  3048  0071A0                     	endif
  3049  0071A0                     	if	0	;tblptru may be non-zero
  3050  0071A0                     	endif
  3051  0071A0  0008               	tblrd		*
  3052  0071A2  50F5               	movf	tablat,w,c
  3053  0071A4  0900               	iorlw	0
  3054  0071A6  A4D8               	btfss	status,2,c
  3055  0071A8  EFD8  F038         	goto	u1391
  3056  0071AC  EFDA  F038         	goto	u1390
  3057  0071B0                     u1391:
  3058  0071B0  EFB8  F038         	goto	l2144
  3059  0071B4                     u1390:
  3060  0071B4  0012               	return		;funcret
  3061  0071B6                     __end_of_putrsXLCD:
  3062                           	opt callstack 0
  3063                           
  3064 ;; *************** function _WriteDataXLCD *****************
  3065 ;; Defined at:
  3066 ;;		line 16 in file "XLCD/writdata.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  data            1    wreg     unsigned char 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  data            1    0[COMRAM] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3080 ;;      Params:         0       0       0       0       0       0       0       0       0
  3081 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3083 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3084 ;;Total ram usage:        1 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    1
  3087 ;; This function calls:
  3088 ;;		_DelayFor18TCY
  3089 ;; This function is called by:
  3090 ;;		_putrsXLCD
  3091 ;;		_putsXLCD
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text20
  3096  00701E                     __ptext20:
  3097                           	opt callstack 0
  3098  00701E                     _WriteDataXLCD:
  3099                           	opt callstack 28
  3100                           
  3101                           ;incstack = 0
  3102                           ;WriteDataXLCD@data stored from wreg
  3103  00701E  6E01               	movwf	WriteDataXLCD@data^0,c
  3104  007020                     
  3105                           ;XLCD/writdata.c: 16: void WriteDataXLCD(char data);XLCD/writdata.c: 17: {;XLCD/writdata
      +                          .c: 35:         TRISD &= 0xf0;
  3106  007020  0EF0               	movlw	240
  3107  007022  1695               	andwf	149,f,c	;volatile
  3108                           
  3109                           ;XLCD/writdata.c: 36:         PORTD &= 0xf0;
  3110  007024  0EF0               	movlw	240
  3111  007026  1683               	andwf	131,f,c	;volatile
  3112                           
  3113                           ;XLCD/writdata.c: 37:         PORTD |= ((data>>4)&0x0f);
  3114  007028  3801               	swapf	WriteDataXLCD@data^0,w,c
  3115  00702A  0B0F               	andlw	15
  3116  00702C  0B0F               	andlw	15
  3117  00702E  1283               	iorwf	131,f,c	;volatile
  3118  007030                     
  3119                           ;XLCD/writdata.c: 39:         LATEbits.LATE0 = 1;
  3120  007030  808D               	bsf	141,0,c	;volatile
  3121  007032                     
  3122                           ;XLCD/writdata.c: 40:         LATEbits.LATE1 = 0;
  3123  007032  928D               	bcf	141,1,c	;volatile
  3124  007034                     
  3125                           ;XLCD/writdata.c: 41:         DelayFor18TCY();
  3126  007034  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3127  007038                     
  3128                           ;XLCD/writdata.c: 42:         LATEbits.LATE2 = 1;
  3129  007038  848D               	bsf	141,2,c	;volatile
  3130  00703A                     
  3131                           ;XLCD/writdata.c: 43:         DelayFor18TCY();
  3132  00703A  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3133  00703E                     
  3134                           ;XLCD/writdata.c: 44:         LATEbits.LATE2 = 0;
  3135  00703E  948D               	bcf	141,2,c	;volatile
  3136                           
  3137                           ;XLCD/writdata.c: 49:         PORTD &= 0xf0;
  3138  007040  0EF0               	movlw	240
  3139  007042  1683               	andwf	131,f,c	;volatile
  3140                           
  3141                           ;XLCD/writdata.c: 50:         PORTD |= (data&0x0f);
  3142  007044  5001               	movf	WriteDataXLCD@data^0,w,c
  3143  007046  0B0F               	andlw	15
  3144  007048  1283               	iorwf	131,f,c	;volatile
  3145  00704A                     
  3146                           ;XLCD/writdata.c: 52:         DelayFor18TCY();
  3147  00704A  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3148  00704E                     
  3149                           ;XLCD/writdata.c: 53:         LATEbits.LATE2 = 1;
  3150  00704E  848D               	bsf	141,2,c	;volatile
  3151  007050                     
  3152                           ;XLCD/writdata.c: 54:         DelayFor18TCY();
  3153  007050  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3154  007054                     
  3155                           ;XLCD/writdata.c: 55:         LATEbits.LATE2 = 0;
  3156  007054  948D               	bcf	141,2,c	;volatile
  3157                           
  3158                           ;XLCD/writdata.c: 59:         TRISD |= 0x0f;
  3159  007056  0E0F               	movlw	15
  3160  007058  1295               	iorwf	149,f,c	;volatile
  3161  00705A  0012               	return		;funcret
  3162  00705C                     __end_of_WriteDataXLCD:
  3163                           	opt callstack 0
  3164                           
  3165 ;; *************** function _OpenXLCD *****************
  3166 ;; Defined at:
  3167 ;;		line 19 in file "XLCD/openxlcd.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  lcdtype         1    wreg     unsigned char 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  lcdtype         1    6[COMRAM] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3181 ;;      Params:         0       0       0       0       0       0       0       0       0
  3182 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3183 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3184 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3185 ;;Total ram usage:        2 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    2
  3188 ;; This function calls:
  3189 ;;		_BusyXLCD
  3190 ;;		_DelayPORXLCD
  3191 ;;		_SetDDRamAddr
  3192 ;;		_WriteCmdXLCD
  3193 ;; This function is called by:
  3194 ;;		_initLCD
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text21
  3199  0076D0                     __ptext21:
  3200                           	opt callstack 0
  3201  0076D0                     _OpenXLCD:
  3202                           	opt callstack 27
  3203                           
  3204                           ;incstack = 0
  3205                           ;OpenXLCD@lcdtype stored from wreg
  3206  0076D0  6E07               	movwf	OpenXLCD@lcdtype^0,c
  3207  0076D2                     
  3208                           ;XLCD/openxlcd.c: 19: void OpenXLCD(unsigned char lcdtype);XLCD/openxlcd.c: 20: {;XLCD/o
      +                          penxlcd.c: 31:         PORTD &= 0xf0;
  3209  0076D2  0EF0               	movlw	240
  3210  0076D4  1683               	andwf	131,f,c	;volatile
  3211                           
  3212                           ;XLCD/openxlcd.c: 32:         TRISD &= 0xF0;
  3213  0076D6  0EF0               	movlw	240
  3214  0076D8  1695               	andwf	149,f,c	;volatile
  3215  0076DA                     
  3216                           ;XLCD/openxlcd.c: 35:         TRISEbits.TRISE1 = 0;
  3217  0076DA  9296               	bcf	150,1,c	;volatile
  3218  0076DC                     
  3219                           ;XLCD/openxlcd.c: 36:         TRISEbits.TRISE0 = 0;
  3220  0076DC  9096               	bcf	150,0,c	;volatile
  3221  0076DE                     
  3222                           ;XLCD/openxlcd.c: 37:         TRISEbits.TRISE2 = 0;
  3223  0076DE  9496               	bcf	150,2,c	;volatile
  3224  0076E0                     
  3225                           ;XLCD/openxlcd.c: 38:         LATEbits.LATE1 = 0;
  3226  0076E0  928D               	bcf	141,1,c	;volatile
  3227  0076E2                     
  3228                           ;XLCD/openxlcd.c: 39:         LATEbits.LATE0 = 0;
  3229  0076E2  908D               	bcf	141,0,c	;volatile
  3230  0076E4                     
  3231                           ;XLCD/openxlcd.c: 40:         LATEbits.LATE2 = 0;
  3232  0076E4  948D               	bcf	141,2,c	;volatile
  3233  0076E6                     
  3234                           ;XLCD/openxlcd.c: 43:         DelayPORXLCD();
  3235  0076E6  EC52  F037         	call	_DelayPORXLCD	;wreg free
  3236  0076EA                     
  3237                           ;XLCD/openxlcd.c: 45:    WriteCmdXLCD(0x30);
  3238  0076EA  0E30               	movlw	48
  3239  0076EC  ECF0  F037         	call	_WriteCmdXLCD
  3240  0076F0                     
  3241                           ;XLCD/openxlcd.c: 47:          _delay(50000);
  3242  0076F0  0E41               	movlw	65
  3243  0076F2  6E06               	movwf	??_OpenXLCD^0,c
  3244  0076F4  0EEE               	movlw	238
  3245  0076F6                     u1657:
  3246  0076F6  2EE8               	decfsz	wreg,f,c
  3247  0076F8  D7FE               	bra	u1657
  3248  0076FA  2E06               	decfsz	??_OpenXLCD^0,f,c
  3249  0076FC  D7FC               	bra	u1657
  3250  0076FE  D000               	nop2	
  3251  007700                     
  3252                           ;XLCD/openxlcd.c: 49:    WriteCmdXLCD(0x30);
  3253  007700  0E30               	movlw	48
  3254  007702  ECF0  F037         	call	_WriteCmdXLCD
  3255  007706                     
  3256                           ;XLCD/openxlcd.c: 51:           _delay(10000);
  3257  007706  0E0D               	movlw	13
  3258  007708  6E06               	movwf	??_OpenXLCD^0,c
  3259  00770A  0EFC               	movlw	252
  3260  00770C                     u1667:
  3261  00770C  2EE8               	decfsz	wreg,f,c
  3262  00770E  D7FE               	bra	u1667
  3263  007710  2E06               	decfsz	??_OpenXLCD^0,f,c
  3264  007712  D7FC               	bra	u1667
  3265  007714                     
  3266                           ;XLCD/openxlcd.c: 54:    WriteCmdXLCD(0x32);
  3267  007714  0E32               	movlw	50
  3268  007716  ECF0  F037         	call	_WriteCmdXLCD
  3269  00771A                     l2114:
  3270  00771A  EC93  F038         	call	_BusyXLCD	;wreg free
  3271  00771E  0900               	iorlw	0
  3272  007720  A4D8               	btfss	status,2,c
  3273  007722  EF95  F03B         	goto	u1311
  3274  007726  EF97  F03B         	goto	u1310
  3275  00772A                     u1311:
  3276  00772A  EF8D  F03B         	goto	l2114
  3277  00772E                     u1310:
  3278  00772E                     l2116:
  3279  00772E  EC93  F038         	call	_BusyXLCD	;wreg free
  3280  007732  0900               	iorlw	0
  3281  007734  A4D8               	btfss	status,2,c
  3282  007736  EF9F  F03B         	goto	u1321
  3283  00773A  EFA1  F03B         	goto	u1320
  3284  00773E                     u1321:
  3285  00773E  EF97  F03B         	goto	l2116
  3286  007742                     u1320:
  3287  007742                     
  3288                           ;XLCD/openxlcd.c: 61:         WriteCmdXLCD(lcdtype);
  3289  007742  5007               	movf	OpenXLCD@lcdtype^0,w,c
  3290  007744  ECF0  F037         	call	_WriteCmdXLCD
  3291  007748                     l2120:
  3292  007748  EC93  F038         	call	_BusyXLCD	;wreg free
  3293  00774C  0900               	iorlw	0
  3294  00774E  A4D8               	btfss	status,2,c
  3295  007750  EFAC  F03B         	goto	u1331
  3296  007754  EFAE  F03B         	goto	u1330
  3297  007758                     u1331:
  3298  007758  EFA4  F03B         	goto	l2120
  3299  00775C                     u1330:
  3300  00775C                     
  3301                           ;XLCD/openxlcd.c: 65:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  3302  00775C  0E08               	movlw	8
  3303  00775E  ECF0  F037         	call	_WriteCmdXLCD
  3304  007762                     l2124:
  3305  007762  EC93  F038         	call	_BusyXLCD	;wreg free
  3306  007766  0900               	iorlw	0
  3307  007768  A4D8               	btfss	status,2,c
  3308  00776A  EFB9  F03B         	goto	u1341
  3309  00776E  EFBB  F03B         	goto	u1340
  3310  007772                     u1341:
  3311  007772  EFB1  F03B         	goto	l2124
  3312  007776                     u1340:
  3313  007776                     
  3314                           ;XLCD/openxlcd.c: 67:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  3315  007776  0E0F               	movlw	15
  3316  007778  ECF0  F037         	call	_WriteCmdXLCD
  3317  00777C                     l2128:
  3318  00777C  EC93  F038         	call	_BusyXLCD	;wreg free
  3319  007780  0900               	iorlw	0
  3320  007782  A4D8               	btfss	status,2,c
  3321  007784  EFC6  F03B         	goto	u1351
  3322  007788  EFC8  F03B         	goto	u1350
  3323  00778C                     u1351:
  3324  00778C  EFBE  F03B         	goto	l2128
  3325  007790                     u1350:
  3326  007790                     
  3327                           ;XLCD/openxlcd.c: 71:         WriteCmdXLCD(0x01);
  3328  007790  0E01               	movlw	1
  3329  007792  ECF0  F037         	call	_WriteCmdXLCD
  3330  007796                     l2132:
  3331  007796  EC93  F038         	call	_BusyXLCD	;wreg free
  3332  00779A  0900               	iorlw	0
  3333  00779C  A4D8               	btfss	status,2,c
  3334  00779E  EFD3  F03B         	goto	u1361
  3335  0077A2  EFD5  F03B         	goto	u1360
  3336  0077A6                     u1361:
  3337  0077A6  EFCB  F03B         	goto	l2132
  3338  0077AA                     u1360:
  3339  0077AA                     
  3340                           ;XLCD/openxlcd.c: 75:         WriteCmdXLCD(0b00000100);
  3341  0077AA  0E04               	movlw	4
  3342  0077AC  ECF0  F037         	call	_WriteCmdXLCD
  3343  0077B0                     l2136:
  3344  0077B0  EC93  F038         	call	_BusyXLCD	;wreg free
  3345  0077B4  0900               	iorlw	0
  3346  0077B6  A4D8               	btfss	status,2,c
  3347  0077B8  EFE0  F03B         	goto	u1371
  3348  0077BC  EFE2  F03B         	goto	u1370
  3349  0077C0                     u1371:
  3350  0077C0  EFD8  F03B         	goto	l2136
  3351  0077C4                     u1370:
  3352  0077C4                     
  3353                           ;XLCD/openxlcd.c: 79:         SetDDRamAddr(0x80);
  3354  0077C4  0E80               	movlw	128
  3355  0077C6  EC2D  F039         	call	_SetDDRamAddr
  3356  0077CA  0012               	return		;funcret
  3357  0077CC                     __end_of_OpenXLCD:
  3358                           	opt callstack 0
  3359                           
  3360 ;; *************** function _WriteCmdXLCD *****************
  3361 ;; Defined at:
  3362 ;;		line 13 in file "XLCD/wcmdxlcd.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  cmd             1    wreg     unsigned char 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  cmd             1    0[COMRAM] unsigned char 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0
  3377 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3379 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3380 ;;Total ram usage:        1 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    1
  3383 ;; This function calls:
  3384 ;;		_DelayFor18TCY
  3385 ;; This function is called by:
  3386 ;;		_OpenXLCD
  3387 ;;		_main
  3388 ;;		_initLCD
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text22
  3393  006FE0                     __ptext22:
  3394                           	opt callstack 0
  3395  006FE0                     _WriteCmdXLCD:
  3396                           	opt callstack 28
  3397                           
  3398                           ;incstack = 0
  3399                           ;WriteCmdXLCD@cmd stored from wreg
  3400  006FE0  6E01               	movwf	WriteCmdXLCD@cmd^0,c
  3401  006FE2                     
  3402                           ;XLCD/wcmdxlcd.c: 13: void WriteCmdXLCD(unsigned char cmd);XLCD/wcmdxlcd.c: 14: {;XLCD/w
      +                          cmdxlcd.c: 32:         TRISD &= 0xf0;
  3403  006FE2  0EF0               	movlw	240
  3404  006FE4  1695               	andwf	149,f,c	;volatile
  3405                           
  3406                           ;XLCD/wcmdxlcd.c: 33:         PORTD &= 0xf0;
  3407  006FE6  0EF0               	movlw	240
  3408  006FE8  1683               	andwf	131,f,c	;volatile
  3409                           
  3410                           ;XLCD/wcmdxlcd.c: 34:         PORTD |= (cmd>>4)&0x0f;
  3411  006FEA  3801               	swapf	WriteCmdXLCD@cmd^0,w,c
  3412  006FEC  0B0F               	andlw	15
  3413  006FEE  0B0F               	andlw	15
  3414  006FF0  1283               	iorwf	131,f,c	;volatile
  3415  006FF2                     
  3416                           ;XLCD/wcmdxlcd.c: 36:         LATEbits.LATE1 = 0;
  3417  006FF2  928D               	bcf	141,1,c	;volatile
  3418  006FF4                     
  3419                           ;XLCD/wcmdxlcd.c: 37:         LATEbits.LATE0 = 0;
  3420  006FF4  908D               	bcf	141,0,c	;volatile
  3421  006FF6                     
  3422                           ;XLCD/wcmdxlcd.c: 38:         DelayFor18TCY();
  3423  006FF6  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3424  006FFA                     
  3425                           ;XLCD/wcmdxlcd.c: 39:         LATEbits.LATE2 = 1;
  3426  006FFA  848D               	bsf	141,2,c	;volatile
  3427  006FFC                     
  3428                           ;XLCD/wcmdxlcd.c: 40:         DelayFor18TCY();
  3429  006FFC  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3430  007000                     
  3431                           ;XLCD/wcmdxlcd.c: 41:         LATEbits.LATE2 = 0;
  3432  007000  948D               	bcf	141,2,c	;volatile
  3433                           
  3434                           ;XLCD/wcmdxlcd.c: 46:         PORTD &= 0xf0;
  3435  007002  0EF0               	movlw	240
  3436  007004  1683               	andwf	131,f,c	;volatile
  3437                           
  3438                           ;XLCD/wcmdxlcd.c: 47:         PORTD |= cmd&0x0f;
  3439  007006  5001               	movf	WriteCmdXLCD@cmd^0,w,c
  3440  007008  0B0F               	andlw	15
  3441  00700A  1283               	iorwf	131,f,c	;volatile
  3442  00700C                     
  3443                           ;XLCD/wcmdxlcd.c: 49:         DelayFor18TCY();
  3444  00700C  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3445  007010                     
  3446                           ;XLCD/wcmdxlcd.c: 50:         LATEbits.LATE2 = 1;
  3447  007010  848D               	bsf	141,2,c	;volatile
  3448  007012                     
  3449                           ;XLCD/wcmdxlcd.c: 51:         DelayFor18TCY();
  3450  007012  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3451  007016                     
  3452                           ;XLCD/wcmdxlcd.c: 52:         LATEbits.LATE2 = 0;
  3453  007016  948D               	bcf	141,2,c	;volatile
  3454                           
  3455                           ;XLCD/wcmdxlcd.c: 56:         TRISD |= 0x0f;
  3456  007018  0E0F               	movlw	15
  3457  00701A  1295               	iorwf	149,f,c	;volatile
  3458  00701C  0012               	return		;funcret
  3459  00701E                     __end_of_WriteCmdXLCD:
  3460                           	opt callstack 0
  3461                           
  3462 ;; *************** function _SetDDRamAddr *****************
  3463 ;; Defined at:
  3464 ;;		line 13 in file "XLCD/setddram.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  DDaddr          1    wreg     unsigned char 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  DDaddr          1    3[COMRAM] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3478 ;;      Params:         0       0       0       0       0       0       0       0       0
  3479 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3480 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3481 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3482 ;;Total ram usage:        4 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    1
  3485 ;; This function calls:
  3486 ;;		_DelayFor18TCY
  3487 ;; This function is called by:
  3488 ;;		_OpenXLCD
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text23
  3493  00725A                     __ptext23:
  3494                           	opt callstack 0
  3495  00725A                     _SetDDRamAddr:
  3496                           	opt callstack 27
  3497                           
  3498                           ;incstack = 0
  3499                           ;SetDDRamAddr@DDaddr stored from wreg
  3500  00725A  6E04               	movwf	SetDDRamAddr@DDaddr^0,c
  3501  00725C                     
  3502                           ;XLCD/setddram.c: 13: void SetDDRamAddr(unsigned char DDaddr);XLCD/setddram.c: 14: {;XLC
      +                          D/setddram.c: 32:         TRISD &= 0xf0;
  3503  00725C  0EF0               	movlw	240
  3504  00725E  1695               	andwf	149,f,c	;volatile
  3505                           
  3506                           ;XLCD/setddram.c: 33:         PORTD &= 0xf0;
  3507  007260  0EF0               	movlw	240
  3508  007262  1683               	andwf	131,f,c	;volatile
  3509                           
  3510                           ;XLCD/setddram.c: 34:         PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  3511  007264  5004               	movf	SetDDRamAddr@DDaddr^0,w,c
  3512  007266  6E01               	movwf	??_SetDDRamAddr^0,c
  3513  007268  6A02               	clrf	(??_SetDDRamAddr+1)^0,c
  3514  00726A  0E80               	movlw	128
  3515  00726C  1201               	iorwf	??_SetDDRamAddr^0,f,c
  3516  00726E  0E00               	movlw	0
  3517  007270  1202               	iorwf	(??_SetDDRamAddr+1)^0,f,c
  3518  007272  0E04               	movlw	4
  3519  007274  6E03               	movwf	(??_SetDDRamAddr+2)^0,c
  3520  007276                     u1205:
  3521  007276  3402               	rlcf	(??_SetDDRamAddr+1)^0,w,c
  3522  007278  3202               	rrcf	(??_SetDDRamAddr+1)^0,f,c
  3523  00727A  3201               	rrcf	??_SetDDRamAddr^0,f,c
  3524  00727C  2E03               	decfsz	(??_SetDDRamAddr+2)^0,f,c
  3525  00727E  EF3B  F039         	goto	u1205
  3526  007282  5001               	movf	??_SetDDRamAddr^0,w,c
  3527  007284  0B0F               	andlw	15
  3528  007286  1283               	iorwf	131,f,c	;volatile
  3529  007288                     
  3530                           ;XLCD/setddram.c: 36:         LATEbits.LATE1 = 0;
  3531  007288  928D               	bcf	141,1,c	;volatile
  3532  00728A                     
  3533                           ;XLCD/setddram.c: 37:         LATEbits.LATE0 = 0;
  3534  00728A  908D               	bcf	141,0,c	;volatile
  3535  00728C                     
  3536                           ;XLCD/setddram.c: 38:         DelayFor18TCY();
  3537  00728C  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3538  007290                     
  3539                           ;XLCD/setddram.c: 39:         LATEbits.LATE2 = 1;
  3540  007290  848D               	bsf	141,2,c	;volatile
  3541  007292                     
  3542                           ;XLCD/setddram.c: 40:         DelayFor18TCY();
  3543  007292  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3544  007296                     
  3545                           ;XLCD/setddram.c: 41:         LATEbits.LATE2 = 0;
  3546  007296  948D               	bcf	141,2,c	;volatile
  3547                           
  3548                           ;XLCD/setddram.c: 46:         PORTD &= 0xf0;
  3549  007298  0EF0               	movlw	240
  3550  00729A  1683               	andwf	131,f,c	;volatile
  3551                           
  3552                           ;XLCD/setddram.c: 47:         PORTD |= (DDaddr&0x0f);
  3553  00729C  5004               	movf	SetDDRamAddr@DDaddr^0,w,c
  3554  00729E  0B0F               	andlw	15
  3555  0072A0  1283               	iorwf	131,f,c	;volatile
  3556  0072A2                     
  3557                           ;XLCD/setddram.c: 49:         DelayFor18TCY();
  3558  0072A2  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3559  0072A6                     
  3560                           ;XLCD/setddram.c: 50:         LATEbits.LATE2 = 1;
  3561  0072A6  848D               	bsf	141,2,c	;volatile
  3562  0072A8                     
  3563                           ;XLCD/setddram.c: 51:         DelayFor18TCY();
  3564  0072A8  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3565  0072AC                     
  3566                           ;XLCD/setddram.c: 52:         LATEbits.LATE2 = 0;
  3567  0072AC  948D               	bcf	141,2,c	;volatile
  3568                           
  3569                           ;XLCD/setddram.c: 56:         TRISD |= 0x0f;
  3570  0072AE  0E0F               	movlw	15
  3571  0072B0  1295               	iorwf	149,f,c	;volatile
  3572  0072B2  0012               	return		;funcret
  3573  0072B4                     __end_of_SetDDRamAddr:
  3574                           	opt callstack 0
  3575                           
  3576 ;; *************** function _DelayPORXLCD *****************
  3577 ;; Defined at:
  3578 ;;		line 97 in file "main.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3592 ;;      Params:         0       0       0       0       0       0       0       0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3594 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3595 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3596 ;;Total ram usage:        0 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    1
  3599 ;; This function calls:
  3600 ;;		_delay_ms
  3601 ;; This function is called by:
  3602 ;;		_OpenXLCD
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text24
  3607  006EA4                     __ptext24:
  3608                           	opt callstack 0
  3609  006EA4                     _DelayPORXLCD:
  3610                           	opt callstack 27
  3611  006EA4                     
  3612                           ;main.c: 98:     delay_ms(15);
  3613  006EA4  0E0F               	movlw	15
  3614  006EA6  6E01               	movwf	delay_ms@n^0,c
  3615  006EA8  0E00               	movlw	0
  3616  006EAA  6E02               	movwf	(delay_ms@n+1)^0,c
  3617  006EAC  0E00               	movlw	0
  3618  006EAE  6E03               	movwf	(delay_ms@n+2)^0,c
  3619  006EB0  0E00               	movlw	0
  3620  006EB2  6E04               	movwf	(delay_ms@n+3)^0,c
  3621  006EB4  EC2E  F038         	call	_delay_ms	;wreg free
  3622  006EB8  0012               	return		;funcret
  3623  006EBA                     __end_of_DelayPORXLCD:
  3624                           	opt callstack 0
  3625                           
  3626 ;; *************** function _delay_ms *****************
  3627 ;; Defined at:
  3628 ;;		line 157 in file "../AlteriADC.X/Alteri.h"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  n               4    0[COMRAM] long 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3642 ;;      Params:         4       0       0       0       0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3644 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3645 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3646 ;;Total ram usage:        5 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_main
  3652 ;;		_DelayPORXLCD
  3653 ;;		_DelayXLCD
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text25
  3658  00705C                     __ptext25:
  3659                           	opt callstack 0
  3660  00705C                     _delay_ms:
  3661                           	opt callstack 27
  3662  00705C                     
  3663                           ;../AlteriADC.X/Alteri.h: 157:  extern void delay_ms(long int n);../AlteriADC.X/Alteri.h
      +                          : 158:     {;../AlteriADC.X/Alteri.h: 159:         while(n-- !=0){
  3664  00705C  EF38  F038         	goto	l1802
  3665  007060                     l1800:
  3666                           
  3667                           ;../AlteriADC.X/Alteri.h: 160:             _delay((unsigned long)((1)*(48000000/4000.0))
      +                          );
  3668  007060  0E10               	movlw	16
  3669  007062  6E05               	movwf	??_delay_ms^0,c
  3670  007064  0E94               	movlw	148
  3671  007066                     u1677:
  3672  007066  2EE8               	decfsz	wreg,f,c
  3673  007068  D7FE               	bra	u1677
  3674  00706A  2E05               	decfsz	??_delay_ms^0,f,c
  3675  00706C  D7FC               	bra	u1677
  3676  00706E  D000               	nop2	
  3677  007070                     l1802:
  3678                           
  3679                           ;../AlteriADC.X/Alteri.h: 159:         while(n-- !=0){
  3680  007070  0EFF               	movlw	255
  3681  007072  2601               	addwf	delay_ms@n^0,f,c
  3682  007074  0EFF               	movlw	255
  3683  007076  2202               	addwfc	(delay_ms@n+1)^0,f,c
  3684  007078  0EFF               	movlw	255
  3685  00707A  2203               	addwfc	(delay_ms@n+2)^0,f,c
  3686  00707C  0EFF               	movlw	255
  3687  00707E  2204               	addwfc	(delay_ms@n+3)^0,f,c
  3688  007080  2801               	incf	delay_ms@n^0,w,c
  3689  007082  E10A               	bnz	u1041
  3690  007084  2802               	incf	(delay_ms@n+1)^0,w,c
  3691  007086  E108               	bnz	u1041
  3692  007088  2803               	incf	(delay_ms@n+2)^0,w,c
  3693  00708A  E106               	bnz	u1041
  3694  00708C  2804               	incf	(delay_ms@n+3)^0,w,c
  3695  00708E  A4D8               	btfss	status,2,c
  3696  007090  EF4C  F038         	goto	u1041
  3697  007094  EF4E  F038         	goto	u1040
  3698  007098                     u1041:
  3699  007098  EF30  F038         	goto	l1800
  3700  00709C                     u1040:
  3701  00709C  0012               	return		;funcret
  3702  00709E                     __end_of_delay_ms:
  3703                           	opt callstack 0
  3704                           
  3705 ;; *************** function _BusyXLCD *****************
  3706 ;; Defined at:
  3707 ;;		line 11 in file "XLCD/busyxlcd.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      unsigned char 
  3714 ;; Registers used:
  3715 ;;		wreg, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3721 ;;      Params:         0       0       0       0       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3724 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    1
  3728 ;; This function calls:
  3729 ;;		_DelayFor18TCY
  3730 ;; This function is called by:
  3731 ;;		_OpenXLCD
  3732 ;;		_putrsXLCD
  3733 ;;		_putsXLCD
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text26
  3738  007126                     __ptext26:
  3739                           	opt callstack 0
  3740  007126                     _BusyXLCD:
  3741                           	opt callstack 28
  3742  007126                     
  3743                           ;XLCD/busyxlcd.c: 13:         LATEbits.LATE1 = 1;
  3744  007126  828D               	bsf	141,1,c	;volatile
  3745                           
  3746                           ;XLCD/busyxlcd.c: 14:         LATEbits.LATE0 = 0;
  3747  007128  908D               	bcf	141,0,c	;volatile
  3748  00712A                     
  3749                           ;XLCD/busyxlcd.c: 15:         DelayFor18TCY();
  3750  00712A  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3751  00712E                     
  3752                           ;XLCD/busyxlcd.c: 16:         LATEbits.LATE2 = 1;
  3753  00712E  848D               	bsf	141,2,c	;volatile
  3754                           
  3755                           ;XLCD/busyxlcd.c: 17:         DelayFor18TCY();
  3756  007130  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3757  007134                     
  3758                           ;XLCD/busyxlcd.c: 35:         if(PORTD&0x08)
  3759  007134  A683               	btfss	131,3,c	;volatile
  3760  007136  EF9F  F038         	goto	u1191
  3761  00713A  EFA1  F038         	goto	u1190
  3762  00713E                     u1191:
  3763  00713E  EFAC  F038         	goto	l9
  3764  007142                     u1190:
  3765  007142                     
  3766                           ;XLCD/busyxlcd.c: 37:         {;XLCD/busyxlcd.c: 38:                 LATEbits.LATE2 = 0;
  3767  007142  948D               	bcf	141,2,c	;volatile
  3768  007144                     
  3769                           ;XLCD/busyxlcd.c: 39:                 DelayFor18TCY();
  3770  007144  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3771  007148                     
  3772                           ;XLCD/busyxlcd.c: 40:                 LATEbits.LATE2 = 1;
  3773  007148  848D               	bsf	141,2,c	;volatile
  3774                           
  3775                           ;XLCD/busyxlcd.c: 41:                 DelayFor18TCY();
  3776  00714A  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3777  00714E                     
  3778                           ;XLCD/busyxlcd.c: 42:                 LATEbits.LATE2 = 0;
  3779  00714E  948D               	bcf	141,2,c	;volatile
  3780  007150                     
  3781                           ;XLCD/busyxlcd.c: 43:                 LATEbits.LATE1 = 0;
  3782  007150  928D               	bcf	141,1,c	;volatile
  3783  007152                     
  3784                           ;XLCD/busyxlcd.c: 44:                 return 1;
  3785  007152  0E01               	movlw	1
  3786  007154  EFB5  F038         	goto	l10
  3787  007158                     l9:
  3788                           
  3789                           ;XLCD/busyxlcd.c: 47:         {;XLCD/busyxlcd.c: 48:                 LATEbits.LATE2 = 0;
  3790  007158  948D               	bcf	141,2,c	;volatile
  3791  00715A                     
  3792                           ;XLCD/busyxlcd.c: 49:                 DelayFor18TCY();
  3793  00715A  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3794  00715E                     
  3795                           ;XLCD/busyxlcd.c: 50:                 LATEbits.LATE2 = 1;
  3796  00715E  848D               	bsf	141,2,c	;volatile
  3797                           
  3798                           ;XLCD/busyxlcd.c: 51:                 DelayFor18TCY();
  3799  007160  EC47  F037         	call	_DelayFor18TCY	;wreg free
  3800  007164                     
  3801                           ;XLCD/busyxlcd.c: 52:                 LATEbits.LATE2 = 0;
  3802  007164  948D               	bcf	141,2,c	;volatile
  3803  007166                     
  3804                           ;XLCD/busyxlcd.c: 53:                 LATEbits.LATE1 = 0;
  3805  007166  928D               	bcf	141,1,c	;volatile
  3806  007168                     
  3807                           ;XLCD/busyxlcd.c: 54:                 return 0;
  3808  007168  0E00               	movlw	0
  3809  00716A                     l10:
  3810  00716A  0012               	return		;funcret
  3811  00716C                     __end_of_BusyXLCD:
  3812                           	opt callstack 0
  3813                           
  3814 ;; *************** function _DelayFor18TCY *****************
  3815 ;; Defined at:
  3816 ;;		line 94 in file "main.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3830 ;;      Params:         0       0       0       0       0       0       0       0       0
  3831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3833 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3834 ;;Total ram usage:        0 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_BusyXLCD
  3840 ;;		_SetDDRamAddr
  3841 ;;		_WriteCmdXLCD
  3842 ;;		_WriteDataXLCD
  3843 ;;		_ReadAddrXLCD
  3844 ;;		_ReadDataXLCD
  3845 ;;		_SetCGRamAddr
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text27
  3850  006E8E                     __ptext27:
  3851                           	opt callstack 0
  3852  006E8E                     _DelayFor18TCY:
  3853                           	opt callstack 28
  3854  006E8E                     
  3855                           ;main.c: 95:   _delay(240);
  3856  006E8E  0E50               	movlw	80
  3857  006E90                     u1687:
  3858  006E90  2EE8               	decfsz	wreg,f,c
  3859  006E92  D7FE               	bra	u1687
  3860  006E94  0012               	return		;funcret
  3861  006E96                     __end_of_DelayFor18TCY:
  3862                           	opt callstack 0
  3863                           
  3864 ;; *************** function _initADC *****************
  3865 ;; Defined at:
  3866 ;;		line 59 in file "main.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;		None
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3880 ;;      Params:         0       0       0       0       0       0       0       0       0
  3881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3883 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3884 ;;Total ram usage:        0 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_main
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text28
  3894  006E96                     __ptext28:
  3895                           	opt callstack 0
  3896  006E96                     _initADC:
  3897                           	opt callstack 30
  3898  006E96                     
  3899                           ;main.c: 60:     ADCON0 = 0b00000001;
  3900  006E96  0E01               	movlw	1
  3901  006E98  6EC2               	movwf	194,c	;volatile
  3902                           
  3903                           ;main.c: 62:     ADCON1 = 0b00001110;
  3904  006E9A  0E0E               	movlw	14
  3905  006E9C  6EC1               	movwf	193,c	;volatile
  3906                           
  3907                           ;main.c: 64:     ADCON2 = 0b10111100;
  3908  006E9E  0EBC               	movlw	188
  3909  006EA0  6EC0               	movwf	192,c	;volatile
  3910  006EA2  0012               	return		;funcret
  3911  006EA4                     __end_of_initADC:
  3912                           	opt callstack 0
  3913                           
  3914 ;; *************** function _conversionADC *****************
  3915 ;; Defined at:
  3916 ;;		line 73 in file "main.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  resultado       2    4[COMRAM] unsigned int 
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  2    0[COMRAM] unsigned int 
  3923 ;; Registers used:
  3924 ;;		wreg, status,2, status,0
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3930 ;;      Params:         2       0       0       0       0       0       0       0       0
  3931 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3932 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3933 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3934 ;;Total ram usage:        6 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_main
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text29
  3944  006F46                     __ptext29:
  3945                           	opt callstack 0
  3946  006F46                     _conversionADC:
  3947                           	opt callstack 30
  3948  006F46                     
  3949                           ;main.c: 74:     unsigned int resultado;;main.c: 75:     ADCON0bits.GO_DONE = 1;
  3950  006F46  82C2               	bsf	194,1,c	;volatile
  3951  006F48                     l211:
  3952  006F48  B2C2               	btfsc	194,1,c	;volatile
  3953  006F4A  EFA9  F037         	goto	u1431
  3954  006F4E  EFAB  F037         	goto	u1430
  3955  006F52                     u1431:
  3956  006F52  EFA4  F037         	goto	l211
  3957  006F56                     u1430:
  3958  006F56                     
  3959                           ;main.c: 77:     resultado = (ADRESH<<8) + ADRESL;
  3960  006F56  50C4               	movf	196,w,c	;volatile
  3961  006F58  6E04               	movwf	(??_conversionADC+1)^0,c
  3962  006F5A  6A03               	clrf	??_conversionADC^0,c
  3963  006F5C  50C3               	movf	195,w,c	;volatile
  3964  006F5E  2403               	addwf	??_conversionADC^0,w,c
  3965  006F60  6E05               	movwf	conversionADC@resultado^0,c
  3966  006F62  0E00               	movlw	0
  3967  006F64  2004               	addwfc	(??_conversionADC+1)^0,w,c
  3968  006F66  6E06               	movwf	(conversionADC@resultado+1)^0,c
  3969  006F68                     
  3970                           ;main.c: 78:     return resultado;
  3971  006F68  C005  F001         	movff	conversionADC@resultado,?_conversionADC
  3972  006F6C  C006  F002         	movff	conversionADC@resultado+1,?_conversionADC+1
  3973  006F70  0012               	return		;funcret
  3974  006F72                     __end_of_conversionADC:
  3975                           	opt callstack 0
  3976                           
  3977 ;; *************** function _ChecarLEDs *****************
  3978 ;; Defined at:
  3979 ;;		line 81 in file "main.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;  res             2    6[COMRAM] unsigned int 
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3993 ;;      Params:         2       0       0       0       0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3995 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3996 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3997 ;;Total ram usage:        3 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text30
  4007  0077CC                     __ptext30:
  4008                           	opt callstack 0
  4009  0077CC                     _ChecarLEDs:
  4010                           	opt callstack 30
  4011  0077CC                     
  4012                           ;main.c: 82:     LATAbits.LA1 = (res&(1<<9)) == 0 ? 0 : 1;
  4013  0077CC  B208               	btfsc	(ChecarLEDs@res+1)^0,1,c
  4014  0077CE  EFEB  F03B         	goto	u1441
  4015  0077D2  EFEF  F03B         	goto	u1440
  4016  0077D6                     u1441:
  4017  0077D6  6A09               	clrf	??_ChecarLEDs^0,c
  4018  0077D8  2A09               	incf	??_ChecarLEDs^0,f,c
  4019  0077DA  EFF0  F03B         	goto	u1458
  4020  0077DE                     u1440:
  4021  0077DE  6A09               	clrf	??_ChecarLEDs^0,c
  4022  0077E0                     u1458:
  4023  0077E0  4609               	rlncf	??_ChecarLEDs^0,f,c
  4024  0077E2  5089               	movf	137,w,c	;volatile
  4025  0077E4  1809               	xorwf	??_ChecarLEDs^0,w,c
  4026  0077E6  0BFD               	andlw	-3
  4027  0077E8  1809               	xorwf	??_ChecarLEDs^0,w,c
  4028  0077EA  6E89               	movwf	137,c	;volatile
  4029                           
  4030                           ;main.c: 83:     LATAbits.LA2 = (res&(1<<8)) == 0 ? 0 : 1;
  4031  0077EC  B008               	btfsc	(ChecarLEDs@res+1)^0,0,c
  4032  0077EE  EFFB  F03B         	goto	u1461
  4033  0077F2  EFFF  F03B         	goto	u1460
  4034  0077F6                     u1461:
  4035  0077F6  6A09               	clrf	??_ChecarLEDs^0,c
  4036  0077F8  2A09               	incf	??_ChecarLEDs^0,f,c
  4037  0077FA  EF00  F03C         	goto	u1478
  4038  0077FE                     u1460:
  4039  0077FE  6A09               	clrf	??_ChecarLEDs^0,c
  4040  007800                     u1478:
  4041  007800  4609               	rlncf	??_ChecarLEDs^0,f,c
  4042  007802  4609               	rlncf	??_ChecarLEDs^0,f,c
  4043  007804  5089               	movf	137,w,c	;volatile
  4044  007806  1809               	xorwf	??_ChecarLEDs^0,w,c
  4045  007808  0BFB               	andlw	-5
  4046  00780A  1809               	xorwf	??_ChecarLEDs^0,w,c
  4047  00780C  6E89               	movwf	137,c	;volatile
  4048                           
  4049                           ;main.c: 84:     LATAbits.LA3 = (res&(1<<7)) == 0 ? 0 : 1;
  4050  00780E  BE07               	btfsc	ChecarLEDs@res^0,7,c
  4051  007810  EF0C  F03C         	goto	u1481
  4052  007814  EF10  F03C         	goto	u1480
  4053  007818                     u1481:
  4054  007818  6A09               	clrf	??_ChecarLEDs^0,c
  4055  00781A  2A09               	incf	??_ChecarLEDs^0,f,c
  4056  00781C  EF11  F03C         	goto	u1498
  4057  007820                     u1480:
  4058  007820  6A09               	clrf	??_ChecarLEDs^0,c
  4059  007822                     u1498:
  4060  007822  4609               	rlncf	??_ChecarLEDs^0,f,c
  4061  007824  4609               	rlncf	??_ChecarLEDs^0,f,c
  4062  007826  4609               	rlncf	??_ChecarLEDs^0,f,c
  4063  007828  5089               	movf	137,w,c	;volatile
  4064  00782A  1809               	xorwf	??_ChecarLEDs^0,w,c
  4065  00782C  0BF7               	andlw	-9
  4066  00782E  1809               	xorwf	??_ChecarLEDs^0,w,c
  4067  007830  6E89               	movwf	137,c	;volatile
  4068                           
  4069                           ;main.c: 85:     LATAbits.LA4 = (res&(1<<6)) == 0 ? 0 : 1;
  4070  007832  BC07               	btfsc	ChecarLEDs@res^0,6,c
  4071  007834  EF1E  F03C         	goto	u1501
  4072  007838  EF22  F03C         	goto	u1500
  4073  00783C                     u1501:
  4074  00783C  6A09               	clrf	??_ChecarLEDs^0,c
  4075  00783E  2A09               	incf	??_ChecarLEDs^0,f,c
  4076  007840  EF23  F03C         	goto	u1518
  4077  007844                     u1500:
  4078  007844  6A09               	clrf	??_ChecarLEDs^0,c
  4079  007846                     u1518:
  4080  007846  3A09               	swapf	??_ChecarLEDs^0,f,c
  4081  007848  5089               	movf	137,w,c	;volatile
  4082  00784A  1809               	xorwf	??_ChecarLEDs^0,w,c
  4083  00784C  0BEF               	andlw	-17
  4084  00784E  1809               	xorwf	??_ChecarLEDs^0,w,c
  4085  007850  6E89               	movwf	137,c	;volatile
  4086                           
  4087                           ;main.c: 86:     LATAbits.LA5 = (res&(1<<5)) == 0 ? 0 : 1;
  4088  007852  BA07               	btfsc	ChecarLEDs@res^0,5,c
  4089  007854  EF2E  F03C         	goto	u1521
  4090  007858  EF32  F03C         	goto	u1520
  4091  00785C                     u1521:
  4092  00785C  6A09               	clrf	??_ChecarLEDs^0,c
  4093  00785E  2A09               	incf	??_ChecarLEDs^0,f,c
  4094  007860  EF33  F03C         	goto	u1538
  4095  007864                     u1520:
  4096  007864  6A09               	clrf	??_ChecarLEDs^0,c
  4097  007866                     u1538:
  4098  007866  3A09               	swapf	??_ChecarLEDs^0,f,c
  4099  007868  4609               	rlncf	??_ChecarLEDs^0,f,c
  4100  00786A  5089               	movf	137,w,c	;volatile
  4101  00786C  1809               	xorwf	??_ChecarLEDs^0,w,c
  4102  00786E  0BDF               	andlw	-33
  4103  007870  1809               	xorwf	??_ChecarLEDs^0,w,c
  4104  007872  6E89               	movwf	137,c	;volatile
  4105                           
  4106                           ;main.c: 87:     LATBbits.LB0 = (res&(1<<4)) == 0 ? 0 : 1;
  4107  007874  B807               	btfsc	ChecarLEDs@res^0,4,c
  4108  007876  EF3F  F03C         	goto	u1541
  4109  00787A  EF43  F03C         	goto	u1540
  4110  00787E                     u1541:
  4111  00787E  6A09               	clrf	??_ChecarLEDs^0,c
  4112  007880  2A09               	incf	??_ChecarLEDs^0,f,c
  4113  007882  EF44  F03C         	goto	u1558
  4114  007886                     u1540:
  4115  007886  6A09               	clrf	??_ChecarLEDs^0,c
  4116  007888                     u1558:
  4117  007888  508A               	movf	138,w,c	;volatile
  4118  00788A  1809               	xorwf	??_ChecarLEDs^0,w,c
  4119  00788C  0BFE               	andlw	-2
  4120  00788E  1809               	xorwf	??_ChecarLEDs^0,w,c
  4121  007890  6E8A               	movwf	138,c	;volatile
  4122                           
  4123                           ;main.c: 88:     LATBbits.LB1 = (res&(1<<3)) == 0 ? 0 : 1;
  4124  007892  B607               	btfsc	ChecarLEDs@res^0,3,c
  4125  007894  EF4E  F03C         	goto	u1561
  4126  007898  EF52  F03C         	goto	u1560
  4127  00789C                     u1561:
  4128  00789C  6A09               	clrf	??_ChecarLEDs^0,c
  4129  00789E  2A09               	incf	??_ChecarLEDs^0,f,c
  4130  0078A0  EF53  F03C         	goto	u1578
  4131  0078A4                     u1560:
  4132  0078A4  6A09               	clrf	??_ChecarLEDs^0,c
  4133  0078A6                     u1578:
  4134  0078A6  4609               	rlncf	??_ChecarLEDs^0,f,c
  4135  0078A8  508A               	movf	138,w,c	;volatile
  4136  0078AA  1809               	xorwf	??_ChecarLEDs^0,w,c
  4137  0078AC  0BFD               	andlw	-3
  4138  0078AE  1809               	xorwf	??_ChecarLEDs^0,w,c
  4139  0078B0  6E8A               	movwf	138,c	;volatile
  4140                           
  4141                           ;main.c: 89:     LATBbits.LB2 = (res&(1<<2)) == 0 ? 0 : 1;
  4142  0078B2  B407               	btfsc	ChecarLEDs@res^0,2,c
  4143  0078B4  EF5E  F03C         	goto	u1581
  4144  0078B8  EF62  F03C         	goto	u1580
  4145  0078BC                     u1581:
  4146  0078BC  6A09               	clrf	??_ChecarLEDs^0,c
  4147  0078BE  2A09               	incf	??_ChecarLEDs^0,f,c
  4148  0078C0  EF63  F03C         	goto	u1598
  4149  0078C4                     u1580:
  4150  0078C4  6A09               	clrf	??_ChecarLEDs^0,c
  4151  0078C6                     u1598:
  4152  0078C6  4609               	rlncf	??_ChecarLEDs^0,f,c
  4153  0078C8  4609               	rlncf	??_ChecarLEDs^0,f,c
  4154  0078CA  508A               	movf	138,w,c	;volatile
  4155  0078CC  1809               	xorwf	??_ChecarLEDs^0,w,c
  4156  0078CE  0BFB               	andlw	-5
  4157  0078D0  1809               	xorwf	??_ChecarLEDs^0,w,c
  4158  0078D2  6E8A               	movwf	138,c	;volatile
  4159                           
  4160                           ;main.c: 90:     LATBbits.LB3 = (res&(1<<1)) == 0 ? 0 : 1;
  4161  0078D4  B207               	btfsc	ChecarLEDs@res^0,1,c
  4162  0078D6  EF6F  F03C         	goto	u1601
  4163  0078DA  EF73  F03C         	goto	u1600
  4164  0078DE                     u1601:
  4165  0078DE  6A09               	clrf	??_ChecarLEDs^0,c
  4166  0078E0  2A09               	incf	??_ChecarLEDs^0,f,c
  4167  0078E2  EF74  F03C         	goto	u1618
  4168  0078E6                     u1600:
  4169  0078E6  6A09               	clrf	??_ChecarLEDs^0,c
  4170  0078E8                     u1618:
  4171  0078E8  4609               	rlncf	??_ChecarLEDs^0,f,c
  4172  0078EA  4609               	rlncf	??_ChecarLEDs^0,f,c
  4173  0078EC  4609               	rlncf	??_ChecarLEDs^0,f,c
  4174  0078EE  508A               	movf	138,w,c	;volatile
  4175  0078F0  1809               	xorwf	??_ChecarLEDs^0,w,c
  4176  0078F2  0BF7               	andlw	-9
  4177  0078F4  1809               	xorwf	??_ChecarLEDs^0,w,c
  4178  0078F6  6E8A               	movwf	138,c	;volatile
  4179                           
  4180                           ;main.c: 91:     LATBbits.LB4 = (res&(1<<0)) == 0 ? 0 : 1;
  4181  0078F8  B007               	btfsc	ChecarLEDs@res^0,0,c
  4182  0078FA  EF81  F03C         	goto	u1621
  4183  0078FE  EF85  F03C         	goto	u1620
  4184  007902                     u1621:
  4185  007902  6A09               	clrf	??_ChecarLEDs^0,c
  4186  007904  2A09               	incf	??_ChecarLEDs^0,f,c
  4187  007906  EF86  F03C         	goto	u1638
  4188  00790A                     u1620:
  4189  00790A  6A09               	clrf	??_ChecarLEDs^0,c
  4190  00790C                     u1638:
  4191  00790C  3A09               	swapf	??_ChecarLEDs^0,f,c
  4192  00790E  508A               	movf	138,w,c	;volatile
  4193  007910  1809               	xorwf	??_ChecarLEDs^0,w,c
  4194  007912  0BEF               	andlw	-17
  4195  007914  1809               	xorwf	??_ChecarLEDs^0,w,c
  4196  007916  6E8A               	movwf	138,c	;volatile
  4197  007918  0012               	return		;funcret
  4198  00791A                     __end_of_ChecarLEDs:
  4199                           	opt callstack 0
  4200                           
  4201                           	psect	rparam
  4202  0000                     tosu	equ	0xFFF
  4203                           tosh	equ	0xFFE
  4204                           tosl	equ	0xFFD
  4205                           stkptr	equ	0xFFC
  4206                           pclatu	equ	0xFFB
  4207                           pclath	equ	0xFFA
  4208                           pcl	equ	0xFF9
  4209                           tblptru	equ	0xFF8
  4210                           tblptrh	equ	0xFF7
  4211                           tblptrl	equ	0xFF6
  4212                           tablat	equ	0xFF5
  4213                           prodh	equ	0xFF4
  4214                           prodl	equ	0xFF3
  4215                           indf0	equ	0xFEF
  4216                           postinc0	equ	0xFEE
  4217                           postdec0	equ	0xFED
  4218                           preinc0	equ	0xFEC
  4219                           plusw0	equ	0xFEB
  4220                           fsr0h	equ	0xFEA
  4221                           fsr0l	equ	0xFE9
  4222                           wreg	equ	0xFE8
  4223                           indf1	equ	0xFE7
  4224                           postinc1	equ	0xFE6
  4225                           postdec1	equ	0xFE5
  4226                           preinc1	equ	0xFE4
  4227                           plusw1	equ	0xFE3
  4228                           fsr1h	equ	0xFE2
  4229                           fsr1l	equ	0xFE1
  4230                           bsr	equ	0xFE0
  4231                           indf2	equ	0xFDF
  4232                           postinc2	equ	0xFDE
  4233                           postdec2	equ	0xFDD
  4234                           preinc2	equ	0xFDC
  4235                           plusw2	equ	0xFDB
  4236                           fsr2h	equ	0xFDA
  4237                           fsr2l	equ	0xFD9
  4238                           status	equ	0xFD8


Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     10      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1086_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _putsXLCD->_WriteDataXLCD
    _initLCD->_OpenXLCD
    _putrsXLCD->_WriteDataXLCD
    _DelayPORXLCD->_delay_ms
    _ChecarLEDs->_conversionADC

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8971
                         _ChecarLEDs
                       _WriteCmdXLCD
                      _conversionADC
                           _delay_ms
                            _initADC
                            _initLCD
                            _initLED
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7624
                                             89 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                      _conversionADC (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7271
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    6899
                                             59 COMRAM    22    16      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3759
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1198
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     165
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     569
                           _OpenXLCD
                       _WriteCmdXLCD
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     165
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             2     2      0     360
                                              5 COMRAM     2     2      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      44
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0     250
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             5     1      4     250
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conversionADC                                        6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ChecarLEDs                                           3     1      2     296
                                              6 COMRAM     3     1      2
                      _conversionADC (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ChecarLEDs
     _conversionADC (ARG)
   _WriteCmdXLCD
     _DelayFor18TCY
   _conversionADC
   _delay_ms
   _initADC
   _initLCD
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
         _delay_ms
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
   _initLED
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _sprintf
     _conversionADC (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      A      37       5       34.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96      20        0.0%
DATA                 0      0      96       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Mar 18 23:36:11 2020

                      l9 7158                       l10 716A                       l53 77CA  
                     l66 71B4                       l79 70E0              __CFG_BOR$ON 000000  
    ___wmul@multiplicand 0003              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000                      l130 701C                      l202 6F44  
                    l211 6F48                      l220 6E94                      l205 6EA2  
                    l141 705A                      l214 6F70                      l302 7FFE  
                    l223 6EB8                      l119 72B2                      l208 6EF4  
                    l312 6F1A                      l217 7918                      l260 7444  
                    l308 730C                      l309 7314                      l255 73C6  
                    l265 7AE2                      l258 7408                      l275 7CAA  
                    l267 7AEA                      l189 709C                      l289 7DA8  
                    l750 76AE                      l760 75BE                      l757 76CE  
                    l767 75DE             __CFG_CPB$OFF 000000                      u900 73B2  
                    u901 73AE                      u830 7458                      u910 7408  
                    u831 7454                      u911 7404                      u840 746A  
                    u920 7418                      u841 7466                      u921 7414  
                    u930 6FD8                      u850 7492                      u931 6FD2  
                    u851 748E                      u940 6FDA                      u860 74C8  
                    u861 74C4                      u870 7124                      u951 75E6  
                    u871 7120                      u960 760A                      u880 6F9A  
                    u961 7606                      u881 6F96                      u970 7634  
                    u890 7390                      u971 7630                      u891 738C  
                    u980 7674                      u981 7670                      u990 752E  
                    u991 752A                      _pad 7380    __size_of_WriteCmdXLCD 003E  
                    wreg 000FE8               _ChecarLEDs 77CC             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l1011 7AA0                     l1014 7AA8  
                   l1040 750E                     l2000 7CF4                     l1017 6FDE  
                   l1025 7206                     l2010 7D1E                     l2002 7D00  
                   l2100 76E4                     l2004 7D04                     l2110 7706  
                   l2102 76E6                     l2030 7DB8                     l2022 7D36  
                   l2014 7D26                     l2006 7D16                     l1055 7258  
                   l2120 7748                     l2112 7714                     l2104 76EA  
                   l1048 7124                     l1064 6FA6                     l2040 7E30  
                   l2032 7DBA                     l2130 7790                     l2122 775C  
                   l2114 771A                     l2106 76F0                     l1058 6E8C  
                   l2042 7E50                     l2050 7EB6                     l2034 7DDE  
                   l2026 7D42                     l2018 7D2E                     l2132 7796  
                   l2124 7762                     l2116 772E                     l2108 7700  
                   l2060 7F80                     l2052 7EDA                     l2044 7E5E  
                   l2036 7E14                     l2028 7D96                     l2134 77AA  
                   l2126 7776                     l2118 7742                     l2150 7198  
                   l2142 716C                     l2070 7FBC                     l2062 7F8E  
                   l2054 7F24                     l2038 7E22                     l2136 77B0  
                   l2128 777C                     l2144 7170                     l2160 709E  
                   l2064 7FA2                     l2048 7EA4                     l2152 72B4  
                   l2138 77C4                     l2090 76DA                     l2146 7184  
                   l2170 6ED0                     l2162 70A2                     l2058 7F5C  
                   l2074 7FC8                     l2154 72BC                     l2180 6F56  
                   l2092 76DC                     l2148 7194                     l2172 6EE8  
                   l2164 70B6                     l1700 7100                     l2076 7FEC  
                   l2068 7FAE                     l2156 72CA                     l2182 6F68  
                   l2174 6E96                     l2094 76DE                     l2166 70C4  
                   l1702 7104                     l1710 6F9A                     l2342 7D68  
                   l2158 72F0                     l2190 7222                     l1800 7060  
                   l2096 76E0                     l2088 76D2                     l2176 6F1C  
                   l2168 70C8                     l2344 79D6                     l1704 6F72  
                   l1720 73B2                     l2192 722A                     l2280 7322  
                   l2178 6F46                     l1802 7070                     l2098 76E2  
                   l1706 6F7E                     l1730 7418                     l1722 73BE  
                   l1714 7380                     l1810 7AD6                     l2194 7246  
                   l2186 7208                     l2282 7342                     l2274 7316  
                   l1900 7152                     l1740 6EF6                     l1708 6F82  
                   l1732 742C                     l1724 73D2                     l1716 7390  
                   l1820 7B9E                     l1812 7B12                     l1804 7AAA  
                   l2188 721A                     l2284 7352                     l2276 731A  
                   l2198 77CC                     l1910 7164                     l1742 6F12  
                   l1750 760A                     l1726 73E6                     l1718 73A4  
                   l1830 7C3E                     l1822 7BA4                     l1814 7B1A  
                   l1806 7ABA                     l2286 7358                     l2278 731E  
                   l1912 7166                     l1920 6FE2                     l1736 6FA8  
                   l1840 791A                     l1760 7674                     l1752 7612  
                   l1728 73EA                     l1832 7C58                     l1824 7BAA  
                   l1816 7B22                     l1808 7ABC                     l2288 7364  
                   l1914 7168                     l1906 715A                     l1930 6FFC  
                   l1922 6FF2                     l1850 7988                     l1842 792E  
                   l1762 7694                     l1754 7626                     l1746 75E0  
                   l1770 752E                     l1690 7492                     l1682 7446  
                   l1834 7C72                     l1818 7B28                     l1826 7C0E  
                   l1908 715E                     l1940 7016                     l1932 7000  
                   l1924 6FF4                     l1860 79B0                     l1852 798C  
                   l1844 7932                     l1764 7696                     l1756 7634  
                   l1748 75EC                     l1780 75A6                     l1772 7536  
                   l1692 74C8                     l1684 7458                     l1828 7C20  
                   l1836 7C82                     l1918 6EA4                     l1950 728C  
                   l1934 700C                     l1926 6FF6                     l1790 71FC  
                   l1862 79B8                     l1846 7936                     l1766 76A8  
                   l1758 7646                     l1782 75B8                     l1774 754A  
                   l1686 746A                     l1960 72A6                     l1952 7290  
                   l1944 725C                     l1936 7010                     l1928 6FFA  
                   l1792 7200                     l1784 71B6                     l1872 7A60  
                   l1864 79EC                     l1856 7992                     l1848 7952  
                   l1776 7558                     l1768 7510                     l1688 7474  
                   l1696 70E2                     l1890 7142                     l1882 7126  
                   l1962 72A8                     l1954 7292                     l1946 7288  
                   l1938 7012                     l1970 7030                     l1786 71BA  
                   l1874 7A72                     l1858 79A8                     l1778 7586  
                   l1698 70EE                     l1796 6E8E                     l1892 7144  
                   l1884 712A                     l1964 72AC                     l1956 7296  
                   l1948 728A                     l1980 703E                     l1972 7032  
                   l1788 71CE                     l1876 7A84                     l1868 7A22  
                   l1894 7148                     l1886 712E                     l1798 705C  
                   l1958 72A2                     l1982 704A                     l1974 7034  
                   ?_pad 0011                     l1896 714E                     l1888 7134  
                   l1984 704E                     l1976 7038                     l1968 7020  
                   l1992 7CAC                     l1898 7150                     l1986 7050  
                   l1978 703A                     l1994 7CD0                     l1988 7054  
                   l1996 7CDE                     l1998 7CF0                     STR_1 1015  
                   STR_2 1005                     u1000 7558                     u1001 7554  
                   u1010 7586                     u1011 7582                     u1020 71CE  
                   u1100 7C72                     u1021 71CA                     u1101 7C6E  
                   u1030 71FC                     u1110 7C82                     u1031 71F8  
                   u1111 7C7E                     u1040 709C                     u1120 7952  
                   u1041 7098                     u1121 794E                     u1130 7988  
                   u1050 7ABA                     u1210 7CD0                     u1131 7984  
                   u1051 7AB6                     u1211 7CCC                     u1140 79A4  
                   u1060 7AD6                     u1300 7F80                     u1220 7DA8  
                   u1205 7276                     u1141 79A0                     u1061 7AD2  
                   u1301 7F7C                     u1221 7DA4                     u1310 772E  
                   u1150 7A5A                     u1070 7C20                     u1230 7DB8  
                   u1311 772A                     u1151 7A54                     u1071 7C1C  
                   u1231 7DB4                     u1320 7742                     u1160 7A5C  
                   u1080 7C3E                     u1240 7DDE                     u1400 730C  
                   u1321 773E                     u1081 7C3A                     u1241 7DDA  
                   u1401 7308                     u1330 775C                     u1410 70B6  
                   u1170 7A72                     u1090 7C58                     u1250 7E22  
                   u1331 7758                     u1411 70B2                     u1171 7A6E  
                   u1091 7C54                     u1251 7E1E                     u1500 7844  
                   u1340 7776                     u1420 70E0                     u1180 7A84  
                   u1260 7E9E                     u1501 783C                     u1341 7772  
                   u1421 70DC                     u1181 7A80                     u1261 7E98  
                   u1430 6F56                     u1190 7142                     u1350 7790  
                   u1270 7EA0                     u1431 6F52                     u1191 713E  
                   u1351 778C                     u1600 78E6                     u1520 7864  
                   u1440 77DE                     u1360 77AA                     u1280 7EB6  
                   u1601 78DE                     u1521 785C                     u1441 77D6  
                   u1361 77A6                     u1281 7EB2                     u1370 77C4  
                   u1290 7EDA                     u1371 77C0                     u1291 7ED6  
                   u1620 790A                     u1540 7886                     u1460 77FE  
                   u1380 7184                     u1621 7902                     u1541 787E  
                   u1461 77F6                     u1381 7180                     u1518 7846  
                   u1390 71B4                     u1391 71B0                     u1560 78A4  
                   u1480 7820                     u1561 789C                     u1481 7818  
                   u1618 78E8                     u1538 7866                     u1458 77E0  
                   u1580 78C4                     u1581 78BC                     u1638 790C  
                   u1558 7888                     u1478 7800                     u1657 76F6  
                   u1578 78A6                     u1498 7822                     u1667 770C  
                   u1677 7066                     u1598 78C6                     u1687 6E90  
                   _dbuf 0068                     _atoi 791A                     _main 7316  
                   _prec 0064                     _nout 0060                     pad@i 0018  
                   pad@p 0015                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9                     _utoa 7AAA             _strResultado 0088  
 __size_of_WriteDataXLCD 003E                     prodh 000FF4                     prodl 000FF3  
                   start 1000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_pad 0017             _WriteCmdXLCD 6FE0  
          __CFG_PLLDIV$5 000000                    ?_atoi 0008            _conversionADC 6F46  
          ?_SetDDRamAddr 0001                    ?_main 0001                    ?_utoa 001C  
        __end_of___lodiv 76D0          __end_of___lomod 75E0             vfpfcnvrt@fmt 003E  
           vfpfcnvrt@llu 0046                    _PORTD 000F83            __CFG_USBDIV$2 000000  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
        __end_of_initADC 6EA4          __end_of_initLCD 6EF6          __end_of_initLED 6F46  
         __CFG_EBTRB$OFF 000000                    _flags 0066                    _fputc 7446  
                  _fputs 70E2          __end_of_isdigit 6FE0                    atoi@n 0015  
                  pad@fp 0011                    atoi@s 0008                    _width 0062  
                  _putch 6E8C          __end_of_isspace 7208                    tablat 000FF5  
                  utoa@d 001E                    utoa@i 003A                    utoa@n 0032  
                  utoa@p 002E                    utoa@w 0030                    status 000FD8  
        __end_of_sprintf 725A         ___lodiv@dividend 0001          __initialization 6EBA  
           __end_of_atoi 7AAA             __end_of_main 7380             __end_of_utoa 7CAC  
       __end_of_BusyXLCD 716C    __size_of_DelayPORXLCD 0016           ?_conversionADC 0001  
         ??_SetDDRamAddr 0001         __end_of_OpenXLCD 77CC                   ??_atoi 000A  
                 ??_main 0060                   ??_utoa 0026            __activetblptr 000002  
          _WriteDataXLCD 701E   conversionADC@resultado 0005         ___lodiv@quotient 0011  
            ?_ChecarLEDs 0007                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_fputc 0001                   ?_fputs 000A  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   ?_putch 0001  
          vfpfcnvrt@done 004E           __CFG_VREGEN$ON 000000         __end_of_delay_ms 709E  
           _DelayPORXLCD 6EA4           __CFG_XINST$OFF 000000             vfprintf@cfmt 0058  
                 ___wmul 6EF6           __CFG_STVREN$ON 000000                ??___lodiv 0011  
              ??___lomod 0011                   clear_0 6EC0                   pad@buf 0013  
         ?_WriteDataXLCD 0001                   _strlen 6F72                ??_initADC 0001  
              ??_initLCD 0008                ??_initLED 0001                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
              ??_isdigit 0003             __mediumconst 0000                ??_isspace 0003  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_putsXLCD 70E2         __end_of_vfprintf 7316  
                 utoa@fp 001C                ??_sprintf 0060               __accesstop 0060  
__end_of__initialization 6EC6          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001      __size_of_ChecarLEDs 014E          ??_conversionADC 0003  
          __end_of_fputc 7510            __end_of_fputs 7126            __end_of_putch 6E8E  
                ??_fputc 0005                  ??_fputs 000E   __size_of_DelayFor18TCY 0008  
                ??_putch 0001               __pbssBANK0 0060                ?_BusyXLCD 0001  
        WriteCmdXLCD@cmd 0001     __end_of_SetDDRamAddr 72B4                ?_OpenXLCD 0001  
      WriteDataXLCD@data 0001                  ?___wmul 0001          ??_WriteDataXLCD 0001  
                ?_strlen 0001                ?_delay_ms 0001       __size_of_vfpfcnvrt 0354  
       ___lomod@dividend 0001       __size_of_putrsXLCD 004A               ??_BusyXLCD 0001  
             ??_OpenXLCD 0006                  __Hparam 0000                  __Lparam 0000  
          _DelayFor18TCY 6E8E          __size_of___wmul 0026                  ___lodiv 75E0  
                ___lomod 7510                ?_putsXLCD 0002                ?_vfprintf 0052  
           __psmallconst 1004                  __pcinit 6EBA          putrsXLCD@buffer 0002  
                __ramtop 0800                  __ptext0 7316                  __ptext1 7208  
                __ptext2 72B4                  __ptext3 7CAC                  __ptext4 7AAA  
                __ptext5 7380                  __ptext6 6F72                  __ptext7 70E2  
                __ptext8 7446                  __ptext9 6E8C                  _initADC 6E96  
        __size_of_strlen 0036                  _initLCD 6ED0                  _initLED 6F1C  
           __size_of_pad 00C6                  _isdigit 6FA8                  _isspace 71B6  
             ??_delay_ms 0005             ??_ChecarLEDs 0009                  atoi@neg 000E  
                _sprintf 7208     end_of_initialization 6EC6                  fputc@fp 0003  
          __Lmediumconst 0000                  fputs@fp 000C        __end_of_vfpfcnvrt 8000  
         ?_DelayFor18TCY 0001                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_putsXLCD 0004  
     __end_of_ChecarLEDs 791A               ??_vfprintf 0058                  strlen@a 0003  
                strlen@s 0001        __end_of_putrsXLCD 71B6                _TRISAbits 000F92  
              _TRISBbits 000F93                _TRISEbits 000F96    __size_of_SetDDRamAddr 005A  
            vfpfcnvrt@ap 0040              vfpfcnvrt@fp 003C           __end_of___wmul 6F1C  
           _SetDDRamAddr 725A       SetDDRamAddr@DDaddr 0004           __end_of_strlen 6FA8  
    start_initialization 6EBA          ___lodiv@divisor 0009          ___lodiv@counter 0019  
            __end_of_pad 7446        __size_of_BusyXLCD 0046          ??_DelayFor18TCY 0001  
            vfprintf@fmt 0054        __size_of_OpenXLCD 00FC                 ??___wmul 0005  
          ?_WriteCmdXLCD 0001         __CFG_LPT1OSC$OFF 000000    __end_of_conversionADC 6F72  
               ??_strlen 0003            __pcstackBANK0 008D        __size_of_delay_ms 0042  
              _atoi$1064 0010                _atoi$1065 0014                _atoi$1066 0012  
         putsXLCD@buffer 0002           ??_WriteCmdXLCD 0001                 ?___lodiv 0001  
               ?___lomod 0001        __size_of_putsXLCD 0044    __end_of_WriteDataXLCD 705C  
      __size_of_vfprintf 0062                 ?_initADC 0001          ___lomod@divisor 0009  
               ?_initLCD 0001                 ?_initLED 0001              __smallconst 1004  
        ___lomod@counter 0011                 ?_isdigit 0001                 ?_isspace 0001  
               ?_sprintf 005A           __size_of_fputc 00CA           __size_of_fputs 0044  
         __size_of_putch 0002           ___wmul@product 0005                 _LATAbits 000F89  
               _LATBbits 000F8A                 _LATEbits 000F8D                delay_ms@n 0001  
          ?_DelayPORXLCD 0001          OpenXLCD@lcdtype 0007         __CFG_WDTPS$32768 000000  
              _vfpfcnvrt 7CAC               _ADCON0bits 000FC2        ___wmul@multiplier 0001  
              _putrsXLCD 716C             _isspace$1082 0007                 _BusyXLCD 7126  
         ??_DelayPORXLCD 0006                 _OpenXLCD 76D0                 __Hrparam 0000  
             vfprintf@ap 0056                 __Lrparam 0000               vfprintf@fp 0052  
       __size_of___lodiv 00F0         __size_of___lomod 00D0               ?_vfpfcnvrt 003C  
             sprintf@fmt 005C               ?_putrsXLCD 0002         __size_of_initADC 000E  
       __size_of_initLCD 0026         __size_of_initLED 002A         __size_of_isdigit 0038  
               _delay_ms 705C         __size_of_isspace 0052            ChecarLEDs@res 0007  
               __ptext10 7510                 __ptext11 75E0                 __ptext20 701E  
               __ptext12 791A                 __ptext21 76D0                 __ptext13 71B6  
               __ptext30 77CC                 __ptext22 6FE0                 __ptext14 6FA8  
               __ptext23 725A                 __ptext15 6EF6                 __ptext24 6EA4  
               __ptext16 709E                 __ptext25 705C                 __ptext17 6F1C  
               __ptext26 7126                 __ptext18 6ED0                 __ptext27 6E8E  
               __ptext19 716C                 __ptext28 6E96                 __ptext29 6F46  
   __end_of_WriteCmdXLCD 701E         __size_of_sprintf 0052            __size_of_atoi 0190  
          __size_of_main 006A            __size_of_utoa 0202                 _putsXLCD 709E  
               _vfprintf 72B4    __CFG_CPUDIV$OSC1_PLL2 000000                 isdigit@c 0001  
              sprintf@ap 008F                 isspace@c 0001    __end_of_DelayFor18TCY 6E96  
            ??_vfpfcnvrt 0042            _vfpfcnvrt$609 0050                 sprintf@f 0091  
               sprintf@s 005A     __end_of_DelayPORXLCD 6EBA              ??_putrsXLCD 0004  
     __CFG_FOSC$HSPLL_HS 000000   __size_of_conversionADC 002C  
