

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 19 15:30:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4550 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     _LATBbits	set	3978
    79  0000                     _LATAbits	set	3977
    80  0000                     _ADRESL	set	4035
    81  0000                     _ADRESH	set	4036
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _ADCON2	set	4032
    84  0000                     _ADCON1	set	4033
    85  0000                     _ADCON0	set	4034
    86  0000                     _LATB	set	3978
    87  0000                     _LATA	set	3977
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISA	set	3986
    90  0000                     _TRISEbits	set	3990
    91  0000                     _TRISD	set	3989
    92  0000                     _PORTD	set	3971
    93  0000                     _LATEbits	set	3981
    94                           
    95                           	psect	smallconst
    96  001004                     __psmallconst:
    97                           	opt callstack 0
    98  001004  00                 	db	0
    99  001005                     STR_2:
   100  001005  43                 	db	67	;'C'
   101  001006  6F                 	db	111	;'o'
   102  001007  6E                 	db	110	;'n'
   103  001008  76                 	db	118	;'v'
   104  001009  65                 	db	101	;'e'
   105  00100A  72                 	db	114	;'r'
   106  00100B  74                 	db	116	;'t'
   107  00100C  69                 	db	105	;'i'
   108  00100D  64                 	db	100	;'d'
   109  00100E  6F                 	db	111	;'o'
   110  00100F  72                 	db	114	;'r'
   111  001010  20                 	db	32
   112  001011  41                 	db	65	;'A'
   113  001012  44                 	db	68	;'D'
   114  001013  3A                 	db	58	;':'
   115  001014  00                 	db	0
   116  001015                     STR_1:
   117  001015  25                 	db	37
   118  001016  30                 	db	48	;'0'
   119  001017  34                 	db	52	;'4'
   120  001018  75                 	db	117	;'u'
   121  001019  00                 	db	0
   122                           
   123                           ; #config settings
   124  00101A  00                 	db	0	; dummy byte at the end
   125  0000                     
   126                           	psect	cinit
   127  006EE0                     __pcinit:
   128                           	opt callstack 0
   129  006EE0                     start_initialization:
   130                           	opt callstack 0
   131  006EE0                     __initialization:
   132                           	opt callstack 0
   133                           
   134                           ; Clear objects allocated to BANK0 (45 bytes)
   135  006EE0  EE00  F060         	lfsr	0,__pbssBANK0
   136  006EE4  0E2D               	movlw	45
   137  006EE6                     clear_0:
   138  006EE6  6AEE               	clrf	postinc0,c
   139  006EE8  06E8               	decf	wreg,f,c
   140  006EEA  E1FD               	bnz	clear_0
   141  006EEC                     end_of_initialization:
   142                           	opt callstack 0
   143  006EEC                     __end_of__initialization:
   144                           	opt callstack 0
   145  006EEC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   146  006EEE  6EF8               	movwf	tblptru,c
   147  006EF0  0100               	movlb	0
   148  006EF2  EF89  F039         	goto	_main	;jump to C main() function
   149                           
   150                           	psect	bssBANK0
   151  000060                     __pbssBANK0:
   152                           	opt callstack 0
   153  000060                     _nout:
   154                           	opt callstack 0
   155  000060                     	ds	2
   156  000062                     _width:
   157                           	opt callstack 0
   158  000062                     	ds	2
   159  000064                     _prec:
   160                           	opt callstack 0
   161  000064                     	ds	2
   162  000066                     _flags:
   163                           	opt callstack 0
   164  000066                     	ds	2
   165  000068                     _dbuf:
   166                           	opt callstack 0
   167  000068                     	ds	32
   168  000088                     _strResultado:
   169                           	opt callstack 0
   170  000088                     	ds	5
   171                           
   172                           	psect	cstackBANK0
   173  00008D                     __pcstackBANK0:
   174                           	opt callstack 0
   175  00008D                     	ds	2
   176  00008F                     sprintf@ap:
   177                           	opt callstack 0
   178                           
   179                           ; 2 bytes @ 0x2
   180  00008F                     	ds	2
   181  000091                     sprintf@f:
   182                           	opt callstack 0
   183                           
   184                           ; 6 bytes @ 0x4
   185  000091                     	ds	6
   186  000097                     main@resultado:
   187                           	opt callstack 0
   188                           
   189                           ; 2 bytes @ 0xA
   190  000097                     	ds	2
   191                           
   192                           	psect	cstackCOMRAM
   193  000001                     __pcstackCOMRAM:
   194                           	opt callstack 0
   195  000001                     ??_SetDDRamAddr:
   196  000001                     ?_conversionADC:
   197                           	opt callstack 0
   198  000001                     ?_strlen:
   199                           	opt callstack 0
   200  000001                     ?_isdigit:
   201                           	opt callstack 0
   202  000001                     ?_isspace:
   203                           	opt callstack 0
   204  000001                     ?___wmul:
   205                           	opt callstack 0
   206  000001                     ?___lodiv:
   207                           	opt callstack 0
   208  000001                     ?___lomod:
   209                           	opt callstack 0
   210  000001                     WriteCmdXLCD@cmd:
   211                           	opt callstack 0
   212  000001                     WriteDataXLCD@data:
   213                           	opt callstack 0
   214  000001                     ChecarLEDs@res:
   215                           	opt callstack 0
   216  000001                     ___wmul@multiplier:
   217                           	opt callstack 0
   218  000001                     isdigit@c:
   219                           	opt callstack 0
   220  000001                     isspace@c:
   221                           	opt callstack 0
   222  000001                     fputc@c:
   223                           	opt callstack 0
   224  000001                     strlen@s:
   225                           	opt callstack 0
   226  000001                     delay_ms@n:
   227                           	opt callstack 0
   228  000001                     ___lodiv@dividend:
   229                           	opt callstack 0
   230  000001                     ___lomod@dividend:
   231                           	opt callstack 0
   232                           
   233                           ; 8 bytes @ 0x0
   234  000001                     	ds	1
   235  000002                     putrsXLCD@buffer:
   236                           	opt callstack 0
   237  000002                     putsXLCD@buffer:
   238                           	opt callstack 0
   239                           
   240                           ; 2 bytes @ 0x1
   241  000002                     	ds	1
   242  000003                     ??_conversionADC:
   243  000003                     ??_ChecarLEDs:
   244  000003                     ??_isdigit:
   245  000003                     ??_isspace:
   246  000003                     ___wmul@multiplicand:
   247                           	opt callstack 0
   248  000003                     fputc@fp:
   249                           	opt callstack 0
   250  000003                     strlen@a:
   251                           	opt callstack 0
   252                           
   253                           ; 2 bytes @ 0x2
   254  000003                     	ds	1
   255  000004                     SetDDRamAddr@DDaddr:
   256                           	opt callstack 0
   257                           
   258                           ; 1 bytes @ 0x3
   259  000004                     	ds	1
   260  000005                     ??_fputc:
   261  000005                     ??_delay_ms:
   262  000005                     conversionADC@resultado:
   263                           	opt callstack 0
   264  000005                     ___wmul@product:
   265                           	opt callstack 0
   266                           
   267                           ; 2 bytes @ 0x4
   268  000005                     	ds	1
   269  000006                     ??_OpenXLCD:
   270                           
   271                           ; 1 bytes @ 0x5
   272  000006                     	ds	1
   273  000007                     OpenXLCD@lcdtype:
   274                           	opt callstack 0
   275  000007                     _isspace$996:
   276                           	opt callstack 0
   277                           
   278                           ; 1 bytes @ 0x6
   279  000007                     	ds	1
   280  000008                     ?_atoi:
   281                           	opt callstack 0
   282  000008                     atoi@s:
   283                           	opt callstack 0
   284                           
   285                           ; 2 bytes @ 0x7
   286  000008                     	ds	1
   287  000009                     ___lodiv@divisor:
   288                           	opt callstack 0
   289  000009                     ___lomod@divisor:
   290                           	opt callstack 0
   291                           
   292                           ; 8 bytes @ 0x8
   293  000009                     	ds	1
   294  00000A                     ??_atoi:
   295  00000A                     fputs@s:
   296                           	opt callstack 0
   297                           
   298                           ; 2 bytes @ 0x9
   299  00000A                     	ds	2
   300  00000C                     fputs@fp:
   301                           	opt callstack 0
   302                           
   303                           ; 2 bytes @ 0xB
   304  00000C                     	ds	2
   305  00000E                     fputs@c:
   306                           	opt callstack 0
   307  00000E                     atoi@neg:
   308                           	opt callstack 0
   309                           
   310                           ; 2 bytes @ 0xD
   311  00000E                     	ds	1
   312  00000F                     fputs@i:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0xE
   316  00000F                     	ds	1
   317  000010                     _atoi$978:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0xF
   321  000010                     	ds	1
   322  000011                     ?_pad:
   323                           	opt callstack 0
   324  000011                     ___lomod@counter:
   325                           	opt callstack 0
   326  000011                     pad@fp:
   327                           	opt callstack 0
   328  000011                     ___lodiv@quotient:
   329                           	opt callstack 0
   330                           
   331                           ; 8 bytes @ 0x10
   332  000011                     	ds	1
   333  000012                     _atoi$980:
   334                           	opt callstack 0
   335                           
   336                           ; 2 bytes @ 0x11
   337  000012                     	ds	1
   338  000013                     pad@buf:
   339                           	opt callstack 0
   340                           
   341                           ; 2 bytes @ 0x12
   342  000013                     	ds	1
   343  000014                     _atoi$979:
   344                           	opt callstack 0
   345                           
   346                           ; 1 bytes @ 0x13
   347  000014                     	ds	1
   348  000015                     pad@p:
   349                           	opt callstack 0
   350  000015                     atoi@n:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0x14
   354  000015                     	ds	2
   355  000017                     ??_pad:
   356                           
   357                           ; 1 bytes @ 0x16
   358  000017                     	ds	1
   359  000018                     pad@i:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x17
   363  000018                     	ds	1
   364  000019                     ___lodiv@counter:
   365                           	opt callstack 0
   366                           
   367                           ; 1 bytes @ 0x18
   368  000019                     	ds	1
   369  00001A                     pad@w:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x19
   373  00001A                     	ds	2
   374  00001C                     ?_utoa:
   375                           	opt callstack 0
   376  00001C                     utoa@fp:
   377                           	opt callstack 0
   378                           
   379                           ; 2 bytes @ 0x1B
   380  00001C                     	ds	2
   381  00001E                     utoa@d:
   382                           	opt callstack 0
   383                           
   384                           ; 8 bytes @ 0x1D
   385  00001E                     	ds	8
   386  000026                     ??_utoa:
   387                           
   388                           ; 1 bytes @ 0x25
   389  000026                     	ds	8
   390  00002E                     utoa@p:
   391                           	opt callstack 0
   392                           
   393                           ; 2 bytes @ 0x2D
   394  00002E                     	ds	2
   395  000030                     utoa@w:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0x2F
   399  000030                     	ds	2
   400  000032                     utoa@n:
   401                           	opt callstack 0
   402                           
   403                           ; 8 bytes @ 0x31
   404  000032                     	ds	8
   405  00003A                     utoa@i:
   406                           	opt callstack 0
   407                           
   408                           ; 2 bytes @ 0x39
   409  00003A                     	ds	2
   410  00003C                     ?_vfpfcnvrt:
   411                           	opt callstack 0
   412  00003C                     vfpfcnvrt@fp:
   413                           	opt callstack 0
   414                           
   415                           ; 2 bytes @ 0x3B
   416  00003C                     	ds	2
   417  00003E                     vfpfcnvrt@fmt:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x3D
   421  00003E                     	ds	2
   422  000040                     vfpfcnvrt@ap:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0x3F
   426  000040                     	ds	2
   427  000042                     ??_vfpfcnvrt:
   428                           
   429                           ; 1 bytes @ 0x41
   430  000042                     	ds	4
   431  000046                     vfpfcnvrt@llu:
   432                           	opt callstack 0
   433                           
   434                           ; 8 bytes @ 0x45
   435  000046                     	ds	8
   436  00004E                     vfpfcnvrt@done:
   437                           	opt callstack 0
   438                           
   439                           ; 2 bytes @ 0x4D
   440  00004E                     	ds	2
   441  000050                     _vfpfcnvrt$523:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x4F
   445  000050                     	ds	2
   446  000052                     ?_vfprintf:
   447                           	opt callstack 0
   448  000052                     vfprintf@fp:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x51
   452  000052                     	ds	2
   453  000054                     vfprintf@fmt:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x53
   457  000054                     	ds	2
   458  000056                     vfprintf@ap:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x55
   462  000056                     	ds	2
   463  000058                     vfprintf@cfmt:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x57
   467  000058                     	ds	2
   468  00005A                     ?_sprintf:
   469                           	opt callstack 0
   470  00005A                     sprintf@s:
   471                           	opt callstack 0
   472                           
   473                           ; 2 bytes @ 0x59
   474  00005A                     	ds	2
   475  00005C                     sprintf@fmt:
   476                           	opt callstack 0
   477                           
   478                           ; 2 bytes @ 0x5B
   479  00005C                     	ds	4
   480  000060                     
   481                           ; 1 bytes @ 0x5F
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 15 in file "main.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  resultado       2   10[BANK0 ] unsigned short 
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   501 ;;      Params:         0       0       0       0       0       0       0       0       0
   502 ;;      Locals:         0       2       0       0       0       0       0       0       0
   503 ;;      Temps:          0       0       0       0       0       0       0       0       0
   504 ;;      Totals:         0       2       0       0       0       0       0       0       0
   505 ;;Total ram usage:        2 bytes
   506 ;; Hardware stack levels required when called:    8
   507 ;; This function calls:
   508 ;;		_ChecarLEDs
   509 ;;		_WriteCmdXLCD
   510 ;;		_conversionADC
   511 ;;		_delay_ms
   512 ;;		_initADC
   513 ;;		_initLCD
   514 ;;		_initLED
   515 ;;		_putsXLCD
   516 ;;		_sprintf
   517 ;; This function is called by:
   518 ;;		Startup code after reset
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text0
   523  007312                     __ptext0:
   524                           	opt callstack 0
   525  007312                     _main:
   526                           	opt callstack 23
   527  007312                     
   528                           ;main.c: 16:     initLCD();
   529  007312  EC7B  F037         	call	_initLCD	;wreg free
   530  007316                     
   531                           ;main.c: 17:     initADC();
   532  007316  EC55  F037         	call	_initADC	;wreg free
   533  00731A                     
   534                           ;main.c: 18:     initLED();
   535  00731A  EC5C  F037         	call	_initLED	;wreg free
   536  00731E                     l2286:
   537                           
   538                           ;main.c: 20:         uint16_t resultado = conversionADC();
   539  00731E  ECA1  F037         	call	_conversionADC	;wreg free
   540  007322  C001  F097         	movff	?_conversionADC,main@resultado
   541  007326  C002  F098         	movff	?_conversionADC+1,main@resultado+1
   542  00732A                     
   543                           ;main.c: 21:         sprintf(strResultado,"%04u",resultado);
   544  00732A  0E88               	movlw	low _strResultado
   545  00732C  6E5A               	movwf	sprintf@s^0,c
   546  00732E  0E00               	movlw	high _strResultado
   547  007330  6E5B               	movwf	(sprintf@s+1)^0,c
   548  007332  0E15               	movlw	low STR_1
   549  007334  6E5C               	movwf	sprintf@fmt^0,c
   550  007336  0E10               	movlw	high STR_1
   551  007338  6E5D               	movwf	(sprintf@fmt+1)^0,c
   552  00733A  C097  F05E         	movff	main@resultado,?_sprintf+4
   553  00733E  C098  F05F         	movff	main@resultado+1,?_sprintf+5
   554  007342  EC02  F039         	call	_sprintf	;wreg free
   555  007346                     
   556                           ;main.c: 22:         WriteCmdXLCD(0b11000000 + 5);
   557  007346  0EC5               	movlw	197
   558  007348  ECEE  F037         	call	_WriteCmdXLCD
   559  00734C                     
   560                           ;main.c: 23:         putsXLCD(strResultado);
   561  00734C  0E88               	movlw	low _strResultado
   562  00734E  6E02               	movwf	putsXLCD@buffer^0,c
   563  007350  0E00               	movlw	high _strResultado
   564  007352  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   565  007354  EC4D  F038         	call	_putsXLCD	;wreg free
   566  007358                     
   567                           ;main.c: 24:         ChecarLEDs(resultado);
   568  007358  C097  F001         	movff	main@resultado,ChecarLEDs@res
   569  00735C  C098  F002         	movff	main@resultado+1,ChecarLEDs@res+1
   570  007360  ECE6  F03B         	call	_ChecarLEDs	;wreg free
   571  007364                     
   572                           ;main.c: 25:         delay_ms(200);
   573  007364  0EC8               	movlw	200
   574  007366  6E01               	movwf	delay_ms@n^0,c
   575  007368  0E00               	movlw	0
   576  00736A  6E02               	movwf	(delay_ms@n+1)^0,c
   577  00736C  0E00               	movlw	0
   578  00736E  6E03               	movwf	(delay_ms@n+2)^0,c
   579  007370  0E00               	movlw	0
   580  007372  6E04               	movwf	(delay_ms@n+3)^0,c
   581  007374  EC2C  F038         	call	_delay_ms	;wreg free
   582  007378  EF8F  F039         	goto	l2286
   583  00737C  EF00  F008         	goto	start
   584  007380                     __end_of_main:
   585                           	opt callstack 0
   586                           
   587 ;; *************** function _sprintf *****************
   588 ;; Defined at:
   589 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  s               2   89[COMRAM] PTR unsigned char 
   592 ;;		 -> strResultado(5), 
   593 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
   594 ;;		 -> STR_1(5), 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  f               6    4[BANK0 ] struct _IO_FILE
   597 ;;  ap              2    2[BANK0 ] PTR void [1]
   598 ;;		 -> ?_sprintf(2), 
   599 ;;  ret             2    0        int 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  2   89[COMRAM] int 
   602 ;; Registers used:
   603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   609 ;;      Params:         6       0       0       0       0       0       0       0       0
   610 ;;      Locals:         0      10       0       0       0       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0       0       0       0       0
   612 ;;      Totals:         6      10       0       0       0       0       0       0       0
   613 ;;Total ram usage:       16 bytes
   614 ;; Hardware stack levels used:    1
   615 ;; Hardware stack levels required when called:    7
   616 ;; This function calls:
   617 ;;		_vfprintf
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text1
   624  007204                     __ptext1:
   625                           	opt callstack 0
   626  007204                     _sprintf:
   627                           	opt callstack 23
   628  007204  0E5E               	movlw	low (?_sprintf+4)
   629  007206  0100               	movlb	0	; () banked
   630  007208  6F8F               	movwf	sprintf@ap& (0+255),b
   631  00720A  0E00               	movlw	high (?_sprintf+4)
   632  00720C  6F90               	movwf	(sprintf@ap+1)& (0+255),b
   633  00720E  C05A  F091         	movff	sprintf@s,sprintf@f
   634  007212  C05B  F092         	movff	sprintf@s+1,sprintf@f+1
   635  007216                     
   636                           ; BSR set to: 0
   637  007216  0E00               	movlw	0
   638  007218  6F94               	movwf	(sprintf@f+3)& (0+255),b
   639  00721A  0E00               	movlw	0
   640  00721C  6F93               	movwf	(sprintf@f+2)& (0+255),b
   641  00721E                     
   642                           ; BSR set to: 0
   643  00721E  0E00               	movlw	0
   644  007220  6F96               	movwf	(sprintf@f+5)& (0+255),b
   645  007222  0E00               	movlw	0
   646  007224  6F95               	movwf	(sprintf@f+4)& (0+255),b
   647  007226                     
   648                           ; BSR set to: 0
   649  007226  0E91               	movlw	low sprintf@f
   650  007228  6E52               	movwf	vfprintf@fp^0,c
   651  00722A  0E00               	movlw	high sprintf@f
   652  00722C  6E53               	movwf	(vfprintf@fp+1)^0,c
   653  00722E  C05C  F054         	movff	sprintf@fmt,vfprintf@fmt
   654  007232  C05D  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
   655  007236  0E8F               	movlw	low sprintf@ap
   656  007238  6E56               	movwf	vfprintf@ap^0,c
   657  00723A  0E00               	movlw	high sprintf@ap
   658  00723C  6E57               	movwf	(vfprintf@ap+1)^0,c
   659  00723E  EC58  F039         	call	_vfprintf	;wreg free
   660  007242  0100               	movlb	0	; () banked
   661  007244  5193               	movf	(sprintf@f+2)& (0+255),w,b
   662  007246  245A               	addwf	sprintf@s^0,w,c
   663  007248  6ED9               	movwf	fsr2l,c
   664  00724A  5194               	movf	(sprintf@f+3)& (0+255),w,b
   665  00724C  205B               	addwfc	(sprintf@s+1)^0,w,c
   666  00724E  6EDA               	movwf	fsr2h,c
   667  007250  0E00               	movlw	0
   668  007252  6EDF               	movwf	indf2,c
   669  007254                     
   670                           ; BSR set to: 0
   671  007254  0012               	return		;funcret
   672  007256                     __end_of_sprintf:
   673                           	opt callstack 0
   674                           
   675 ;; *************** function _vfprintf *****************
   676 ;; Defined at:
   677 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
   680 ;;		 -> sprintf@f(6), 
   681 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
   682 ;;		 -> STR_1(5), 
   683 ;;  ap              2   85[COMRAM] PTR PTR void 
   684 ;;		 -> sprintf@ap(2), 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
   687 ;;		 -> STR_1(5), 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  2   81[COMRAM] int 
   690 ;; Registers used:
   691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   697 ;;      Params:         6       0       0       0       0       0       0       0       0
   698 ;;      Locals:         2       0       0       0       0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0       0       0       0       0
   700 ;;      Totals:         8       0       0       0       0       0       0       0       0
   701 ;;Total ram usage:        8 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; Hardware stack levels required when called:    6
   704 ;; This function calls:
   705 ;;		_vfpfcnvrt
   706 ;; This function is called by:
   707 ;;		_sprintf
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text2
   712  0072B0                     __ptext2:
   713                           	opt callstack 0
   714  0072B0                     _vfprintf:
   715                           	opt callstack 23
   716  0072B0                     
   717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   718  0072B0  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
   719  0072B4  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   720  0072B8                     
   721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   722  0072B8  0E00               	movlw	0
   723  0072BA  0100               	movlb	0	; () banked
   724  0072BC  6F61               	movwf	(_nout+1)& (0+255),b
   725  0072BE  0E00               	movlw	0
   726  0072C0  6F60               	movwf	_nout& (0+255),b
   727                           
   728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   729  0072C2  EF76  F039         	goto	l2164
   730  0072C6                     l2162:
   731                           
   732                           ; BSR set to: 0
   733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   734  0072C6  C052  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
   735  0072CA  C053  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   736  0072CE  0E58               	movlw	low vfprintf@cfmt
   737  0072D0  6E3E               	movwf	vfpfcnvrt@fmt^0,c
   738  0072D2  0E00               	movlw	high vfprintf@cfmt
   739  0072D4  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
   740  0072D6  C056  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
   741  0072DA  C057  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   742  0072DE  EC56  F03E         	call	_vfpfcnvrt	;wreg free
   743  0072E2  503C               	movf	?_vfpfcnvrt^0,w,c
   744  0072E4  0100               	movlb	0	; () banked
   745  0072E6  2760               	addwf	_nout& (0+255),f,b
   746  0072E8  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
   747  0072EA  2361               	addwfc	(_nout+1)& (0+255),f,b
   748  0072EC                     l2164:
   749                           
   750                           ; BSR set to: 0
   751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   752  0072EC  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
   753  0072F0  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   754  0072F4                     	if	0	;tblptru may be non-zero
   755  0072F4                     	endif
   756  0072F4                     	if	0	;tblptru may be non-zero
   757  0072F4                     	endif
   758  0072F4  0008               	tblrd		*
   759  0072F6  50F5               	movf	tablat,w,c
   760  0072F8  0900               	iorlw	0
   761  0072FA  A4D8               	btfss	status,2,c
   762  0072FC  EF82  F039         	goto	u1401
   763  007300  EF84  F039         	goto	u1400
   764  007304                     u1401:
   765  007304  EF63  F039         	goto	l2162
   766  007308                     u1400:
   767  007308                     
   768                           ; BSR set to: 0
   769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   770  007308  C060  F052         	movff	_nout,?_vfprintf
   771  00730C  C061  F053         	movff	_nout+1,?_vfprintf+1
   772  007310                     
   773                           ; BSR set to: 0
   774  007310  0012               	return		;funcret
   775  007312                     __end_of_vfprintf:
   776                           	opt callstack 0
   777                           
   778 ;; *************** function _vfpfcnvrt *****************
   779 ;; Defined at:
   780 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
   783 ;;		 -> sprintf@f(6), 
   784 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
   785 ;;		 -> vfprintf@cfmt(2), 
   786 ;;  ap              2   63[COMRAM] PTR PTR void 
   787 ;;		 -> sprintf@ap(2), 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  llu             8   69[COMRAM] unsigned long long 
   790 ;;  ll              8    0        long long 
   791 ;;  f               4    0        long long 
   792 ;;  vp              3    0        PTR void 
   793 ;;  ct              3    0        unsigned char [3]
   794 ;;  cp              3    0        PTR unsigned char 
   795 ;;  done            2   77[COMRAM] int 
   796 ;;  i               2    0        int 
   797 ;;  c               1    0        unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  2   59[COMRAM] int 
   800 ;; Registers used:
   801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   807 ;;      Params:         6       0       0       0       0       0       0       0       0
   808 ;;      Locals:        12       0       0       0       0       0       0       0       0
   809 ;;      Temps:          4       0       0       0       0       0       0       0       0
   810 ;;      Totals:        22       0       0       0       0       0       0       0       0
   811 ;;Total ram usage:       22 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; Hardware stack levels required when called:    5
   814 ;; This function calls:
   815 ;;		_atoi
   816 ;;		_fputc
   817 ;;		_isdigit
   818 ;;		_utoa
   819 ;; This function is called by:
   820 ;;		_vfprintf
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text3
   825  007CAC                     __ptext3:
   826                           	opt callstack 0
   827  007CAC                     _vfpfcnvrt:
   828                           	opt callstack 23
   829  007CAC                     
   830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   831  007CAC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   832  007CB0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   833  007CB4  CFDE FFF6          	movff	postinc2,tblptrl
   834  007CB8  CFDD FFF7          	movff	postdec2,tblptrh
   835  007CBC                     	if	0	;tblptru may be non-zero
   836  007CBC                     	endif
   837  007CBC                     	if	0	;tblptru may be non-zero
   838  007CBC                     	endif
   839  007CBC  0008               	tblrd		*
   840  007CBE  50F5               	movf	tablat,w,c
   841  007CC0  0A25               	xorlw	37
   842  007CC2  A4D8               	btfss	status,2,c
   843  007CC4  EF66  F03E         	goto	u1211
   844  007CC8  EF68  F03E         	goto	u1210
   845  007CCC                     u1211:
   846  007CCC  EFE4  F03F         	goto	l2080
   847  007CD0                     u1210:
   848  007CD0                     
   849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
   850  007CD0  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   851  007CD4  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   852  007CD8  2ADE               	incf	postinc2,f,c
   853  007CDA  0E00               	movlw	0
   854  007CDC  22DD               	addwfc	postdec2,f,c
   855  007CDE                     
   856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
   857  007CDE  0E00               	movlw	0
   858  007CE0  0100               	movlb	0	; () banked
   859  007CE2  6F63               	movwf	(_width+1)& (0+255),b
   860  007CE4  0E00               	movlw	0
   861  007CE6  6F62               	movwf	_width& (0+255),b
   862  007CE8  C062  F066         	movff	_width,_flags
   863  007CEC  C063  F067         	movff	_width+1,_flags+1
   864  007CF0                     
   865                           ; BSR set to: 0
   866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
   867  007CF0  6964               	setf	_prec& (0+255),b
   868  007CF2  6965               	setf	(_prec+1)& (0+255),b
   869  007CF4                     
   870                           ; BSR set to: 0
   871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
   872  007CF4  0E00               	movlw	0
   873  007CF6  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
   874  007CF8  0E00               	movlw	0
   875  007CFA  6E4E               	movwf	vfpfcnvrt@done^0,c
   876                           
   877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
   878  007CFC  EFCB  F03E         	goto	l2034
   879  007D00                     l2008:
   880                           
   881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
   882  007D00  0100               	movlb	0	; () banked
   883  007D02  8166               	bsf	_flags& (0+255),0,b
   884  007D04                     l2010:
   885                           
   886                           ; BSR set to: 0
   887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
   888  007D04  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   889  007D08  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   890  007D0C  2ADE               	incf	postinc2,f,c
   891  007D0E  0E00               	movlw	0
   892  007D10  22DD               	addwfc	postdec2,f,c
   893                           
   894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
   895  007D12  EFCB  F03E         	goto	l2034
   896  007D16                     l2012:
   897                           
   898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
   899  007D16  0100               	movlb	0	; () banked
   900  007D18  8366               	bsf	_flags& (0+255),1,b
   901  007D1A  EF82  F03E         	goto	l2010
   902  007D1E                     l2016:
   903                           
   904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
   905  007D1E  0100               	movlb	0	; () banked
   906  007D20  8566               	bsf	_flags& (0+255),2,b
   907  007D22  EF82  F03E         	goto	l2010
   908  007D26                     l2020:
   909                           
   910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
   911  007D26  0100               	movlb	0	; () banked
   912  007D28  8766               	bsf	_flags& (0+255),3,b
   913  007D2A  EF82  F03E         	goto	l2010
   914  007D2E                     l2024:
   915                           
   916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
   917  007D2E  0100               	movlb	0	; () banked
   918  007D30  8966               	bsf	_flags& (0+255),4,b
   919  007D32  EF82  F03E         	goto	l2010
   920  007D36                     l2028:
   921                           
   922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
   923  007D36  0E00               	movlw	0
   924  007D38  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
   925  007D3A  0E01               	movlw	1
   926  007D3C  6E4E               	movwf	vfpfcnvrt@done^0,c
   927                           
   928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
   929  007D3E  EFCB  F03E         	goto	l2034
   930  007D42                     l2032:
   931  007D42  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   932  007D46  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   933  007D4A  CFDE FFF6          	movff	postinc2,tblptrl
   934  007D4E  CFDD FFF7          	movff	postdec2,tblptrh
   935  007D52                     	if	0	;tblptru may be non-zero
   936  007D52                     	endif
   937  007D52                     	if	0	;tblptru may be non-zero
   938  007D52                     	endif
   939  007D52  0008               	tblrd		*
   940  007D54  50F5               	movf	tablat,w,c
   941  007D56  6E42               	movwf	??_vfpfcnvrt^0,c
   942  007D58  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
   943                           
   944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   945                           ; Switch size 1, requested type "simple"
   946                           ; Number of cases is 1, Range of values is 0 to 0
   947                           ; switch strategies available:
   948                           ; Name         Instructions Cycles
   949                           ; simple_byte            4     3 (average)
   950                           ;	Chosen strategy is simple_byte
   951  007D5A  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
   952  007D5C  0A00               	xorlw	0	; case 0
   953  007D5E  B4D8               	btfsc	status,2,c
   954  007D60  EFB4  F03E         	goto	l2350
   955  007D64  EF9B  F03E         	goto	l2028
   956  007D68                     l2350:
   957                           
   958                           ; Switch size 1, requested type "simple"
   959                           ; Number of cases is 5, Range of values is 32 to 48
   960                           ; switch strategies available:
   961                           ; Name         Instructions Cycles
   962                           ; simple_byte           16     9 (average)
   963                           ;	Chosen strategy is simple_byte
   964  007D68  5042               	movf	??_vfpfcnvrt^0,w,c
   965  007D6A  0A20               	xorlw	32	; case 32
   966  007D6C  B4D8               	btfsc	status,2,c
   967  007D6E  EF93  F03E         	goto	l2020
   968  007D72  0A03               	xorlw	3	; case 35
   969  007D74  B4D8               	btfsc	status,2,c
   970  007D76  EF97  F03E         	goto	l2024
   971  007D7A  0A08               	xorlw	8	; case 43
   972  007D7C  B4D8               	btfsc	status,2,c
   973  007D7E  EF8F  F03E         	goto	l2016
   974  007D82  0A06               	xorlw	6	; case 45
   975  007D84  B4D8               	btfsc	status,2,c
   976  007D86  EF80  F03E         	goto	l2008
   977  007D8A  0A1D               	xorlw	29	; case 48
   978  007D8C  B4D8               	btfsc	status,2,c
   979  007D8E  EF8B  F03E         	goto	l2012
   980  007D92  EF9B  F03E         	goto	l2028
   981  007D96                     l2034:
   982                           
   983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
   984  007D96  504E               	movf	vfpfcnvrt@done^0,w,c
   985  007D98  104F               	iorwf	(vfpfcnvrt@done+1)^0,w,c
   986  007D9A  B4D8               	btfsc	status,2,c
   987  007D9C  EFD2  F03E         	goto	u1221
   988  007DA0  EFD4  F03E         	goto	u1220
   989  007DA4                     u1221:
   990  007DA4  EFA1  F03E         	goto	l2032
   991  007DA8                     u1220:
   992  007DA8                     
   993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
   994  007DA8  0100               	movlb	0	; () banked
   995  007DAA  A166               	btfss	_flags& (0+255),0,b
   996  007DAC  EFDA  F03E         	goto	u1231
   997  007DB0  EFDC  F03E         	goto	u1230
   998  007DB4                     u1231:
   999  007DB4  EFDD  F03E         	goto	l2038
  1000  007DB8                     u1230:
  1001  007DB8                     
  1002                           ; BSR set to: 0
  1003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1004  007DB8  9366               	bcf	_flags& (0+255),1,b
  1005  007DBA                     l2038:
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1009  007DBA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1010  007DBE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1011  007DC2  CFDE FFF6          	movff	postinc2,tblptrl
  1012  007DC6  CFDD FFF7          	movff	postdec2,tblptrh
  1013  007DCA                     	if	0	;tblptru may be non-zero
  1014  007DCA                     	endif
  1015  007DCA                     	if	0	;tblptru may be non-zero
  1016  007DCA                     	endif
  1017  007DCA  0008               	tblrd		*
  1018  007DCC  50F5               	movf	tablat,w,c
  1019  007DCE  0A2A               	xorlw	42
  1020  007DD0  A4D8               	btfss	status,2,c
  1021  007DD2  EFED  F03E         	goto	u1241
  1022  007DD6  EFEF  F03E         	goto	u1240
  1023  007DDA                     u1241:
  1024  007DDA  EF18  F03F         	goto	l2046
  1025  007DDE                     u1240:
  1026  007DDE                     
  1027                           ; BSR set to: 0
  1028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1029  007DDE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1030  007DE2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1031  007DE6  2ADE               	incf	postinc2,f,c
  1032  007DE8  0E00               	movlw	0
  1033  007DEA  22DD               	addwfc	postdec2,f,c
  1034                           
  1035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1036  007DEC  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1037  007DF0  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1038  007DF4  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1039  007DF8  0E02               	movlw	2
  1040  007DFA  26DE               	addwf	postinc2,f,c
  1041  007DFC  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1042  007E00  0E00               	movlw	0
  1043  007E02  22DD               	addwfc	postdec2,f,c
  1044  007E04  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1045  007E08  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1046  007E0C  CFDE F062          	movff	postinc2,_width
  1047  007E10  CFDD F063          	movff	postdec2,_width+1
  1048  007E14                     
  1049                           ; BSR set to: 0
  1050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1051  007E14  BF63               	btfsc	(_width+1)& (0+255),7,b
  1052  007E16  EF11  F03F         	goto	u1250
  1053  007E1A  EF0F  F03F         	goto	u1251
  1054  007E1E                     u1251:
  1055  007E1E  EF5B  F03F         	goto	l2056
  1056  007E22                     u1250:
  1057  007E22                     
  1058                           ; BSR set to: 0
  1059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1060  007E22  8166               	bsf	_flags& (0+255),0,b
  1061                           
  1062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1063  007E24  6D62               	negf	_width& (0+255),b
  1064  007E26  1F63               	comf	(_width+1)& (0+255),f,b
  1065  007E28  B0D8               	btfsc	status,0,c
  1066  007E2A  2B63               	incf	(_width+1)& (0+255),f,b
  1067  007E2C  EF5B  F03F         	goto	l2056
  1068  007E30                     l2046:
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1072  007E30  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1073  007E34  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1074  007E38  CFDE F008          	movff	postinc2,atoi@s
  1075  007E3C  CFDD F009          	movff	postdec2,atoi@s+1
  1076  007E40  EC8D  F03C         	call	_atoi	;wreg free
  1077  007E44  C008  F062         	movff	?_atoi,_width
  1078  007E48  C009  F063         	movff	?_atoi+1,_width+1
  1079                           
  1080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1081  007E4C  EF2F  F03F         	goto	l2050
  1082  007E50                     l2048:
  1083                           
  1084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1085  007E50  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1086  007E54  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1087  007E58  2ADE               	incf	postinc2,f,c
  1088  007E5A  0E00               	movlw	0
  1089  007E5C  22DD               	addwfc	postdec2,f,c
  1090  007E5E                     l2050:
  1091  007E5E  0ED0               	movlw	208
  1092  007E60  6E42               	movwf	??_vfpfcnvrt^0,c
  1093  007E62  0EFF               	movlw	255
  1094  007E64  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1095  007E66  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1096  007E6A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1097  007E6E  CFDE FFF6          	movff	postinc2,tblptrl
  1098  007E72  CFDD FFF7          	movff	postdec2,tblptrh
  1099  007E76                     	if	0	;tblptru may be non-zero
  1100  007E76                     	endif
  1101  007E76                     	if	0	;tblptru may be non-zero
  1102  007E76                     	endif
  1103  007E76  0008               	tblrd		*
  1104  007E78  50F5               	movf	tablat,w,c
  1105  007E7A  6E44               	movwf	(??_vfpfcnvrt+2)^0,c
  1106  007E7C  6A45               	clrf	(??_vfpfcnvrt+3)^0,c
  1107  007E7E  5042               	movf	??_vfpfcnvrt^0,w,c
  1108  007E80  2644               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1109  007E82  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1110  007E84  2245               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1111  007E86  5045               	movf	(??_vfpfcnvrt+3)^0,w,c
  1112  007E88  E10A               	bnz	u1260
  1113  007E8A  0E0A               	movlw	10
  1114  007E8C  5C44               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1115  007E8E  A0D8               	btfss	status,0,c
  1116  007E90  EF4C  F03F         	goto	u1261
  1117  007E94  EF4F  F03F         	goto	u1260
  1118  007E98                     u1261:
  1119  007E98  0E01               	movlw	1
  1120  007E9A  EF50  F03F         	goto	u1270
  1121  007E9E                     u1260:
  1122  007E9E  0E00               	movlw	0
  1123  007EA0                     u1270:
  1124  007EA0  6E50               	movwf	_vfpfcnvrt$523^0,c
  1125  007EA2  6A51               	clrf	(_vfpfcnvrt$523+1)^0,c
  1126  007EA4  5050               	movf	_vfpfcnvrt$523^0,w,c
  1127  007EA6  1051               	iorwf	(_vfpfcnvrt$523+1)^0,w,c
  1128  007EA8  A4D8               	btfss	status,2,c
  1129  007EAA  EF59  F03F         	goto	u1281
  1130  007EAE  EF5B  F03F         	goto	u1280
  1131  007EB2                     u1281:
  1132  007EB2  EF28  F03F         	goto	l2048
  1133  007EB6                     u1280:
  1134  007EB6                     l2056:
  1135                           
  1136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1137  007EB6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1138  007EBA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1139  007EBE  CFDE FFF6          	movff	postinc2,tblptrl
  1140  007EC2  CFDD FFF7          	movff	postdec2,tblptrh
  1141  007EC6                     	if	0	;tblptru may be non-zero
  1142  007EC6                     	endif
  1143  007EC6                     	if	0	;tblptru may be non-zero
  1144  007EC6                     	endif
  1145  007EC6  0008               	tblrd		*
  1146  007EC8  50F5               	movf	tablat,w,c
  1147  007ECA  0A75               	xorlw	117
  1148  007ECC  A4D8               	btfss	status,2,c
  1149  007ECE  EF6B  F03F         	goto	u1291
  1150  007ED2  EF6D  F03F         	goto	u1290
  1151  007ED6                     u1291:
  1152  007ED6  EFAE  F03F         	goto	l2064
  1153  007EDA                     u1290:
  1154  007EDA                     
  1155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1156  007EDA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1157  007EDE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1158  007EE2  2ADE               	incf	postinc2,f,c
  1159  007EE4  0E00               	movlw	0
  1160  007EE6  22DD               	addwfc	postdec2,f,c
  1161                           
  1162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1163  007EE8  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1164  007EEC  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1165  007EF0  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1166  007EF4  0E02               	movlw	2
  1167  007EF6  26DE               	addwf	postinc2,f,c
  1168  007EF8  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1169  007EFC  0E00               	movlw	0
  1170  007EFE  22DD               	addwfc	postdec2,f,c
  1171  007F00  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1172  007F04  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1173  007F08  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  1174  007F0C  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  1175  007F10  C044  F046         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1176  007F14  C045  F047         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1177  007F18  6A48               	clrf	(vfpfcnvrt@llu+2)^0,c
  1178  007F1A  6A49               	clrf	(vfpfcnvrt@llu+3)^0,c
  1179  007F1C  6A4A               	clrf	(vfpfcnvrt@llu+4)^0,c
  1180  007F1E  6A4B               	clrf	(vfpfcnvrt@llu+5)^0,c
  1181  007F20  6A4C               	clrf	(vfpfcnvrt@llu+6)^0,c
  1182  007F22  6A4D               	clrf	(vfpfcnvrt@llu+7)^0,c
  1183  007F24                     
  1184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1185  007F24  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  1186  007F28  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1187  007F2C  C046  F01E         	movff	vfpfcnvrt@llu,utoa@d
  1188  007F30  C047  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1189  007F34  C048  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1190  007F38  C049  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1191  007F3C  C04A  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1192  007F40  C04B  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1193  007F44  C04C  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1194  007F48  C04D  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1195  007F4C  EC55  F03D         	call	_utoa	;wreg free
  1196  007F50  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  1197  007F54  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  1198  007F58  EFFF  F03F         	goto	l306
  1199  007F5C                     l2064:
  1200                           
  1201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1202  007F5C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1203  007F60  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1204  007F64  CFDE FFF6          	movff	postinc2,tblptrl
  1205  007F68  CFDD FFF7          	movff	postdec2,tblptrh
  1206  007F6C                     	if	0	;tblptru may be non-zero
  1207  007F6C                     	endif
  1208  007F6C                     	if	0	;tblptru may be non-zero
  1209  007F6C                     	endif
  1210  007F6C  0008               	tblrd		*
  1211  007F6E  50F5               	movf	tablat,w,c
  1212  007F70  0A25               	xorlw	37
  1213  007F72  A4D8               	btfss	status,2,c
  1214  007F74  EFBE  F03F         	goto	u1301
  1215  007F78  EFC0  F03F         	goto	u1300
  1216  007F7C                     u1301:
  1217  007F7C  EFD7  F03F         	goto	l2074
  1218  007F80                     u1300:
  1219  007F80                     
  1220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1221  007F80  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1222  007F84  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1223  007F88  2ADE               	incf	postinc2,f,c
  1224  007F8A  0E00               	movlw	0
  1225  007F8C  22DD               	addwfc	postdec2,f,c
  1226  007F8E                     
  1227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1228  007F8E  0E00               	movlw	0
  1229  007F90  6E02               	movwf	(fputc@c+1)^0,c
  1230  007F92  0E25               	movlw	37
  1231  007F94  6E01               	movwf	fputc@c^0,c
  1232  007F96  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1233  007F9A  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1234  007F9E  EC23  F03A         	call	_fputc	;wreg free
  1235  007FA2                     l2070:
  1236                           
  1237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1238  007FA2  0E00               	movlw	0
  1239  007FA4  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1240  007FA6  0E01               	movlw	1
  1241  007FA8  6E3C               	movwf	?_vfpfcnvrt^0,c
  1242  007FAA  EFFF  F03F         	goto	l306
  1243  007FAE                     l2074:
  1244                           
  1245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1246  007FAE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1247  007FB2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1248  007FB6  2ADE               	incf	postinc2,f,c
  1249  007FB8  0E00               	movlw	0
  1250  007FBA  22DD               	addwfc	postdec2,f,c
  1251  007FBC                     
  1252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1253  007FBC  0E00               	movlw	0
  1254  007FBE  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1255  007FC0  0E00               	movlw	0
  1256  007FC2  6E3C               	movwf	?_vfpfcnvrt^0,c
  1257  007FC4  EFFF  F03F         	goto	l306
  1258  007FC8                     l2080:
  1259                           
  1260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1261  007FC8  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1262  007FCC  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1263  007FD0  CFDE FFF6          	movff	postinc2,tblptrl
  1264  007FD4  CFDD FFF7          	movff	postdec2,tblptrh
  1265  007FD8                     	if	0	;tblptru may be non-zero
  1266  007FD8                     	endif
  1267  007FD8                     	if	0	;tblptru may be non-zero
  1268  007FD8                     	endif
  1269  007FD8  0008               	tblrd		*
  1270  007FDA  50F5               	movf	tablat,w,c
  1271  007FDC  6E01               	movwf	fputc@c^0,c
  1272  007FDE  6A02               	clrf	(fputc@c+1)^0,c
  1273  007FE0  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1274  007FE4  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1275  007FE8  EC23  F03A         	call	_fputc	;wreg free
  1276  007FEC                     
  1277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1278  007FEC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1279  007FF0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1280  007FF4  2ADE               	incf	postinc2,f,c
  1281  007FF6  0E00               	movlw	0
  1282  007FF8  22DD               	addwfc	postdec2,f,c
  1283  007FFA  EFD1  F03F         	goto	l2070
  1284  007FFE                     l306:
  1285  007FFE  0012               	return		;funcret
  1286  008000                     __end_of_vfpfcnvrt:
  1287                           	opt callstack 0
  1288                           
  1289 ;; *************** function _utoa *****************
  1290 ;; Defined at:
  1291 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1294 ;;		 -> sprintf@f(6), 
  1295 ;;  d               8   29[COMRAM] unsigned long long 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  n               8   49[COMRAM] unsigned long long 
  1298 ;;  i               2   57[COMRAM] int 
  1299 ;;  w               2   47[COMRAM] int 
  1300 ;;  p               2   45[COMRAM] int 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  2   27[COMRAM] int 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1310 ;;      Params:        10       0       0       0       0       0       0       0       0
  1311 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1312 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1313 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1314 ;;Total ram usage:       32 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    4
  1317 ;; This function calls:
  1318 ;;		___lodiv
  1319 ;;		___lomod
  1320 ;;		_pad
  1321 ;; This function is called by:
  1322 ;;		_vfpfcnvrt
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text4
  1327  007AAA                     __ptext4:
  1328                           	opt callstack 0
  1329  007AAA                     _utoa:
  1330                           	opt callstack 23
  1331  007AAA                     
  1332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1333  007AAA  0100               	movlb	0	; () banked
  1334  007AAC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1335  007AAE  EF5B  F03D         	goto	u1051
  1336  007AB2  EF5D  F03D         	goto	u1050
  1337  007AB6                     u1051:
  1338  007AB6  EF5E  F03D         	goto	l1814
  1339  007ABA                     u1050:
  1340  007ABA                     
  1341                           ; BSR set to: 0
  1342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1343  007ABA  9366               	bcf	_flags& (0+255),1,b
  1344  007ABC                     l1814:
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1348  007ABC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1349  007ABE  EF6B  F03D         	goto	u1060
  1350  007AC2  5165               	movf	(_prec+1)& (0+255),w,b
  1351  007AC4  E106               	bnz	u1061
  1352  007AC6  0564               	decf	_prec& (0+255),w,b
  1353  007AC8  B0D8               	btfsc	status,0,c
  1354  007ACA  EF69  F03D         	goto	u1061
  1355  007ACE  EF6B  F03D         	goto	u1060
  1356  007AD2                     u1061:
  1357  007AD2  EF71  F03D         	goto	l269
  1358  007AD6                     u1060:
  1359  007AD6                     
  1360                           ; BSR set to: 0
  1361  007AD6  0E00               	movlw	0
  1362  007AD8  6E2F               	movwf	(utoa@p+1)^0,c
  1363  007ADA  0E01               	movlw	1
  1364  007ADC  6E2E               	movwf	utoa@p^0,c
  1365  007ADE  EF75  F03D         	goto	l271
  1366  007AE2                     l269:
  1367                           
  1368                           ; BSR set to: 0
  1369  007AE2  C064  F02E         	movff	_prec,utoa@p
  1370  007AE6  C065  F02F         	movff	_prec+1,utoa@p+1
  1371  007AEA                     l271:
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1375  007AEA  C062  F030         	movff	_width,utoa@w
  1376  007AEE  C063  F031         	movff	_width+1,utoa@w+1
  1377                           
  1378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1379  007AF2  C01E  F032         	movff	utoa@d,utoa@n
  1380  007AF6  C01F  F033         	movff	utoa@d+1,utoa@n+1
  1381  007AFA  C020  F034         	movff	utoa@d+2,utoa@n+2
  1382  007AFE  C021  F035         	movff	utoa@d+3,utoa@n+3
  1383  007B02  C022  F036         	movff	utoa@d+4,utoa@n+4
  1384  007B06  C023  F037         	movff	utoa@d+5,utoa@n+5
  1385  007B0A  C024  F038         	movff	utoa@d+6,utoa@n+6
  1386  007B0E  C025  F039         	movff	utoa@d+7,utoa@n+7
  1387  007B12                     
  1388                           ; BSR set to: 0
  1389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1390  007B12  0E00               	movlw	0
  1391  007B14  6E3B               	movwf	(utoa@i+1)^0,c
  1392  007B16  0E1F               	movlw	31
  1393  007B18  6E3A               	movwf	utoa@i^0,c
  1394  007B1A                     
  1395                           ; BSR set to: 0
  1396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1397  007B1A  0E00               	movlw	0
  1398  007B1C  6F87               	movwf	(_dbuf+31)& (0+255),b
  1399                           
  1400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1401  007B1E  EF07  F03E         	goto	l1832
  1402  007B22                     l1822:
  1403                           
  1404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1405  007B22  063A               	decf	utoa@i^0,f,c
  1406  007B24  A0D8               	btfss	status,0,c
  1407  007B26  063B               	decf	(utoa@i+1)^0,f,c
  1408  007B28                     
  1409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1410  007B28  0E68               	movlw	low _dbuf
  1411  007B2A  243A               	addwf	utoa@i^0,w,c
  1412  007B2C  6ED9               	movwf	fsr2l,c
  1413  007B2E  0E00               	movlw	high _dbuf
  1414  007B30  203B               	addwfc	(utoa@i+1)^0,w,c
  1415  007B32  6EDA               	movwf	fsr2h,c
  1416  007B34  C032  F001         	movff	utoa@n,___lomod@dividend
  1417  007B38  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  1418  007B3C  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  1419  007B40  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  1420  007B44  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  1421  007B48  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  1422  007B4C  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  1423  007B50  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  1424  007B54  0E0A               	movlw	10
  1425  007B56  6E09               	movwf	___lomod@divisor^0,c
  1426  007B58  0E00               	movlw	0
  1427  007B5A  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1428  007B5C  0E00               	movlw	0
  1429  007B5E  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1430  007B60  0E00               	movlw	0
  1431  007B62  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1432  007B64  0E00               	movlw	0
  1433  007B66  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1434  007B68  0E00               	movlw	0
  1435  007B6A  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1436  007B6C  0E00               	movlw	0
  1437  007B6E  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1438  007B70  0E00               	movlw	0
  1439  007B72  6E10               	movwf	(___lomod@divisor+7)^0,c
  1440  007B74  EC88  F03A         	call	___lomod	;wreg free
  1441  007B78  C001  F026         	movff	?___lomod,??_utoa
  1442  007B7C  C002  F027         	movff	?___lomod+1,??_utoa+1
  1443  007B80  C003  F028         	movff	?___lomod+2,??_utoa+2
  1444  007B84  C004  F029         	movff	?___lomod+3,??_utoa+3
  1445  007B88  C005  F02A         	movff	?___lomod+4,??_utoa+4
  1446  007B8C  C006  F02B         	movff	?___lomod+5,??_utoa+5
  1447  007B90  C007  F02C         	movff	?___lomod+6,??_utoa+6
  1448  007B94  C008  F02D         	movff	?___lomod+7,??_utoa+7
  1449  007B98  5026               	movf	??_utoa^0,w,c
  1450  007B9A  0F30               	addlw	48
  1451  007B9C  6EDF               	movwf	indf2,c
  1452  007B9E                     
  1453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  1454  007B9E  062E               	decf	utoa@p^0,f,c
  1455  007BA0  A0D8               	btfss	status,0,c
  1456  007BA2  062F               	decf	(utoa@p+1)^0,f,c
  1457  007BA4                     
  1458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  1459  007BA4  0630               	decf	utoa@w^0,f,c
  1460  007BA6  A0D8               	btfss	status,0,c
  1461  007BA8  0631               	decf	(utoa@w+1)^0,f,c
  1462  007BAA                     
  1463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  1464  007BAA  C032  F001         	movff	utoa@n,___lodiv@dividend
  1465  007BAE  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1466  007BB2  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1467  007BB6  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1468  007BBA  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1469  007BBE  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1470  007BC2  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1471  007BC6  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1472  007BCA  0E0A               	movlw	10
  1473  007BCC  6E09               	movwf	___lodiv@divisor^0,c
  1474  007BCE  0E00               	movlw	0
  1475  007BD0  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1476  007BD2  0E00               	movlw	0
  1477  007BD4  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1478  007BD6  0E00               	movlw	0
  1479  007BD8  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1480  007BDA  0E00               	movlw	0
  1481  007BDC  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1482  007BDE  0E00               	movlw	0
  1483  007BE0  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1484  007BE2  0E00               	movlw	0
  1485  007BE4  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1486  007BE6  0E00               	movlw	0
  1487  007BE8  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1488  007BEA  ECF0  F03A         	call	___lodiv	;wreg free
  1489  007BEE  C001  F032         	movff	?___lodiv,utoa@n
  1490  007BF2  C002  F033         	movff	?___lodiv+1,utoa@n+1
  1491  007BF6  C003  F034         	movff	?___lodiv+2,utoa@n+2
  1492  007BFA  C004  F035         	movff	?___lodiv+3,utoa@n+3
  1493  007BFE  C005  F036         	movff	?___lodiv+4,utoa@n+4
  1494  007C02  C006  F037         	movff	?___lodiv+5,utoa@n+5
  1495  007C06  C007  F038         	movff	?___lodiv+6,utoa@n+6
  1496  007C0A  C008  F039         	movff	?___lodiv+7,utoa@n+7
  1497  007C0E                     l1832:
  1498                           
  1499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1500  007C0E  503A               	movf	utoa@i^0,w,c
  1501  007C10  103B               	iorwf	(utoa@i+1)^0,w,c
  1502  007C12  B4D8               	btfsc	status,2,c
  1503  007C14  EF0E  F03E         	goto	u1071
  1504  007C18  EF10  F03E         	goto	u1070
  1505  007C1C                     u1071:
  1506  007C1C  EF41  F03E         	goto	l1842
  1507  007C20                     u1070:
  1508  007C20  5032               	movf	utoa@n^0,w,c
  1509  007C22  1033               	iorwf	(utoa@n+1)^0,w,c
  1510  007C24  1034               	iorwf	(utoa@n+2)^0,w,c
  1511  007C26  1035               	iorwf	(utoa@n+3)^0,w,c
  1512  007C28  1036               	iorwf	(utoa@n+4)^0,w,c
  1513  007C2A  1037               	iorwf	(utoa@n+5)^0,w,c
  1514  007C2C  1038               	iorwf	(utoa@n+6)^0,w,c
  1515  007C2E  1039               	iorwf	(utoa@n+7)^0,w,c
  1516  007C30  A4D8               	btfss	status,2,c
  1517  007C32  EF1D  F03E         	goto	u1081
  1518  007C36  EF1F  F03E         	goto	u1080
  1519  007C3A                     u1081:
  1520  007C3A  EF91  F03D         	goto	l1822
  1521  007C3E                     u1080:
  1522  007C3E  BE2F               	btfsc	(utoa@p+1)^0,7,c
  1523  007C40  EF2C  F03E         	goto	u1090
  1524  007C44  502F               	movf	(utoa@p+1)^0,w,c
  1525  007C46  E106               	bnz	u1091
  1526  007C48  042E               	decf	utoa@p^0,w,c
  1527  007C4A  B0D8               	btfsc	status,0,c
  1528  007C4C  EF2A  F03E         	goto	u1091
  1529  007C50  EF2C  F03E         	goto	u1090
  1530  007C54                     u1091:
  1531  007C54  EF91  F03D         	goto	l1822
  1532  007C58                     u1090:
  1533  007C58  BE31               	btfsc	(utoa@w+1)^0,7,c
  1534  007C5A  EF37  F03E         	goto	u1101
  1535  007C5E  5031               	movf	(utoa@w+1)^0,w,c
  1536  007C60  E108               	bnz	u1100
  1537  007C62  0430               	decf	utoa@w^0,w,c
  1538  007C64  A0D8               	btfss	status,0,c
  1539  007C66  EF37  F03E         	goto	u1101
  1540  007C6A  EF39  F03E         	goto	u1100
  1541  007C6E                     u1101:
  1542  007C6E  EF41  F03E         	goto	l1842
  1543  007C72                     u1100:
  1544  007C72  0100               	movlb	0	; () banked
  1545  007C74  B366               	btfsc	_flags& (0+255),1,b
  1546  007C76  EF3F  F03E         	goto	u1111
  1547  007C7A  EF41  F03E         	goto	u1110
  1548  007C7E                     u1111:
  1549  007C7E  EF91  F03D         	goto	l1822
  1550  007C82                     u1110:
  1551  007C82                     l1842:
  1552                           
  1553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  1554  007C82  C01C  F011         	movff	utoa@fp,pad@fp
  1555  007C86  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  1556  007C8A  0E68               	movlw	low _dbuf
  1557  007C8C  243A               	addwf	utoa@i^0,w,c
  1558  007C8E  6E13               	movwf	pad@buf^0,c
  1559  007C90  0E00               	movlw	high _dbuf
  1560  007C92  203B               	addwfc	(utoa@i+1)^0,w,c
  1561  007C94  6E14               	movwf	(pad@buf+1)^0,c
  1562  007C96  C030  F015         	movff	utoa@w,pad@p
  1563  007C9A  C031  F016         	movff	utoa@w+1,pad@p+1
  1564  007C9E  ECC0  F039         	call	_pad	;wreg free
  1565  007CA2  C011  F01C         	movff	?_pad,?_utoa
  1566  007CA6  C012  F01D         	movff	?_pad+1,?_utoa+1
  1567  007CAA  0012               	return		;funcret
  1568  007CAC                     __end_of_utoa:
  1569                           	opt callstack 0
  1570                           
  1571 ;; *************** function _pad *****************
  1572 ;; Defined at:
  1573 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1576 ;;		 -> sprintf@f(6), 
  1577 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1578 ;;		 -> dbuf(32), 
  1579 ;;  p               2   20[COMRAM] int 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  w               2   25[COMRAM] int 
  1582 ;;  i               2   23[COMRAM] int 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  2   16[COMRAM] int 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1592 ;;      Params:         6       0       0       0       0       0       0       0       0
  1593 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1594 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1595 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1596 ;;Total ram usage:       11 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    3
  1599 ;; This function calls:
  1600 ;;		_fputc
  1601 ;;		_fputs
  1602 ;;		_strlen
  1603 ;; This function is called by:
  1604 ;;		_utoa
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text5
  1609  007380                     __ptext5:
  1610                           	opt callstack 0
  1611  007380                     _pad:
  1612                           	opt callstack 23
  1613  007380                     
  1614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1615  007380  0100               	movlb	0	; () banked
  1616  007382  A166               	btfss	_flags& (0+255),0,b
  1617  007384  EFC6  F039         	goto	u891
  1618  007388  EFC8  F039         	goto	u890
  1619  00738C                     u891:
  1620  00738C  EFD2  F039         	goto	l1724
  1621  007390                     u890:
  1622  007390                     
  1623                           ; BSR set to: 0
  1624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1625  007390  C013  F00A         	movff	pad@buf,fputs@s
  1626  007394  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1627  007398  C011  F00C         	movff	pad@fp,fputs@fp
  1628  00739C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1629  0073A0  EC6F  F038         	call	_fputs	;wreg free
  1630  0073A4                     l1724:
  1631                           
  1632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1633  0073A4  BE16               	btfsc	(pad@p+1)^0,7,c
  1634  0073A6  EFD7  F039         	goto	u901
  1635  0073AA  EFD9  F039         	goto	u900
  1636  0073AE                     u901:
  1637  0073AE  EFDF  F039         	goto	l1728
  1638  0073B2                     u900:
  1639  0073B2  C015  F01A         	movff	pad@p,pad@w
  1640  0073B6  C016  F01B         	movff	pad@p+1,pad@w+1
  1641  0073BA  EFE3  F039         	goto	l259
  1642  0073BE                     l1728:
  1643  0073BE  0E00               	movlw	0
  1644  0073C0  6E1B               	movwf	(pad@w+1)^0,c
  1645  0073C2  0E00               	movlw	0
  1646  0073C4  6E1A               	movwf	pad@w^0,c
  1647  0073C6                     l259:
  1648                           
  1649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1650  0073C6  0E00               	movlw	0
  1651  0073C8  6E19               	movwf	(pad@i+1)^0,c
  1652  0073CA  0E00               	movlw	0
  1653  0073CC  6E18               	movwf	pad@i^0,c
  1654                           
  1655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1656  0073CE  EFF5  F039         	goto	l1734
  1657  0073D2                     l1730:
  1658                           
  1659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1660  0073D2  0E00               	movlw	0
  1661  0073D4  6E02               	movwf	(fputc@c+1)^0,c
  1662  0073D6  0E20               	movlw	32
  1663  0073D8  6E01               	movwf	fputc@c^0,c
  1664  0073DA  C011  F003         	movff	pad@fp,fputc@fp
  1665  0073DE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1666  0073E2  EC23  F03A         	call	_fputc	;wreg free
  1667  0073E6                     
  1668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1669  0073E6  4A18               	infsnz	pad@i^0,f,c
  1670  0073E8  2A19               	incf	(pad@i+1)^0,f,c
  1671  0073EA                     l1734:
  1672                           
  1673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1674  0073EA  501A               	movf	pad@w^0,w,c
  1675  0073EC  5C18               	subwf	pad@i^0,w,c
  1676  0073EE  5019               	movf	(pad@i+1)^0,w,c
  1677  0073F0  0A80               	xorlw	128
  1678  0073F2  6E17               	movwf	??_pad^0,c
  1679  0073F4  501B               	movf	(pad@w+1)^0,w,c
  1680  0073F6  0A80               	xorlw	128
  1681  0073F8  5817               	subwfb	??_pad^0,w,c
  1682  0073FA  A0D8               	btfss	status,0,c
  1683  0073FC  EF02  F03A         	goto	u911
  1684  007400  EF04  F03A         	goto	u910
  1685  007404                     u911:
  1686  007404  EFE9  F039         	goto	l1730
  1687  007408                     u910:
  1688  007408                     
  1689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1690  007408  0100               	movlb	0	; () banked
  1691  00740A  B166               	btfsc	_flags& (0+255),0,b
  1692  00740C  EF0A  F03A         	goto	u921
  1693  007410  EF0C  F03A         	goto	u920
  1694  007414                     u921:
  1695  007414  EF16  F03A         	goto	l1738
  1696  007418                     u920:
  1697  007418                     
  1698                           ; BSR set to: 0
  1699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1700  007418  C013  F00A         	movff	pad@buf,fputs@s
  1701  00741C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1702  007420  C011  F00C         	movff	pad@fp,fputs@fp
  1703  007424  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1704  007428  EC6F  F038         	call	_fputs	;wreg free
  1705  00742C                     l1738:
  1706                           
  1707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1708  00742C  C013  F001         	movff	pad@buf,strlen@s
  1709  007430  C014  F002         	movff	pad@buf+1,strlen@s+1
  1710  007434  ECB7  F037         	call	_strlen	;wreg free
  1711  007438  501A               	movf	pad@w^0,w,c
  1712  00743A  2401               	addwf	?_strlen^0,w,c
  1713  00743C  6E11               	movwf	?_pad^0,c
  1714  00743E  501B               	movf	(pad@w+1)^0,w,c
  1715  007440  2002               	addwfc	(?_strlen+1)^0,w,c
  1716  007442  6E12               	movwf	(?_pad+1)^0,c
  1717  007444  0012               	return		;funcret
  1718  007446                     __end_of_pad:
  1719                           	opt callstack 0
  1720                           
  1721 ;; *************** function _strlen *****************
  1722 ;; Defined at:
  1723 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1726 ;;		 -> dbuf(32), 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1729 ;;		 -> dbuf(32), 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  2    0[COMRAM] unsigned int 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1739 ;;      Params:         2       0       0       0       0       0       0       0       0
  1740 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1742 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1743 ;;Total ram usage:        4 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_pad
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text6
  1753  006F6E                     __ptext6:
  1754                           	opt callstack 0
  1755  006F6E                     _strlen:
  1756                           	opt callstack 25
  1757  006F6E  C001  F003         	movff	strlen@s,strlen@a
  1758  006F72  C002  F004         	movff	strlen@s+1,strlen@a+1
  1759  006F76  EFBF  F037         	goto	l1714
  1760  006F7A                     l1712:
  1761  006F7A  4A01               	infsnz	strlen@s^0,f,c
  1762  006F7C  2A02               	incf	(strlen@s+1)^0,f,c
  1763  006F7E                     l1714:
  1764  006F7E  C001  FFD9         	movff	strlen@s,fsr2l
  1765  006F82  C002  FFDA         	movff	strlen@s+1,fsr2h
  1766  006F86  50DF               	movf	indf2,w,c
  1767  006F88  A4D8               	btfss	status,2,c
  1768  006F8A  EFC9  F037         	goto	u881
  1769  006F8E  EFCB  F037         	goto	u880
  1770  006F92                     u881:
  1771  006F92  EFBD  F037         	goto	l1712
  1772  006F96                     u880:
  1773  006F96  5003               	movf	strlen@a^0,w,c
  1774  006F98  5C01               	subwf	strlen@s^0,w,c
  1775  006F9A  6E01               	movwf	?_strlen^0,c
  1776  006F9C  5004               	movf	(strlen@a+1)^0,w,c
  1777  006F9E  5802               	subwfb	(strlen@s+1)^0,w,c
  1778  006FA0  6E02               	movwf	(?_strlen+1)^0,c
  1779  006FA2  0012               	return		;funcret
  1780  006FA4                     __end_of_strlen:
  1781                           	opt callstack 0
  1782                           
  1783 ;; *************** function _fputs *****************
  1784 ;; Defined at:
  1785 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1788 ;;		 -> dbuf(32), 
  1789 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1790 ;;		 -> sprintf@f(6), 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  i               2   14[COMRAM] int 
  1793 ;;  c               1   13[COMRAM] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  2    9[COMRAM] int 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1803 ;;      Params:         4       0       0       0       0       0       0       0       0
  1804 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1806 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1807 ;;Total ram usage:        7 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    2
  1810 ;; This function calls:
  1811 ;;		_fputc
  1812 ;; This function is called by:
  1813 ;;		_pad
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text7
  1818  0070DE                     __ptext7:
  1819                           	opt callstack 0
  1820  0070DE                     _fputs:
  1821                           	opt callstack 23
  1822  0070DE  0E00               	movlw	0
  1823  0070E0  6E10               	movwf	(fputs@i+1)^0,c
  1824  0070E2  0E00               	movlw	0
  1825  0070E4  6E0F               	movwf	fputs@i^0,c
  1826  0070E6  EF80  F038         	goto	l1708
  1827  0070EA                     l1704:
  1828  0070EA  C00E  F001         	movff	fputs@c,fputc@c
  1829  0070EE  6A02               	clrf	(fputc@c+1)^0,c
  1830  0070F0  C00C  F003         	movff	fputs@fp,fputc@fp
  1831  0070F4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1832  0070F8  EC23  F03A         	call	_fputc	;wreg free
  1833  0070FC  4A0F               	infsnz	fputs@i^0,f,c
  1834  0070FE  2A10               	incf	(fputs@i+1)^0,f,c
  1835  007100                     l1708:
  1836  007100  500F               	movf	fputs@i^0,w,c
  1837  007102  240A               	addwf	fputs@s^0,w,c
  1838  007104  6ED9               	movwf	fsr2l,c
  1839  007106  5010               	movf	(fputs@i+1)^0,w,c
  1840  007108  200B               	addwfc	(fputs@s+1)^0,w,c
  1841  00710A  6EDA               	movwf	fsr2h,c
  1842  00710C  50DF               	movf	indf2,w,c
  1843  00710E  6E0E               	movwf	fputs@c^0,c
  1844  007110  500E               	movf	fputs@c^0,w,c
  1845  007112  A4D8               	btfss	status,2,c
  1846  007114  EF8E  F038         	goto	u871
  1847  007118  EF90  F038         	goto	u870
  1848  00711C                     u871:
  1849  00711C  EF75  F038         	goto	l1704
  1850  007120                     u870:
  1851  007120  0012               	return		;funcret
  1852  007122                     __end_of_fputs:
  1853                           	opt callstack 0
  1854                           
  1855 ;; *************** function _fputc *****************
  1856 ;; Defined at:
  1857 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  c               2    0[COMRAM] int 
  1860 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1861 ;;		 -> sprintf@f(6), 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  2    0[COMRAM] int 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1873 ;;      Params:         4       0       0       0       0       0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1875 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1876 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1877 ;;Total ram usage:        9 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    1
  1880 ;; This function calls:
  1881 ;;		_putch
  1882 ;; This function is called by:
  1883 ;;		_pad
  1884 ;;		_vfpfcnvrt
  1885 ;;		_fputs
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text8
  1890  007446                     __ptext8:
  1891                           	opt callstack 0
  1892  007446                     _fputc:
  1893                           	opt callstack 23
  1894  007446  5003               	movf	fputc@fp^0,w,c
  1895  007448  1004               	iorwf	(fputc@fp+1)^0,w,c
  1896  00744A  B4D8               	btfsc	status,2,c
  1897  00744C  EF2A  F03A         	goto	u831
  1898  007450  EF2C  F03A         	goto	u830
  1899  007454                     u831:
  1900  007454  EF35  F03A         	goto	l1692
  1901  007458                     u830:
  1902  007458  5003               	movf	fputc@fp^0,w,c
  1903  00745A  1004               	iorwf	(fputc@fp+1)^0,w,c
  1904  00745C  A4D8               	btfss	status,2,c
  1905  00745E  EF33  F03A         	goto	u841
  1906  007462  EF35  F03A         	goto	u840
  1907  007466                     u841:
  1908  007466  EF3A  F03A         	goto	l1694
  1909  00746A                     u840:
  1910  00746A                     l1692:
  1911  00746A  5001               	movf	fputc@c^0,w,c
  1912  00746C  EC50  F037         	call	_putch
  1913  007470  EF87  F03A         	goto	l1044
  1914  007474                     l1694:
  1915  007474  EE20 F004          	lfsr	2,4
  1916  007478  5003               	movf	fputc@fp^0,w,c
  1917  00747A  26D9               	addwf	fsr2l,f,c
  1918  00747C  5004               	movf	(fputc@fp+1)^0,w,c
  1919  00747E  22DA               	addwfc	fsr2h,f,c
  1920  007480  50DE               	movf	postinc2,w,c
  1921  007482  10DE               	iorwf	postinc2,w,c
  1922  007484  B4D8               	btfsc	status,2,c
  1923  007486  EF47  F03A         	goto	u851
  1924  00748A  EF49  F03A         	goto	u850
  1925  00748E                     u851:
  1926  00748E  EF64  F03A         	goto	l1698
  1927  007492                     u850:
  1928  007492  EE20 F004          	lfsr	2,4
  1929  007496  5003               	movf	fputc@fp^0,w,c
  1930  007498  26D9               	addwf	fsr2l,f,c
  1931  00749A  5004               	movf	(fputc@fp+1)^0,w,c
  1932  00749C  22DA               	addwfc	fsr2h,f,c
  1933  00749E  EE10 F002          	lfsr	1,2
  1934  0074A2  5003               	movf	fputc@fp^0,w,c
  1935  0074A4  26E1               	addwf	fsr1l,f,c
  1936  0074A6  5004               	movf	(fputc@fp+1)^0,w,c
  1937  0074A8  22E2               	addwfc	fsr1h,f,c
  1938  0074AA  50DE               	movf	postinc2,w,c
  1939  0074AC  5CE6               	subwf	postinc1,w,c
  1940  0074AE  50E6               	movf	postinc1,w,c
  1941  0074B0  0A80               	xorlw	128
  1942  0074B2  6E09               	movwf	(??_fputc+4)^0,c
  1943  0074B4  50DE               	movf	postinc2,w,c
  1944  0074B6  0A80               	xorlw	128
  1945  0074B8  5809               	subwfb	(??_fputc+4)^0,w,c
  1946  0074BA  B0D8               	btfsc	status,0,c
  1947  0074BC  EF62  F03A         	goto	u861
  1948  0074C0  EF64  F03A         	goto	u860
  1949  0074C4                     u861:
  1950  0074C4  EF87  F03A         	goto	l1044
  1951  0074C8                     u860:
  1952  0074C8                     l1698:
  1953  0074C8  EE20 F002          	lfsr	2,2
  1954  0074CC  5003               	movf	fputc@fp^0,w,c
  1955  0074CE  26D9               	addwf	fsr2l,f,c
  1956  0074D0  5004               	movf	(fputc@fp+1)^0,w,c
  1957  0074D2  22DA               	addwfc	fsr2h,f,c
  1958  0074D4  CFDE F005          	movff	postinc2,??_fputc
  1959  0074D8  CFDD F006          	movff	postdec2,??_fputc+1
  1960  0074DC  C003  FFD9         	movff	fputc@fp,fsr2l
  1961  0074E0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1962  0074E4  CFDE F007          	movff	postinc2,??_fputc+2
  1963  0074E8  CFDD F008          	movff	postdec2,??_fputc+3
  1964  0074EC  5005               	movf	??_fputc^0,w,c
  1965  0074EE  2407               	addwf	(??_fputc+2)^0,w,c
  1966  0074F0  6ED9               	movwf	fsr2l,c
  1967  0074F2  5006               	movf	(??_fputc+1)^0,w,c
  1968  0074F4  2008               	addwfc	(??_fputc+3)^0,w,c
  1969  0074F6  6EDA               	movwf	fsr2h,c
  1970  0074F8  C001  FFDF         	movff	fputc@c,indf2
  1971  0074FC  EE20 F002          	lfsr	2,2
  1972  007500  5003               	movf	fputc@fp^0,w,c
  1973  007502  26D9               	addwf	fsr2l,f,c
  1974  007504  5004               	movf	(fputc@fp+1)^0,w,c
  1975  007506  22DA               	addwfc	fsr2h,f,c
  1976  007508  2ADE               	incf	postinc2,f,c
  1977  00750A  0E00               	movlw	0
  1978  00750C  22DD               	addwfc	postdec2,f,c
  1979  00750E                     l1044:
  1980  00750E  0012               	return		;funcret
  1981  007510                     __end_of_fputc:
  1982                           	opt callstack 0
  1983                           
  1984 ;; *************** function _putch *****************
  1985 ;; Defined at:
  1986 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  c               1    wreg     unsigned char 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  c               1    0[COMRAM] unsigned char 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2000 ;;      Params:         0       0       0       0       0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2003 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_fputc
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text9
  2014  006EA0                     __ptext9:
  2015                           	opt callstack 0
  2016  006EA0                     _putch:
  2017                           	opt callstack 23
  2018  006EA0  0012               	return		;funcret
  2019  006EA2                     __end_of_putch:
  2020                           	opt callstack 0
  2021                           
  2022 ;; *************** function ___lomod *****************
  2023 ;; Defined at:
  2024 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  dividend        8    0[COMRAM] unsigned long long 
  2027 ;;  divisor         8    8[COMRAM] unsigned long long 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  counter         1   16[COMRAM] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  8    0[COMRAM] unsigned long long 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2039 ;;      Params:        16       0       0       0       0       0       0       0       0
  2040 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2042 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2043 ;;Total ram usage:       17 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_utoa
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text10
  2053  007510                     __ptext10:
  2054                           	opt callstack 0
  2055  007510                     ___lomod:
  2056                           	opt callstack 26
  2057  007510  5009               	movf	___lomod@divisor^0,w,c
  2058  007512  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2059  007514  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2060  007516  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2061  007518  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2062  00751A  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2063  00751C  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2064  00751E  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2065  007520  B4D8               	btfsc	status,2,c
  2066  007522  EF95  F03A         	goto	u991
  2067  007526  EF97  F03A         	goto	u990
  2068  00752A                     u991:
  2069  00752A  EFDF  F03A         	goto	l764
  2070  00752E                     u990:
  2071  00752E  0E01               	movlw	1
  2072  007530  6E11               	movwf	___lomod@counter^0,c
  2073  007532  EFA5  F03A         	goto	l1780
  2074  007536                     l1778:
  2075  007536  90D8               	bcf	status,0,c
  2076  007538  3609               	rlcf	___lomod@divisor^0,f,c
  2077  00753A  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2078  00753C  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2079  00753E  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2080  007540  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2081  007542  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2082  007544  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2083  007546  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2084  007548  2A11               	incf	___lomod@counter^0,f,c
  2085  00754A                     l1780:
  2086  00754A  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2087  00754C  EFAA  F03A         	goto	u1001
  2088  007550  EFAC  F03A         	goto	u1000
  2089  007554                     u1001:
  2090  007554  EF9B  F03A         	goto	l1778
  2091  007558                     u1000:
  2092  007558                     l1782:
  2093  007558  5009               	movf	___lomod@divisor^0,w,c
  2094  00755A  5C01               	subwf	___lomod@dividend^0,w,c
  2095  00755C  500A               	movf	(___lomod@divisor+1)^0,w,c
  2096  00755E  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2097  007560  500B               	movf	(___lomod@divisor+2)^0,w,c
  2098  007562  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2099  007564  500C               	movf	(___lomod@divisor+3)^0,w,c
  2100  007566  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2101  007568  500D               	movf	(___lomod@divisor+4)^0,w,c
  2102  00756A  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2103  00756C  500E               	movf	(___lomod@divisor+5)^0,w,c
  2104  00756E  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2105  007570  500F               	movf	(___lomod@divisor+6)^0,w,c
  2106  007572  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2107  007574  5010               	movf	(___lomod@divisor+7)^0,w,c
  2108  007576  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2109  007578  A0D8               	btfss	status,0,c
  2110  00757A  EFC1  F03A         	goto	u1011
  2111  00757E  EFC3  F03A         	goto	u1010
  2112  007582                     u1011:
  2113  007582  EFD3  F03A         	goto	l1786
  2114  007586                     u1010:
  2115  007586  5009               	movf	___lomod@divisor^0,w,c
  2116  007588  5E01               	subwf	___lomod@dividend^0,f,c
  2117  00758A  500A               	movf	(___lomod@divisor+1)^0,w,c
  2118  00758C  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2119  00758E  500B               	movf	(___lomod@divisor+2)^0,w,c
  2120  007590  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2121  007592  500C               	movf	(___lomod@divisor+3)^0,w,c
  2122  007594  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2123  007596  500D               	movf	(___lomod@divisor+4)^0,w,c
  2124  007598  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2125  00759A  500E               	movf	(___lomod@divisor+5)^0,w,c
  2126  00759C  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2127  00759E  500F               	movf	(___lomod@divisor+6)^0,w,c
  2128  0075A0  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2129  0075A2  5010               	movf	(___lomod@divisor+7)^0,w,c
  2130  0075A4  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2131  0075A6                     l1786:
  2132  0075A6  90D8               	bcf	status,0,c
  2133  0075A8  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2134  0075AA  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2135  0075AC  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2136  0075AE  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2137  0075B0  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2138  0075B2  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2139  0075B4  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2140  0075B6  3209               	rrcf	___lomod@divisor^0,f,c
  2141  0075B8  2E11               	decfsz	___lomod@counter^0,f,c
  2142  0075BA  EFAC  F03A         	goto	l1782
  2143  0075BE                     l764:
  2144  0075BE  C001  F001         	movff	___lomod@dividend,?___lomod
  2145  0075C2  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2146  0075C6  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2147  0075CA  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2148  0075CE  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2149  0075D2  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2150  0075D6  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2151  0075DA  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2152  0075DE  0012               	return		;funcret
  2153  0075E0                     __end_of___lomod:
  2154                           	opt callstack 0
  2155                           
  2156 ;; *************** function ___lodiv *****************
  2157 ;; Defined at:
  2158 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  dividend        8    0[COMRAM] unsigned long long 
  2161 ;;  divisor         8    8[COMRAM] unsigned long long 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  quotient        8   16[COMRAM] unsigned long long 
  2164 ;;  counter         1   24[COMRAM] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  8    0[COMRAM] unsigned long long 
  2167 ;; Registers used:
  2168 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2174 ;;      Params:        16       0       0       0       0       0       0       0       0
  2175 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2177 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2178 ;;Total ram usage:       25 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_utoa
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text11
  2188  0075E0                     __ptext11:
  2189                           	opt callstack 0
  2190  0075E0                     ___lodiv:
  2191                           	opt callstack 26
  2192  0075E0  EE20  F011         	lfsr	2,___lodiv@quotient
  2193  0075E4  0E07               	movlw	7
  2194  0075E6                     u951:
  2195  0075E6  6ADE               	clrf	postinc2,c
  2196  0075E8  06E8               	decf	wreg,f,c
  2197  0075EA  E2FD               	bc	u951
  2198  0075EC  5009               	movf	___lodiv@divisor^0,w,c
  2199  0075EE  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2200  0075F0  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2201  0075F2  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2202  0075F4  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2203  0075F6  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2204  0075F8  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2205  0075FA  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2206  0075FC  B4D8               	btfsc	status,2,c
  2207  0075FE  EF03  F03B         	goto	u961
  2208  007602  EF05  F03B         	goto	u960
  2209  007606                     u961:
  2210  007606  EF57  F03B         	goto	l754
  2211  00760A                     u960:
  2212  00760A  0E01               	movlw	1
  2213  00760C  6E19               	movwf	___lodiv@counter^0,c
  2214  00760E  EF13  F03B         	goto	l1760
  2215  007612                     l1758:
  2216  007612  90D8               	bcf	status,0,c
  2217  007614  3609               	rlcf	___lodiv@divisor^0,f,c
  2218  007616  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2219  007618  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2220  00761A  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2221  00761C  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2222  00761E  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2223  007620  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2224  007622  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2225  007624  2A19               	incf	___lodiv@counter^0,f,c
  2226  007626                     l1760:
  2227  007626  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2228  007628  EF18  F03B         	goto	u971
  2229  00762C  EF1A  F03B         	goto	u970
  2230  007630                     u971:
  2231  007630  EF09  F03B         	goto	l1758
  2232  007634                     u970:
  2233  007634                     l1762:
  2234  007634  90D8               	bcf	status,0,c
  2235  007636  3611               	rlcf	___lodiv@quotient^0,f,c
  2236  007638  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2237  00763A  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2238  00763C  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2239  00763E  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2240  007640  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2241  007642  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2242  007644  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2243  007646  5009               	movf	___lodiv@divisor^0,w,c
  2244  007648  5C01               	subwf	___lodiv@dividend^0,w,c
  2245  00764A  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2246  00764C  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2247  00764E  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2248  007650  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2249  007652  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2250  007654  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2251  007656  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2252  007658  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2253  00765A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2254  00765C  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2255  00765E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2256  007660  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2257  007662  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2258  007664  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2259  007666  A0D8               	btfss	status,0,c
  2260  007668  EF38  F03B         	goto	u981
  2261  00766C  EF3A  F03B         	goto	u980
  2262  007670                     u981:
  2263  007670  EF4B  F03B         	goto	l1770
  2264  007674                     u980:
  2265  007674  5009               	movf	___lodiv@divisor^0,w,c
  2266  007676  5E01               	subwf	___lodiv@dividend^0,f,c
  2267  007678  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2268  00767A  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2269  00767C  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2270  00767E  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2271  007680  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2272  007682  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2273  007684  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2274  007686  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2275  007688  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2276  00768A  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2277  00768C  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2278  00768E  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2279  007690  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2280  007692  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2281  007694  8011               	bsf	___lodiv@quotient^0,0,c
  2282  007696                     l1770:
  2283  007696  90D8               	bcf	status,0,c
  2284  007698  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2285  00769A  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2286  00769C  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2287  00769E  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2288  0076A0  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2289  0076A2  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2290  0076A4  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2291  0076A6  3209               	rrcf	___lodiv@divisor^0,f,c
  2292  0076A8  2E19               	decfsz	___lodiv@counter^0,f,c
  2293  0076AA  EF1A  F03B         	goto	l1762
  2294  0076AE                     l754:
  2295  0076AE  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2296  0076B2  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2297  0076B6  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2298  0076BA  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2299  0076BE  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2300  0076C2  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2301  0076C6  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2302  0076CA  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2303  0076CE  0012               	return		;funcret
  2304  0076D0                     __end_of___lodiv:
  2305                           	opt callstack 0
  2306                           
  2307 ;; *************** function _atoi *****************
  2308 ;; Defined at:
  2309 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2312 ;;		 -> STR_1(5), 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  n               2   20[COMRAM] int 
  2315 ;;  neg             2   13[COMRAM] int 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  2    7[COMRAM] int 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2325 ;;      Params:         2       0       0       0       0       0       0       0       0
  2326 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2327 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2328 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2329 ;;Total ram usage:       15 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    1
  2332 ;; This function calls:
  2333 ;;		___wmul
  2334 ;;		_isdigit
  2335 ;;		_isspace
  2336 ;; This function is called by:
  2337 ;;		_vfpfcnvrt
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text12
  2342  00791A                     __ptext12:
  2343                           	opt callstack 0
  2344  00791A                     _atoi:
  2345                           	opt callstack 26
  2346  00791A  0E00               	movlw	0
  2347  00791C  6E16               	movwf	(atoi@n+1)^0,c
  2348  00791E  0E00               	movlw	0
  2349  007920  6E15               	movwf	atoi@n^0,c
  2350  007922  0E00               	movlw	0
  2351  007924  6E0F               	movwf	(atoi@neg+1)^0,c
  2352  007926  0E00               	movlw	0
  2353  007928  6E0E               	movwf	atoi@neg^0,c
  2354  00792A  EF99  F03C         	goto	l1850
  2355  00792E                     l1848:
  2356  00792E  4A08               	infsnz	atoi@s^0,f,c
  2357  007930  2A09               	incf	(atoi@s+1)^0,f,c
  2358  007932                     l1850:
  2359  007932  0E01               	movlw	1
  2360  007934  6E14               	movwf	_atoi$979^0,c
  2361  007936  C008  FFF6         	movff	atoi@s,tblptrl
  2362  00793A  C009  FFF7         	movff	atoi@s+1,tblptrh
  2363  00793E                     	if	0	;tblptru may be non-zero
  2364  00793E                     	endif
  2365  00793E                     	if	0	;tblptru may be non-zero
  2366  00793E                     	endif
  2367  00793E  0008               	tblrd		*
  2368  007940  50F5               	movf	tablat,w,c
  2369  007942  0A20               	xorlw	32
  2370  007944  B4D8               	btfsc	status,2,c
  2371  007946  EFA7  F03C         	goto	u1121
  2372  00794A  EFA9  F03C         	goto	u1120
  2373  00794E                     u1121:
  2374  00794E  EFC6  F03C         	goto	l1858
  2375  007952                     u1120:
  2376  007952  0EF7               	movlw	247
  2377  007954  6E0A               	movwf	??_atoi^0,c
  2378  007956  0EFF               	movlw	255
  2379  007958  6E0B               	movwf	(??_atoi+1)^0,c
  2380  00795A  C008  FFF6         	movff	atoi@s,tblptrl
  2381  00795E  C009  FFF7         	movff	atoi@s+1,tblptrh
  2382  007962                     	if	0	;tblptru may be non-zero
  2383  007962                     	endif
  2384  007962                     	if	0	;tblptru may be non-zero
  2385  007962                     	endif
  2386  007962  0008               	tblrd		*
  2387  007964  50F5               	movf	tablat,w,c
  2388  007966  6E0C               	movwf	(??_atoi+2)^0,c
  2389  007968  6A0D               	clrf	(??_atoi+3)^0,c
  2390  00796A  500A               	movf	??_atoi^0,w,c
  2391  00796C  260C               	addwf	(??_atoi+2)^0,f,c
  2392  00796E  500B               	movf	(??_atoi+1)^0,w,c
  2393  007970  220D               	addwfc	(??_atoi+3)^0,f,c
  2394  007972  500D               	movf	(??_atoi+3)^0,w,c
  2395  007974  E109               	bnz	u1130
  2396  007976  0E05               	movlw	5
  2397  007978  5C0C               	subwf	(??_atoi+2)^0,w,c
  2398  00797A  A0D8               	btfss	status,0,c
  2399  00797C  EFC2  F03C         	goto	u1131
  2400  007980  EFC4  F03C         	goto	u1130
  2401  007984                     u1131:
  2402  007984  EFC6  F03C         	goto	l1858
  2403  007988                     u1130:
  2404  007988  0E00               	movlw	0
  2405  00798A  6E14               	movwf	_atoi$979^0,c
  2406  00798C                     l1858:
  2407  00798C  C014  F010         	movff	_atoi$979,_atoi$978
  2408  007990  6A11               	clrf	(_atoi$978+1)^0,c
  2409  007992  5010               	movf	_atoi$978^0,w,c
  2410  007994  1011               	iorwf	(_atoi$978+1)^0,w,c
  2411  007996  A4D8               	btfss	status,2,c
  2412  007998  EFD0  F03C         	goto	u1141
  2413  00799C  EFD2  F03C         	goto	u1140
  2414  0079A0                     u1141:
  2415  0079A0  EF97  F03C         	goto	l1848
  2416  0079A4                     u1140:
  2417  0079A4  EFDC  F03C         	goto	l1868
  2418  0079A8                     l1864:
  2419  0079A8  0E00               	movlw	0
  2420  0079AA  6E0F               	movwf	(atoi@neg+1)^0,c
  2421  0079AC  0E01               	movlw	1
  2422  0079AE  6E0E               	movwf	atoi@neg^0,c
  2423  0079B0                     l1866:
  2424  0079B0  4A08               	infsnz	atoi@s^0,f,c
  2425  0079B2  2A09               	incf	(atoi@s+1)^0,f,c
  2426  0079B4  EF11  F03D         	goto	l1874
  2427  0079B8                     l1868:
  2428  0079B8  C008  FFF6         	movff	atoi@s,tblptrl
  2429  0079BC  C009  FFF7         	movff	atoi@s+1,tblptrh
  2430  0079C0                     	if	0	;tblptru may be non-zero
  2431  0079C0                     	endif
  2432  0079C0                     	if	0	;tblptru may be non-zero
  2433  0079C0                     	endif
  2434  0079C0  0008               	tblrd		*
  2435  0079C2  50F5               	movf	tablat,w,c
  2436  0079C4  6E0A               	movwf	??_atoi^0,c
  2437  0079C6  6A0B               	clrf	(??_atoi+1)^0,c
  2438                           
  2439                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2440                           ; Switch size 1, requested type "simple"
  2441                           ; Number of cases is 1, Range of values is 0 to 0
  2442                           ; switch strategies available:
  2443                           ; Name         Instructions Cycles
  2444                           ; simple_byte            4     3 (average)
  2445                           ;	Chosen strategy is simple_byte
  2446  0079C8  500B               	movf	(??_atoi+1)^0,w,c
  2447  0079CA  0A00               	xorlw	0	; case 0
  2448  0079CC  B4D8               	btfsc	status,2,c
  2449  0079CE  EFEB  F03C         	goto	l2352
  2450  0079D2  EF11  F03D         	goto	l1874
  2451  0079D6                     l2352:
  2452                           
  2453                           ; Switch size 1, requested type "simple"
  2454                           ; Number of cases is 2, Range of values is 43 to 45
  2455                           ; switch strategies available:
  2456                           ; Name         Instructions Cycles
  2457                           ; simple_byte            7     4 (average)
  2458                           ;	Chosen strategy is simple_byte
  2459  0079D6  500A               	movf	??_atoi^0,w,c
  2460  0079D8  0A2B               	xorlw	43	; case 43
  2461  0079DA  B4D8               	btfsc	status,2,c
  2462  0079DC  EFD8  F03C         	goto	l1866
  2463  0079E0  0A06               	xorlw	6	; case 45
  2464  0079E2  B4D8               	btfsc	status,2,c
  2465  0079E4  EFD4  F03C         	goto	l1864
  2466  0079E8  EF11  F03D         	goto	l1874
  2467  0079EC                     l1870:
  2468  0079EC  C015  F001         	movff	atoi@n,___wmul@multiplier
  2469  0079F0  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  2470  0079F4  0E00               	movlw	0
  2471  0079F6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2472  0079F8  0E0A               	movlw	10
  2473  0079FA  6E03               	movwf	___wmul@multiplicand^0,c
  2474  0079FC  EC8E  F037         	call	___wmul	;wreg free
  2475  007A00  C008  FFF6         	movff	atoi@s,tblptrl
  2476  007A04  C009  FFF7         	movff	atoi@s+1,tblptrh
  2477  007A08                     	if	0	;tblptru may be non-zero
  2478  007A08                     	endif
  2479  007A08                     	if	0	;tblptru may be non-zero
  2480  007A08                     	endif
  2481  007A08  0008               	tblrd		*
  2482  007A0A  50F5               	movf	tablat,w,c
  2483  007A0C  5E01               	subwf	?___wmul^0,f,c
  2484  007A0E  0E00               	movlw	0
  2485  007A10  5A02               	subwfb	(?___wmul+1)^0,f,c
  2486  007A12  0E30               	movlw	48
  2487  007A14  2401               	addwf	?___wmul^0,w,c
  2488  007A16  6E15               	movwf	atoi@n^0,c
  2489  007A18  0E00               	movlw	0
  2490  007A1A  2002               	addwfc	(?___wmul+1)^0,w,c
  2491  007A1C  6E16               	movwf	(atoi@n+1)^0,c
  2492  007A1E  EFD8  F03C         	goto	l1866
  2493  007A22                     l1874:
  2494  007A22  0ED0               	movlw	208
  2495  007A24  6E0A               	movwf	??_atoi^0,c
  2496  007A26  0EFF               	movlw	255
  2497  007A28  6E0B               	movwf	(??_atoi+1)^0,c
  2498  007A2A  C008  FFF6         	movff	atoi@s,tblptrl
  2499  007A2E  C009  FFF7         	movff	atoi@s+1,tblptrh
  2500  007A32                     	if	0	;tblptru may be non-zero
  2501  007A32                     	endif
  2502  007A32                     	if	0	;tblptru may be non-zero
  2503  007A32                     	endif
  2504  007A32  0008               	tblrd		*
  2505  007A34  50F5               	movf	tablat,w,c
  2506  007A36  6E0C               	movwf	(??_atoi+2)^0,c
  2507  007A38  6A0D               	clrf	(??_atoi+3)^0,c
  2508  007A3A  500A               	movf	??_atoi^0,w,c
  2509  007A3C  260C               	addwf	(??_atoi+2)^0,f,c
  2510  007A3E  500B               	movf	(??_atoi+1)^0,w,c
  2511  007A40  220D               	addwfc	(??_atoi+3)^0,f,c
  2512  007A42  500D               	movf	(??_atoi+3)^0,w,c
  2513  007A44  E10A               	bnz	u1150
  2514  007A46  0E0A               	movlw	10
  2515  007A48  5C0C               	subwf	(??_atoi+2)^0,w,c
  2516  007A4A  A0D8               	btfss	status,0,c
  2517  007A4C  EF2A  F03D         	goto	u1151
  2518  007A50  EF2D  F03D         	goto	u1150
  2519  007A54                     u1151:
  2520  007A54  0E01               	movlw	1
  2521  007A56  EF2E  F03D         	goto	u1160
  2522  007A5A                     u1150:
  2523  007A5A  0E00               	movlw	0
  2524  007A5C                     u1160:
  2525  007A5C  6E12               	movwf	_atoi$980^0,c
  2526  007A5E  6A13               	clrf	(_atoi$980+1)^0,c
  2527  007A60  5012               	movf	_atoi$980^0,w,c
  2528  007A62  1013               	iorwf	(_atoi$980+1)^0,w,c
  2529  007A64  A4D8               	btfss	status,2,c
  2530  007A66  EF37  F03D         	goto	u1171
  2531  007A6A  EF39  F03D         	goto	u1170
  2532  007A6E                     u1171:
  2533  007A6E  EFF6  F03C         	goto	l1870
  2534  007A72                     u1170:
  2535  007A72  500E               	movf	atoi@neg^0,w,c
  2536  007A74  100F               	iorwf	(atoi@neg+1)^0,w,c
  2537  007A76  A4D8               	btfss	status,2,c
  2538  007A78  EF40  F03D         	goto	u1181
  2539  007A7C  EF42  F03D         	goto	u1180
  2540  007A80                     u1181:
  2541  007A80  EF50  F03D         	goto	l1015
  2542  007A84                     u1180:
  2543  007A84  C015  F00A         	movff	atoi@n,??_atoi
  2544  007A88  C016  F00B         	movff	atoi@n+1,??_atoi+1
  2545  007A8C  1E0A               	comf	??_atoi^0,f,c
  2546  007A8E  1E0B               	comf	(??_atoi+1)^0,f,c
  2547  007A90  4A0A               	infsnz	??_atoi^0,f,c
  2548  007A92  2A0B               	incf	(??_atoi+1)^0,f,c
  2549  007A94  C00A  F008         	movff	??_atoi,?_atoi
  2550  007A98  C00B  F009         	movff	??_atoi+1,?_atoi+1
  2551  007A9C  EF54  F03D         	goto	l1018
  2552  007AA0                     l1015:
  2553  007AA0  C015  F008         	movff	atoi@n,?_atoi
  2554  007AA4  C016  F009         	movff	atoi@n+1,?_atoi+1
  2555  007AA8                     l1018:
  2556  007AA8  0012               	return		;funcret
  2557  007AAA                     __end_of_atoi:
  2558                           	opt callstack 0
  2559                           
  2560 ;; *************** function _isspace *****************
  2561 ;; Defined at:
  2562 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  c               2    0[COMRAM] int 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  2    0[COMRAM] int 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2576 ;;      Params:         2       0       0       0       0       0       0       0       0
  2577 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2578 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2579 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2580 ;;Total ram usage:        7 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_atoi
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text13
  2590  0071B2                     __ptext13:
  2591                           	opt callstack 0
  2592  0071B2                     _isspace:
  2593                           	opt callstack 26
  2594  0071B2  0E01               	movlw	1
  2595  0071B4  6E07               	movwf	_isspace$996^0,c
  2596  0071B6  0E20               	movlw	32
  2597  0071B8  1801               	xorwf	isspace@c^0,w,c
  2598  0071BA  1002               	iorwf	(isspace@c+1)^0,w,c
  2599  0071BC  B4D8               	btfsc	status,2,c
  2600  0071BE  EFE3  F038         	goto	u1021
  2601  0071C2  EFE5  F038         	goto	u1020
  2602  0071C6                     u1021:
  2603  0071C6  EFFE  F038         	goto	l1798
  2604  0071CA                     u1020:
  2605  0071CA  0EF7               	movlw	247
  2606  0071CC  6E03               	movwf	??_isspace^0,c
  2607  0071CE  0EFF               	movlw	255
  2608  0071D0  6E04               	movwf	(??_isspace+1)^0,c
  2609  0071D2  C001  F005         	movff	isspace@c,??_isspace+2
  2610  0071D6  C002  F006         	movff	isspace@c+1,??_isspace+3
  2611  0071DA  5003               	movf	??_isspace^0,w,c
  2612  0071DC  2605               	addwf	(??_isspace+2)^0,f,c
  2613  0071DE  5004               	movf	(??_isspace+1)^0,w,c
  2614  0071E0  2206               	addwfc	(??_isspace+3)^0,f,c
  2615  0071E2  5006               	movf	(??_isspace+3)^0,w,c
  2616  0071E4  E109               	bnz	u1030
  2617  0071E6  0E05               	movlw	5
  2618  0071E8  5C05               	subwf	(??_isspace+2)^0,w,c
  2619  0071EA  A0D8               	btfss	status,0,c
  2620  0071EC  EFFA  F038         	goto	u1031
  2621  0071F0  EFFC  F038         	goto	u1030
  2622  0071F4                     u1031:
  2623  0071F4  EFFE  F038         	goto	l1798
  2624  0071F8                     u1030:
  2625  0071F8  0E00               	movlw	0
  2626  0071FA  6E07               	movwf	_isspace$996^0,c
  2627  0071FC                     l1798:
  2628  0071FC  C007  F001         	movff	_isspace$996,?_isspace
  2629  007200  6A02               	clrf	(?_isspace+1)^0,c
  2630  007202  0012               	return		;funcret
  2631  007204                     __end_of_isspace:
  2632                           	opt callstack 0
  2633                           
  2634 ;; *************** function _isdigit *****************
  2635 ;; Defined at:
  2636 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  c               2    0[COMRAM] int 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  2    0[COMRAM] int 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2650 ;;      Params:         2       0       0       0       0       0       0       0       0
  2651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2652 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2653 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2654 ;;Total ram usage:        6 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_vfpfcnvrt
  2660 ;;		_atoi
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text14
  2665  006FA4                     __ptext14:
  2666                           	opt callstack 0
  2667  006FA4                     _isdigit:
  2668                           	opt callstack 27
  2669  006FA4  0ED0               	movlw	208
  2670  006FA6  6E03               	movwf	??_isdigit^0,c
  2671  006FA8  0EFF               	movlw	255
  2672  006FAA  6E04               	movwf	(??_isdigit+1)^0,c
  2673  006FAC  C001  F005         	movff	isdigit@c,??_isdigit+2
  2674  006FB0  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  2675  006FB4  5003               	movf	??_isdigit^0,w,c
  2676  006FB6  2605               	addwf	(??_isdigit+2)^0,f,c
  2677  006FB8  5004               	movf	(??_isdigit+1)^0,w,c
  2678  006FBA  2206               	addwfc	(??_isdigit+3)^0,f,c
  2679  006FBC  5006               	movf	(??_isdigit+3)^0,w,c
  2680  006FBE  E10A               	bnz	u930
  2681  006FC0  0E0A               	movlw	10
  2682  006FC2  5C05               	subwf	(??_isdigit+2)^0,w,c
  2683  006FC4  A0D8               	btfss	status,0,c
  2684  006FC6  EFE7  F037         	goto	u931
  2685  006FCA  EFEA  F037         	goto	u930
  2686  006FCE                     u931:
  2687  006FCE  0E01               	movlw	1
  2688  006FD0  EFEB  F037         	goto	u940
  2689  006FD4                     u930:
  2690  006FD4  0E00               	movlw	0
  2691  006FD6                     u940:
  2692  006FD6  6E01               	movwf	?_isdigit^0,c
  2693  006FD8  6A02               	clrf	(?_isdigit+1)^0,c
  2694  006FDA  0012               	return		;funcret
  2695  006FDC                     __end_of_isdigit:
  2696                           	opt callstack 0
  2697                           
  2698 ;; *************** function ___wmul *****************
  2699 ;; Defined at:
  2700 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  multiplier      2    0[COMRAM] unsigned int 
  2703 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  product         2    4[COMRAM] unsigned int 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  2    0[COMRAM] unsigned int 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, prodl, prodh
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2715 ;;      Params:         4       0       0       0       0       0       0       0       0
  2716 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2718 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2719 ;;Total ram usage:        6 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_atoi
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text15
  2729  006F1C                     __ptext15:
  2730                           	opt callstack 0
  2731  006F1C                     ___wmul:
  2732                           	opt callstack 26
  2733  006F1C  5001               	movf	___wmul@multiplier^0,w,c
  2734  006F1E  0203               	mulwf	___wmul@multiplicand^0,c
  2735  006F20  CFF3 F005          	movff	prodl,___wmul@product
  2736  006F24  CFF4 F006          	movff	prodh,___wmul@product+1
  2737  006F28  5001               	movf	___wmul@multiplier^0,w,c
  2738  006F2A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2739  006F2C  50F3               	movf	243,w,c
  2740  006F2E  2606               	addwf	(___wmul@product+1)^0,f,c
  2741  006F30  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2742  006F32  0203               	mulwf	___wmul@multiplicand^0,c
  2743  006F34  50F3               	movf	243,w,c
  2744  006F36  2606               	addwf	(___wmul@product+1)^0,f,c
  2745  006F38  C005  F001         	movff	___wmul@product,?___wmul
  2746  006F3C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2747  006F40  0012               	return		;funcret
  2748  006F42                     __end_of___wmul:
  2749                           	opt callstack 0
  2750                           
  2751 ;; *************** function _putsXLCD *****************
  2752 ;; Defined at:
  2753 ;;		line 16 in file "XLCD/putsxlcd.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  2756 ;;		 -> strResultado(5), 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2768 ;;      Params:         2       0       0       0       0       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2771 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2772 ;;Total ram usage:        2 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    2
  2775 ;; This function calls:
  2776 ;;		_BusyXLCD
  2777 ;;		_WriteDataXLCD
  2778 ;; This function is called by:
  2779 ;;		_main
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text16
  2784  00709A                     __ptext16:
  2785                           	opt callstack 0
  2786  00709A                     _putsXLCD:
  2787                           	opt callstack 28
  2788  00709A                     
  2789                           ;XLCD/putsxlcd.c: 16: void putsXLCD(char *buffer);XLCD/putsxlcd.c: 17: {;XLCD/putsxlcd.c
      +                          : 18:         while(*buffer)
  2790  00709A  EF62  F038         	goto	l2174
  2791  00709E                     l2168:
  2792  00709E  EC91  F038         	call	_BusyXLCD	;wreg free
  2793  0070A2  0900               	iorlw	0
  2794  0070A4  A4D8               	btfss	status,2,c
  2795  0070A6  EF57  F038         	goto	u1411
  2796  0070AA  EF59  F038         	goto	u1410
  2797  0070AE                     u1411:
  2798  0070AE  EF4F  F038         	goto	l2168
  2799  0070B2                     u1410:
  2800  0070B2                     
  2801                           ;XLCD/putsxlcd.c: 21:                 WriteDataXLCD(*buffer);
  2802  0070B2  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  2803  0070B6  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  2804  0070BA  50DF               	movf	indf2,w,c
  2805  0070BC  EC0D  F038         	call	_WriteDataXLCD
  2806  0070C0                     
  2807                           ;XLCD/putsxlcd.c: 22:                 buffer++;
  2808  0070C0  4A02               	infsnz	putsXLCD@buffer^0,f,c
  2809  0070C2  2A03               	incf	(putsXLCD@buffer+1)^0,f,c
  2810  0070C4                     l2174:
  2811                           
  2812                           ;XLCD/putsxlcd.c: 18:         while(*buffer)
  2813  0070C4  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  2814  0070C8  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  2815  0070CC  50DF               	movf	indf2,w,c
  2816  0070CE  A4D8               	btfss	status,2,c
  2817  0070D0  EF6C  F038         	goto	u1421
  2818  0070D4  EF6E  F038         	goto	u1420
  2819  0070D8                     u1421:
  2820  0070D8  EF4F  F038         	goto	l2168
  2821  0070DC                     u1420:
  2822  0070DC  0012               	return		;funcret
  2823  0070DE                     __end_of_putsXLCD:
  2824                           	opt callstack 0
  2825                           
  2826 ;; *************** function _initLED *****************
  2827 ;; Defined at:
  2828 ;;		line 29 in file "main.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2842 ;;      Params:         0       0       0       0       0       0       0       0       0
  2843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2845 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2846 ;;Total ram usage:        0 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_main
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text17
  2856  006EB8                     __ptext17:
  2857                           	opt callstack 0
  2858  006EB8                     _initLED:
  2859                           	opt callstack 30
  2860  006EB8                     
  2861                           ;main.c: 30:     TRISA = 0;
  2862  006EB8  0E00               	movlw	0
  2863  006EBA  6E92               	movwf	146,c	;volatile
  2864                           
  2865                           ;main.c: 31:     TRISB = 0;
  2866  006EBC  0E00               	movlw	0
  2867  006EBE  6E93               	movwf	147,c	;volatile
  2868                           
  2869                           ;main.c: 32:     LATA = 0;
  2870  006EC0  0E00               	movlw	0
  2871  006EC2  6E89               	movwf	137,c	;volatile
  2872                           
  2873                           ;main.c: 33:     LATB = 0;
  2874  006EC4  0E00               	movlw	0
  2875  006EC6  6E8A               	movwf	138,c	;volatile
  2876  006EC8  0012               	return		;funcret
  2877  006ECA                     __end_of_initLED:
  2878                           	opt callstack 0
  2879                           
  2880 ;; *************** function _initLCD *****************
  2881 ;; Defined at:
  2882 ;;		line 42 in file "main.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;		None
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0
  2897 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2899 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2900 ;;Total ram usage:        0 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    3
  2903 ;; This function calls:
  2904 ;;		_OpenXLCD
  2905 ;;		_WriteCmdXLCD
  2906 ;;		_putrsXLCD
  2907 ;; This function is called by:
  2908 ;;		_main
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text18
  2913  006EF6                     __ptext18:
  2914                           	opt callstack 0
  2915  006EF6                     _initLCD:
  2916                           	opt callstack 27
  2917  006EF6                     
  2918                           ;main.c: 43:     OpenXLCD(0b00101100 & 0b00111000);
  2919  006EF6  0E28               	movlw	40
  2920  006EF8  EC68  F03B         	call	_OpenXLCD
  2921                           
  2922                           ;main.c: 44:     WriteCmdXLCD(0b00000110);
  2923  006EFC  0E06               	movlw	6
  2924  006EFE  ECEE  F037         	call	_WriteCmdXLCD
  2925                           
  2926                           ;main.c: 45:     WriteCmdXLCD(0b00001111);
  2927  006F02  0E0F               	movlw	15
  2928  006F04  ECEE  F037         	call	_WriteCmdXLCD
  2929                           
  2930                           ;main.c: 46:     WriteCmdXLCD(0b00001110);
  2931  006F08  0E0E               	movlw	14
  2932  006F0A  ECEE  F037         	call	_WriteCmdXLCD
  2933  006F0E                     
  2934                           ;main.c: 47:     putrsXLCD("Convertidor AD:");
  2935  006F0E  0E05               	movlw	low STR_2
  2936  006F10  6E02               	movwf	putrsXLCD@buffer^0,c
  2937  006F12  0E10               	movlw	high STR_2
  2938  006F14  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  2939  006F16  ECB4  F038         	call	_putrsXLCD	;wreg free
  2940  006F1A  0012               	return		;funcret
  2941  006F1C                     __end_of_initLCD:
  2942                           	opt callstack 0
  2943                           
  2944 ;; *************** function _putrsXLCD *****************
  2945 ;; Defined at:
  2946 ;;		line 16 in file "XLCD/putrxlcd.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
  2949 ;;		 -> STR_2(16), 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2961 ;;      Params:         2       0       0       0       0       0       0       0       0
  2962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2964 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2965 ;;Total ram usage:        2 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    2
  2968 ;; This function calls:
  2969 ;;		_BusyXLCD
  2970 ;;		_WriteDataXLCD
  2971 ;; This function is called by:
  2972 ;;		_initLCD
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text19
  2977  007168                     __ptext19:
  2978                           	opt callstack 0
  2979  007168                     _putrsXLCD:
  2980                           	opt callstack 27
  2981  007168                     
  2982                           ;XLCD/putrxlcd.c: 16: void putrsXLCD(const char *buffer);XLCD/putrxlcd.c: 17: {;XLCD/put
      +                          rxlcd.c: 18:         while(*buffer)
  2983  007168  EFCA  F038         	goto	l2156
  2984  00716C                     l2150:
  2985  00716C  EC91  F038         	call	_BusyXLCD	;wreg free
  2986  007170  0900               	iorlw	0
  2987  007172  A4D8               	btfss	status,2,c
  2988  007174  EFBE  F038         	goto	u1381
  2989  007178  EFC0  F038         	goto	u1380
  2990  00717C                     u1381:
  2991  00717C  EFB6  F038         	goto	l2150
  2992  007180                     u1380:
  2993  007180                     
  2994                           ;XLCD/putrxlcd.c: 21:                 WriteDataXLCD(*buffer);
  2995  007180  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2996  007184  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2997  007188                     	if	0	;tblptru may be non-zero
  2998  007188                     	endif
  2999  007188                     	if	0	;tblptru may be non-zero
  3000  007188                     	endif
  3001  007188  0008               	tblrd		*
  3002  00718A  50F5               	movf	tablat,w,c
  3003  00718C  EC0D  F038         	call	_WriteDataXLCD
  3004  007190                     
  3005                           ;XLCD/putrxlcd.c: 22:                 buffer++;
  3006  007190  4A02               	infsnz	putrsXLCD@buffer^0,f,c
  3007  007192  2A03               	incf	(putrsXLCD@buffer+1)^0,f,c
  3008  007194                     l2156:
  3009                           
  3010                           ;XLCD/putrxlcd.c: 18:         while(*buffer)
  3011  007194  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  3012  007198  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  3013  00719C                     	if	0	;tblptru may be non-zero
  3014  00719C                     	endif
  3015  00719C                     	if	0	;tblptru may be non-zero
  3016  00719C                     	endif
  3017  00719C  0008               	tblrd		*
  3018  00719E  50F5               	movf	tablat,w,c
  3019  0071A0  0900               	iorlw	0
  3020  0071A2  A4D8               	btfss	status,2,c
  3021  0071A4  EFD6  F038         	goto	u1391
  3022  0071A8  EFD8  F038         	goto	u1390
  3023  0071AC                     u1391:
  3024  0071AC  EFB6  F038         	goto	l2150
  3025  0071B0                     u1390:
  3026  0071B0  0012               	return		;funcret
  3027  0071B2                     __end_of_putrsXLCD:
  3028                           	opt callstack 0
  3029                           
  3030 ;; *************** function _WriteDataXLCD *****************
  3031 ;; Defined at:
  3032 ;;		line 16 in file "XLCD/writdata.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  data            1    wreg     unsigned char 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  data            1    0[COMRAM] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3046 ;;      Params:         0       0       0       0       0       0       0       0       0
  3047 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3049 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3050 ;;Total ram usage:        1 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    1
  3053 ;; This function calls:
  3054 ;;		_DelayFor18TCY
  3055 ;; This function is called by:
  3056 ;;		_putrsXLCD
  3057 ;;		_putsXLCD
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text20
  3062  00701A                     __ptext20:
  3063                           	opt callstack 0
  3064  00701A                     _WriteDataXLCD:
  3065                           	opt callstack 28
  3066                           
  3067                           ;incstack = 0
  3068                           ;WriteDataXLCD@data stored from wreg
  3069  00701A  6E01               	movwf	WriteDataXLCD@data^0,c
  3070  00701C                     
  3071                           ;XLCD/writdata.c: 16: void WriteDataXLCD(char data);XLCD/writdata.c: 17: {;XLCD/writdata
      +                          .c: 35:         TRISD &= 0xf0;
  3072  00701C  0EF0               	movlw	240
  3073  00701E  1695               	andwf	149,f,c	;volatile
  3074                           
  3075                           ;XLCD/writdata.c: 36:         PORTD &= 0xf0;
  3076  007020  0EF0               	movlw	240
  3077  007022  1683               	andwf	131,f,c	;volatile
  3078                           
  3079                           ;XLCD/writdata.c: 37:         PORTD |= ((data>>4)&0x0f);
  3080  007024  3801               	swapf	WriteDataXLCD@data^0,w,c
  3081  007026  0B0F               	andlw	15
  3082  007028  0B0F               	andlw	15
  3083  00702A  1283               	iorwf	131,f,c	;volatile
  3084  00702C                     
  3085                           ;XLCD/writdata.c: 39:         LATEbits.LATE0 = 1;
  3086  00702C  808D               	bsf	141,0,c	;volatile
  3087  00702E                     
  3088                           ;XLCD/writdata.c: 40:         LATEbits.LATE1 = 0;
  3089  00702E  928D               	bcf	141,1,c	;volatile
  3090  007030                     
  3091                           ;XLCD/writdata.c: 41:         DelayFor18TCY();
  3092  007030  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3093  007034                     
  3094                           ;XLCD/writdata.c: 42:         LATEbits.LATE2 = 1;
  3095  007034  848D               	bsf	141,2,c	;volatile
  3096  007036                     
  3097                           ;XLCD/writdata.c: 43:         DelayFor18TCY();
  3098  007036  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3099  00703A                     
  3100                           ;XLCD/writdata.c: 44:         LATEbits.LATE2 = 0;
  3101  00703A  948D               	bcf	141,2,c	;volatile
  3102                           
  3103                           ;XLCD/writdata.c: 49:         PORTD &= 0xf0;
  3104  00703C  0EF0               	movlw	240
  3105  00703E  1683               	andwf	131,f,c	;volatile
  3106                           
  3107                           ;XLCD/writdata.c: 50:         PORTD |= (data&0x0f);
  3108  007040  5001               	movf	WriteDataXLCD@data^0,w,c
  3109  007042  0B0F               	andlw	15
  3110  007044  1283               	iorwf	131,f,c	;volatile
  3111  007046                     
  3112                           ;XLCD/writdata.c: 52:         DelayFor18TCY();
  3113  007046  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3114  00704A                     
  3115                           ;XLCD/writdata.c: 53:         LATEbits.LATE2 = 1;
  3116  00704A  848D               	bsf	141,2,c	;volatile
  3117  00704C                     
  3118                           ;XLCD/writdata.c: 54:         DelayFor18TCY();
  3119  00704C  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3120  007050                     
  3121                           ;XLCD/writdata.c: 55:         LATEbits.LATE2 = 0;
  3122  007050  948D               	bcf	141,2,c	;volatile
  3123                           
  3124                           ;XLCD/writdata.c: 59:         TRISD |= 0x0f;
  3125  007052  0E0F               	movlw	15
  3126  007054  1295               	iorwf	149,f,c	;volatile
  3127  007056  0012               	return		;funcret
  3128  007058                     __end_of_WriteDataXLCD:
  3129                           	opt callstack 0
  3130                           
  3131 ;; *************** function _OpenXLCD *****************
  3132 ;; Defined at:
  3133 ;;		line 19 in file "XLCD/openxlcd.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  lcdtype         1    wreg     unsigned char 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  lcdtype         1    6[COMRAM] unsigned char 
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      void 
  3140 ;; Registers used:
  3141 ;;		wreg, status,2, status,0, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3147 ;;      Params:         0       0       0       0       0       0       0       0       0
  3148 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3149 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3150 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3151 ;;Total ram usage:        2 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    2
  3154 ;; This function calls:
  3155 ;;		_BusyXLCD
  3156 ;;		_DelayPORXLCD
  3157 ;;		_SetDDRamAddr
  3158 ;;		_WriteCmdXLCD
  3159 ;; This function is called by:
  3160 ;;		_initLCD
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text21
  3165  0076D0                     __ptext21:
  3166                           	opt callstack 0
  3167  0076D0                     _OpenXLCD:
  3168                           	opt callstack 27
  3169                           
  3170                           ;incstack = 0
  3171                           ;OpenXLCD@lcdtype stored from wreg
  3172  0076D0  6E07               	movwf	OpenXLCD@lcdtype^0,c
  3173  0076D2                     
  3174                           ;XLCD/openxlcd.c: 19: void OpenXLCD(unsigned char lcdtype);XLCD/openxlcd.c: 20: {;XLCD/o
      +                          penxlcd.c: 31:         PORTD &= 0xf0;
  3175  0076D2  0EF0               	movlw	240
  3176  0076D4  1683               	andwf	131,f,c	;volatile
  3177                           
  3178                           ;XLCD/openxlcd.c: 32:         TRISD &= 0xF0;
  3179  0076D6  0EF0               	movlw	240
  3180  0076D8  1695               	andwf	149,f,c	;volatile
  3181  0076DA                     
  3182                           ;XLCD/openxlcd.c: 35:         TRISEbits.TRISE1 = 0;
  3183  0076DA  9296               	bcf	150,1,c	;volatile
  3184  0076DC                     
  3185                           ;XLCD/openxlcd.c: 36:         TRISEbits.TRISE0 = 0;
  3186  0076DC  9096               	bcf	150,0,c	;volatile
  3187  0076DE                     
  3188                           ;XLCD/openxlcd.c: 37:         TRISEbits.TRISE2 = 0;
  3189  0076DE  9496               	bcf	150,2,c	;volatile
  3190  0076E0                     
  3191                           ;XLCD/openxlcd.c: 38:         LATEbits.LATE1 = 0;
  3192  0076E0  928D               	bcf	141,1,c	;volatile
  3193  0076E2                     
  3194                           ;XLCD/openxlcd.c: 39:         LATEbits.LATE0 = 0;
  3195  0076E2  908D               	bcf	141,0,c	;volatile
  3196  0076E4                     
  3197                           ;XLCD/openxlcd.c: 40:         LATEbits.LATE2 = 0;
  3198  0076E4  948D               	bcf	141,2,c	;volatile
  3199  0076E6                     
  3200                           ;XLCD/openxlcd.c: 43:         DelayPORXLCD();
  3201  0076E6  EC65  F037         	call	_DelayPORXLCD	;wreg free
  3202  0076EA                     
  3203                           ;XLCD/openxlcd.c: 45:    WriteCmdXLCD(0x30);
  3204  0076EA  0E30               	movlw	48
  3205  0076EC  ECEE  F037         	call	_WriteCmdXLCD
  3206  0076F0                     
  3207                           ;XLCD/openxlcd.c: 47:          _delay(50000);
  3208  0076F0  0E41               	movlw	65
  3209  0076F2  6E06               	movwf	??_OpenXLCD^0,c
  3210  0076F4  0EEE               	movlw	238
  3211  0076F6                     u1657:
  3212  0076F6  2EE8               	decfsz	wreg,f,c
  3213  0076F8  D7FE               	bra	u1657
  3214  0076FA  2E06               	decfsz	??_OpenXLCD^0,f,c
  3215  0076FC  D7FC               	bra	u1657
  3216  0076FE  D000               	nop2	
  3217  007700                     
  3218                           ;XLCD/openxlcd.c: 49:    WriteCmdXLCD(0x30);
  3219  007700  0E30               	movlw	48
  3220  007702  ECEE  F037         	call	_WriteCmdXLCD
  3221  007706                     
  3222                           ;XLCD/openxlcd.c: 51:           _delay(10000);
  3223  007706  0E0D               	movlw	13
  3224  007708  6E06               	movwf	??_OpenXLCD^0,c
  3225  00770A  0EFC               	movlw	252
  3226  00770C                     u1667:
  3227  00770C  2EE8               	decfsz	wreg,f,c
  3228  00770E  D7FE               	bra	u1667
  3229  007710  2E06               	decfsz	??_OpenXLCD^0,f,c
  3230  007712  D7FC               	bra	u1667
  3231  007714                     
  3232                           ;XLCD/openxlcd.c: 54:    WriteCmdXLCD(0x32);
  3233  007714  0E32               	movlw	50
  3234  007716  ECEE  F037         	call	_WriteCmdXLCD
  3235  00771A                     l2120:
  3236  00771A  EC91  F038         	call	_BusyXLCD	;wreg free
  3237  00771E  0900               	iorlw	0
  3238  007720  A4D8               	btfss	status,2,c
  3239  007722  EF95  F03B         	goto	u1311
  3240  007726  EF97  F03B         	goto	u1310
  3241  00772A                     u1311:
  3242  00772A  EF8D  F03B         	goto	l2120
  3243  00772E                     u1310:
  3244  00772E                     l2122:
  3245  00772E  EC91  F038         	call	_BusyXLCD	;wreg free
  3246  007732  0900               	iorlw	0
  3247  007734  A4D8               	btfss	status,2,c
  3248  007736  EF9F  F03B         	goto	u1321
  3249  00773A  EFA1  F03B         	goto	u1320
  3250  00773E                     u1321:
  3251  00773E  EF97  F03B         	goto	l2122
  3252  007742                     u1320:
  3253  007742                     
  3254                           ;XLCD/openxlcd.c: 61:         WriteCmdXLCD(lcdtype);
  3255  007742  5007               	movf	OpenXLCD@lcdtype^0,w,c
  3256  007744  ECEE  F037         	call	_WriteCmdXLCD
  3257  007748                     l2126:
  3258  007748  EC91  F038         	call	_BusyXLCD	;wreg free
  3259  00774C  0900               	iorlw	0
  3260  00774E  A4D8               	btfss	status,2,c
  3261  007750  EFAC  F03B         	goto	u1331
  3262  007754  EFAE  F03B         	goto	u1330
  3263  007758                     u1331:
  3264  007758  EFA4  F03B         	goto	l2126
  3265  00775C                     u1330:
  3266  00775C                     
  3267                           ;XLCD/openxlcd.c: 65:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  3268  00775C  0E08               	movlw	8
  3269  00775E  ECEE  F037         	call	_WriteCmdXLCD
  3270  007762                     l2130:
  3271  007762  EC91  F038         	call	_BusyXLCD	;wreg free
  3272  007766  0900               	iorlw	0
  3273  007768  A4D8               	btfss	status,2,c
  3274  00776A  EFB9  F03B         	goto	u1341
  3275  00776E  EFBB  F03B         	goto	u1340
  3276  007772                     u1341:
  3277  007772  EFB1  F03B         	goto	l2130
  3278  007776                     u1340:
  3279  007776                     
  3280                           ;XLCD/openxlcd.c: 67:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  3281  007776  0E0F               	movlw	15
  3282  007778  ECEE  F037         	call	_WriteCmdXLCD
  3283  00777C                     l2134:
  3284  00777C  EC91  F038         	call	_BusyXLCD	;wreg free
  3285  007780  0900               	iorlw	0
  3286  007782  A4D8               	btfss	status,2,c
  3287  007784  EFC6  F03B         	goto	u1351
  3288  007788  EFC8  F03B         	goto	u1350
  3289  00778C                     u1351:
  3290  00778C  EFBE  F03B         	goto	l2134
  3291  007790                     u1350:
  3292  007790                     
  3293                           ;XLCD/openxlcd.c: 71:         WriteCmdXLCD(0x01);
  3294  007790  0E01               	movlw	1
  3295  007792  ECEE  F037         	call	_WriteCmdXLCD
  3296  007796                     l2138:
  3297  007796  EC91  F038         	call	_BusyXLCD	;wreg free
  3298  00779A  0900               	iorlw	0
  3299  00779C  A4D8               	btfss	status,2,c
  3300  00779E  EFD3  F03B         	goto	u1361
  3301  0077A2  EFD5  F03B         	goto	u1360
  3302  0077A6                     u1361:
  3303  0077A6  EFCB  F03B         	goto	l2138
  3304  0077AA                     u1360:
  3305  0077AA                     
  3306                           ;XLCD/openxlcd.c: 75:         WriteCmdXLCD(0b00000100);
  3307  0077AA  0E04               	movlw	4
  3308  0077AC  ECEE  F037         	call	_WriteCmdXLCD
  3309  0077B0                     l2142:
  3310  0077B0  EC91  F038         	call	_BusyXLCD	;wreg free
  3311  0077B4  0900               	iorlw	0
  3312  0077B6  A4D8               	btfss	status,2,c
  3313  0077B8  EFE0  F03B         	goto	u1371
  3314  0077BC  EFE2  F03B         	goto	u1370
  3315  0077C0                     u1371:
  3316  0077C0  EFD8  F03B         	goto	l2142
  3317  0077C4                     u1370:
  3318  0077C4                     
  3319                           ;XLCD/openxlcd.c: 79:         SetDDRamAddr(0x80);
  3320  0077C4  0E80               	movlw	128
  3321  0077C6  EC2B  F039         	call	_SetDDRamAddr
  3322  0077CA  0012               	return		;funcret
  3323  0077CC                     __end_of_OpenXLCD:
  3324                           	opt callstack 0
  3325                           
  3326 ;; *************** function _WriteCmdXLCD *****************
  3327 ;; Defined at:
  3328 ;;		line 13 in file "XLCD/wcmdxlcd.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  cmd             1    wreg     unsigned char 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  cmd             1    0[COMRAM] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0
  3343 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3345 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3346 ;;Total ram usage:        1 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    1
  3349 ;; This function calls:
  3350 ;;		_DelayFor18TCY
  3351 ;; This function is called by:
  3352 ;;		_OpenXLCD
  3353 ;;		_main
  3354 ;;		_initLCD
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text22
  3359  006FDC                     __ptext22:
  3360                           	opt callstack 0
  3361  006FDC                     _WriteCmdXLCD:
  3362                           	opt callstack 28
  3363                           
  3364                           ;incstack = 0
  3365                           ;WriteCmdXLCD@cmd stored from wreg
  3366  006FDC  6E01               	movwf	WriteCmdXLCD@cmd^0,c
  3367  006FDE                     
  3368                           ;XLCD/wcmdxlcd.c: 13: void WriteCmdXLCD(unsigned char cmd);XLCD/wcmdxlcd.c: 14: {;XLCD/w
      +                          cmdxlcd.c: 32:         TRISD &= 0xf0;
  3369  006FDE  0EF0               	movlw	240
  3370  006FE0  1695               	andwf	149,f,c	;volatile
  3371                           
  3372                           ;XLCD/wcmdxlcd.c: 33:         PORTD &= 0xf0;
  3373  006FE2  0EF0               	movlw	240
  3374  006FE4  1683               	andwf	131,f,c	;volatile
  3375                           
  3376                           ;XLCD/wcmdxlcd.c: 34:         PORTD |= (cmd>>4)&0x0f;
  3377  006FE6  3801               	swapf	WriteCmdXLCD@cmd^0,w,c
  3378  006FE8  0B0F               	andlw	15
  3379  006FEA  0B0F               	andlw	15
  3380  006FEC  1283               	iorwf	131,f,c	;volatile
  3381  006FEE                     
  3382                           ;XLCD/wcmdxlcd.c: 36:         LATEbits.LATE1 = 0;
  3383  006FEE  928D               	bcf	141,1,c	;volatile
  3384  006FF0                     
  3385                           ;XLCD/wcmdxlcd.c: 37:         LATEbits.LATE0 = 0;
  3386  006FF0  908D               	bcf	141,0,c	;volatile
  3387  006FF2                     
  3388                           ;XLCD/wcmdxlcd.c: 38:         DelayFor18TCY();
  3389  006FF2  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3390  006FF6                     
  3391                           ;XLCD/wcmdxlcd.c: 39:         LATEbits.LATE2 = 1;
  3392  006FF6  848D               	bsf	141,2,c	;volatile
  3393  006FF8                     
  3394                           ;XLCD/wcmdxlcd.c: 40:         DelayFor18TCY();
  3395  006FF8  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3396  006FFC                     
  3397                           ;XLCD/wcmdxlcd.c: 41:         LATEbits.LATE2 = 0;
  3398  006FFC  948D               	bcf	141,2,c	;volatile
  3399                           
  3400                           ;XLCD/wcmdxlcd.c: 46:         PORTD &= 0xf0;
  3401  006FFE  0EF0               	movlw	240
  3402  007000  1683               	andwf	131,f,c	;volatile
  3403                           
  3404                           ;XLCD/wcmdxlcd.c: 47:         PORTD |= cmd&0x0f;
  3405  007002  5001               	movf	WriteCmdXLCD@cmd^0,w,c
  3406  007004  0B0F               	andlw	15
  3407  007006  1283               	iorwf	131,f,c	;volatile
  3408  007008                     
  3409                           ;XLCD/wcmdxlcd.c: 49:         DelayFor18TCY();
  3410  007008  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3411  00700C                     
  3412                           ;XLCD/wcmdxlcd.c: 50:         LATEbits.LATE2 = 1;
  3413  00700C  848D               	bsf	141,2,c	;volatile
  3414  00700E                     
  3415                           ;XLCD/wcmdxlcd.c: 51:         DelayFor18TCY();
  3416  00700E  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3417  007012                     
  3418                           ;XLCD/wcmdxlcd.c: 52:         LATEbits.LATE2 = 0;
  3419  007012  948D               	bcf	141,2,c	;volatile
  3420                           
  3421                           ;XLCD/wcmdxlcd.c: 56:         TRISD |= 0x0f;
  3422  007014  0E0F               	movlw	15
  3423  007016  1295               	iorwf	149,f,c	;volatile
  3424  007018  0012               	return		;funcret
  3425  00701A                     __end_of_WriteCmdXLCD:
  3426                           	opt callstack 0
  3427                           
  3428 ;; *************** function _SetDDRamAddr *****************
  3429 ;; Defined at:
  3430 ;;		line 13 in file "XLCD/setddram.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  DDaddr          1    wreg     unsigned char 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  DDaddr          1    3[COMRAM] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3444 ;;      Params:         0       0       0       0       0       0       0       0       0
  3445 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3446 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3447 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3448 ;;Total ram usage:        4 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    1
  3451 ;; This function calls:
  3452 ;;		_DelayFor18TCY
  3453 ;; This function is called by:
  3454 ;;		_OpenXLCD
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text23
  3459  007256                     __ptext23:
  3460                           	opt callstack 0
  3461  007256                     _SetDDRamAddr:
  3462                           	opt callstack 27
  3463                           
  3464                           ;incstack = 0
  3465                           ;SetDDRamAddr@DDaddr stored from wreg
  3466  007256  6E04               	movwf	SetDDRamAddr@DDaddr^0,c
  3467  007258                     
  3468                           ;XLCD/setddram.c: 13: void SetDDRamAddr(unsigned char DDaddr);XLCD/setddram.c: 14: {;XLC
      +                          D/setddram.c: 32:         TRISD &= 0xf0;
  3469  007258  0EF0               	movlw	240
  3470  00725A  1695               	andwf	149,f,c	;volatile
  3471                           
  3472                           ;XLCD/setddram.c: 33:         PORTD &= 0xf0;
  3473  00725C  0EF0               	movlw	240
  3474  00725E  1683               	andwf	131,f,c	;volatile
  3475                           
  3476                           ;XLCD/setddram.c: 34:         PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  3477  007260  5004               	movf	SetDDRamAddr@DDaddr^0,w,c
  3478  007262  6E01               	movwf	??_SetDDRamAddr^0,c
  3479  007264  6A02               	clrf	(??_SetDDRamAddr+1)^0,c
  3480  007266  0E80               	movlw	128
  3481  007268  1201               	iorwf	??_SetDDRamAddr^0,f,c
  3482  00726A  0E00               	movlw	0
  3483  00726C  1202               	iorwf	(??_SetDDRamAddr+1)^0,f,c
  3484  00726E  0E04               	movlw	4
  3485  007270  6E03               	movwf	(??_SetDDRamAddr+2)^0,c
  3486  007272                     u1205:
  3487  007272  3402               	rlcf	(??_SetDDRamAddr+1)^0,w,c
  3488  007274  3202               	rrcf	(??_SetDDRamAddr+1)^0,f,c
  3489  007276  3201               	rrcf	??_SetDDRamAddr^0,f,c
  3490  007278  2E03               	decfsz	(??_SetDDRamAddr+2)^0,f,c
  3491  00727A  EF39  F039         	goto	u1205
  3492  00727E  5001               	movf	??_SetDDRamAddr^0,w,c
  3493  007280  0B0F               	andlw	15
  3494  007282  1283               	iorwf	131,f,c	;volatile
  3495  007284                     
  3496                           ;XLCD/setddram.c: 36:         LATEbits.LATE1 = 0;
  3497  007284  928D               	bcf	141,1,c	;volatile
  3498  007286                     
  3499                           ;XLCD/setddram.c: 37:         LATEbits.LATE0 = 0;
  3500  007286  908D               	bcf	141,0,c	;volatile
  3501  007288                     
  3502                           ;XLCD/setddram.c: 38:         DelayFor18TCY();
  3503  007288  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3504  00728C                     
  3505                           ;XLCD/setddram.c: 39:         LATEbits.LATE2 = 1;
  3506  00728C  848D               	bsf	141,2,c	;volatile
  3507  00728E                     
  3508                           ;XLCD/setddram.c: 40:         DelayFor18TCY();
  3509  00728E  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3510  007292                     
  3511                           ;XLCD/setddram.c: 41:         LATEbits.LATE2 = 0;
  3512  007292  948D               	bcf	141,2,c	;volatile
  3513                           
  3514                           ;XLCD/setddram.c: 46:         PORTD &= 0xf0;
  3515  007294  0EF0               	movlw	240
  3516  007296  1683               	andwf	131,f,c	;volatile
  3517                           
  3518                           ;XLCD/setddram.c: 47:         PORTD |= (DDaddr&0x0f);
  3519  007298  5004               	movf	SetDDRamAddr@DDaddr^0,w,c
  3520  00729A  0B0F               	andlw	15
  3521  00729C  1283               	iorwf	131,f,c	;volatile
  3522  00729E                     
  3523                           ;XLCD/setddram.c: 49:         DelayFor18TCY();
  3524  00729E  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3525  0072A2                     
  3526                           ;XLCD/setddram.c: 50:         LATEbits.LATE2 = 1;
  3527  0072A2  848D               	bsf	141,2,c	;volatile
  3528  0072A4                     
  3529                           ;XLCD/setddram.c: 51:         DelayFor18TCY();
  3530  0072A4  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3531  0072A8                     
  3532                           ;XLCD/setddram.c: 52:         LATEbits.LATE2 = 0;
  3533  0072A8  948D               	bcf	141,2,c	;volatile
  3534                           
  3535                           ;XLCD/setddram.c: 56:         TRISD |= 0x0f;
  3536  0072AA  0E0F               	movlw	15
  3537  0072AC  1295               	iorwf	149,f,c	;volatile
  3538  0072AE  0012               	return		;funcret
  3539  0072B0                     __end_of_SetDDRamAddr:
  3540                           	opt callstack 0
  3541                           
  3542 ;; *************** function _DelayPORXLCD *****************
  3543 ;; Defined at:
  3544 ;;		line 73 in file "main.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3558 ;;      Params:         0       0       0       0       0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3561 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    1
  3565 ;; This function calls:
  3566 ;;		_delay_ms
  3567 ;; This function is called by:
  3568 ;;		_OpenXLCD
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text24
  3573  006ECA                     __ptext24:
  3574                           	opt callstack 0
  3575  006ECA                     _DelayPORXLCD:
  3576                           	opt callstack 27
  3577  006ECA                     
  3578                           ;main.c: 74:     delay_ms(15);
  3579  006ECA  0E0F               	movlw	15
  3580  006ECC  6E01               	movwf	delay_ms@n^0,c
  3581  006ECE  0E00               	movlw	0
  3582  006ED0  6E02               	movwf	(delay_ms@n+1)^0,c
  3583  006ED2  0E00               	movlw	0
  3584  006ED4  6E03               	movwf	(delay_ms@n+2)^0,c
  3585  006ED6  0E00               	movlw	0
  3586  006ED8  6E04               	movwf	(delay_ms@n+3)^0,c
  3587  006EDA  EC2C  F038         	call	_delay_ms	;wreg free
  3588  006EDE  0012               	return		;funcret
  3589  006EE0                     __end_of_DelayPORXLCD:
  3590                           	opt callstack 0
  3591                           
  3592 ;; *************** function _delay_ms *****************
  3593 ;; Defined at:
  3594 ;;		line 157 in file "../AlteriADC.X/Alteri.h"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  n               4    0[COMRAM] long 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3608 ;;      Params:         4       0       0       0       0       0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3610 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3611 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3612 ;;Total ram usage:        5 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_main
  3618 ;;		_DelayPORXLCD
  3619 ;;		_DelayXLCD
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text25
  3624  007058                     __ptext25:
  3625                           	opt callstack 0
  3626  007058                     _delay_ms:
  3627                           	opt callstack 27
  3628  007058                     
  3629                           ;../AlteriADC.X/Alteri.h: 157:  extern void delay_ms(long int n);../AlteriADC.X/Alteri.h
      +                          : 158:     {;../AlteriADC.X/Alteri.h: 159:         while(n-- !=0){
  3630  007058  EF36  F038         	goto	l1808
  3631  00705C                     l1806:
  3632                           
  3633                           ;../AlteriADC.X/Alteri.h: 160:             _delay((unsigned long)((1)*(48000000/4000.0))
      +                          );
  3634  00705C  0E10               	movlw	16
  3635  00705E  6E05               	movwf	??_delay_ms^0,c
  3636  007060  0E94               	movlw	148
  3637  007062                     u1677:
  3638  007062  2EE8               	decfsz	wreg,f,c
  3639  007064  D7FE               	bra	u1677
  3640  007066  2E05               	decfsz	??_delay_ms^0,f,c
  3641  007068  D7FC               	bra	u1677
  3642  00706A  D000               	nop2	
  3643  00706C                     l1808:
  3644                           
  3645                           ;../AlteriADC.X/Alteri.h: 159:         while(n-- !=0){
  3646  00706C  0EFF               	movlw	255
  3647  00706E  2601               	addwf	delay_ms@n^0,f,c
  3648  007070  0EFF               	movlw	255
  3649  007072  2202               	addwfc	(delay_ms@n+1)^0,f,c
  3650  007074  0EFF               	movlw	255
  3651  007076  2203               	addwfc	(delay_ms@n+2)^0,f,c
  3652  007078  0EFF               	movlw	255
  3653  00707A  2204               	addwfc	(delay_ms@n+3)^0,f,c
  3654  00707C  2801               	incf	delay_ms@n^0,w,c
  3655  00707E  E10A               	bnz	u1041
  3656  007080  2802               	incf	(delay_ms@n+1)^0,w,c
  3657  007082  E108               	bnz	u1041
  3658  007084  2803               	incf	(delay_ms@n+2)^0,w,c
  3659  007086  E106               	bnz	u1041
  3660  007088  2804               	incf	(delay_ms@n+3)^0,w,c
  3661  00708A  A4D8               	btfss	status,2,c
  3662  00708C  EF4A  F038         	goto	u1041
  3663  007090  EF4C  F038         	goto	u1040
  3664  007094                     u1041:
  3665  007094  EF2E  F038         	goto	l1806
  3666  007098                     u1040:
  3667  007098  0012               	return		;funcret
  3668  00709A                     __end_of_delay_ms:
  3669                           	opt callstack 0
  3670                           
  3671 ;; *************** function _BusyXLCD *****************
  3672 ;; Defined at:
  3673 ;;		line 11 in file "XLCD/busyxlcd.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      unsigned char 
  3680 ;; Registers used:
  3681 ;;		wreg, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3687 ;;      Params:         0       0       0       0       0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3690 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3691 ;;Total ram usage:        0 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    1
  3694 ;; This function calls:
  3695 ;;		_DelayFor18TCY
  3696 ;; This function is called by:
  3697 ;;		_OpenXLCD
  3698 ;;		_putrsXLCD
  3699 ;;		_putsXLCD
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text26
  3704  007122                     __ptext26:
  3705                           	opt callstack 0
  3706  007122                     _BusyXLCD:
  3707                           	opt callstack 28
  3708  007122                     
  3709                           ;XLCD/busyxlcd.c: 13:         LATEbits.LATE1 = 1;
  3710  007122  828D               	bsf	141,1,c	;volatile
  3711                           
  3712                           ;XLCD/busyxlcd.c: 14:         LATEbits.LATE0 = 0;
  3713  007124  908D               	bcf	141,0,c	;volatile
  3714  007126                     
  3715                           ;XLCD/busyxlcd.c: 15:         DelayFor18TCY();
  3716  007126  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3717  00712A                     
  3718                           ;XLCD/busyxlcd.c: 16:         LATEbits.LATE2 = 1;
  3719  00712A  848D               	bsf	141,2,c	;volatile
  3720                           
  3721                           ;XLCD/busyxlcd.c: 17:         DelayFor18TCY();
  3722  00712C  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3723  007130                     
  3724                           ;XLCD/busyxlcd.c: 35:         if(PORTD&0x08)
  3725  007130  A683               	btfss	131,3,c	;volatile
  3726  007132  EF9D  F038         	goto	u1191
  3727  007136  EF9F  F038         	goto	u1190
  3728  00713A                     u1191:
  3729  00713A  EFAA  F038         	goto	l9
  3730  00713E                     u1190:
  3731  00713E                     
  3732                           ;XLCD/busyxlcd.c: 37:         {;XLCD/busyxlcd.c: 38:                 LATEbits.LATE2 = 0;
  3733  00713E  948D               	bcf	141,2,c	;volatile
  3734  007140                     
  3735                           ;XLCD/busyxlcd.c: 39:                 DelayFor18TCY();
  3736  007140  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3737  007144                     
  3738                           ;XLCD/busyxlcd.c: 40:                 LATEbits.LATE2 = 1;
  3739  007144  848D               	bsf	141,2,c	;volatile
  3740                           
  3741                           ;XLCD/busyxlcd.c: 41:                 DelayFor18TCY();
  3742  007146  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3743  00714A                     
  3744                           ;XLCD/busyxlcd.c: 42:                 LATEbits.LATE2 = 0;
  3745  00714A  948D               	bcf	141,2,c	;volatile
  3746  00714C                     
  3747                           ;XLCD/busyxlcd.c: 43:                 LATEbits.LATE1 = 0;
  3748  00714C  928D               	bcf	141,1,c	;volatile
  3749  00714E                     
  3750                           ;XLCD/busyxlcd.c: 44:                 return 1;
  3751  00714E  0E01               	movlw	1
  3752  007150  EFB3  F038         	goto	l10
  3753  007154                     l9:
  3754                           
  3755                           ;XLCD/busyxlcd.c: 47:         {;XLCD/busyxlcd.c: 48:                 LATEbits.LATE2 = 0;
  3756  007154  948D               	bcf	141,2,c	;volatile
  3757  007156                     
  3758                           ;XLCD/busyxlcd.c: 49:                 DelayFor18TCY();
  3759  007156  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3760  00715A                     
  3761                           ;XLCD/busyxlcd.c: 50:                 LATEbits.LATE2 = 1;
  3762  00715A  848D               	bsf	141,2,c	;volatile
  3763                           
  3764                           ;XLCD/busyxlcd.c: 51:                 DelayFor18TCY();
  3765  00715C  EC51  F037         	call	_DelayFor18TCY	;wreg free
  3766  007160                     
  3767                           ;XLCD/busyxlcd.c: 52:                 LATEbits.LATE2 = 0;
  3768  007160  948D               	bcf	141,2,c	;volatile
  3769  007162                     
  3770                           ;XLCD/busyxlcd.c: 53:                 LATEbits.LATE1 = 0;
  3771  007162  928D               	bcf	141,1,c	;volatile
  3772  007164                     
  3773                           ;XLCD/busyxlcd.c: 54:                 return 0;
  3774  007164  0E00               	movlw	0
  3775  007166                     l10:
  3776  007166  0012               	return		;funcret
  3777  007168                     __end_of_BusyXLCD:
  3778                           	opt callstack 0
  3779                           
  3780 ;; *************** function _DelayFor18TCY *****************
  3781 ;; Defined at:
  3782 ;;		line 70 in file "main.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3796 ;;      Params:         0       0       0       0       0       0       0       0       0
  3797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3799 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3800 ;;Total ram usage:        0 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_BusyXLCD
  3806 ;;		_SetDDRamAddr
  3807 ;;		_WriteCmdXLCD
  3808 ;;		_WriteDataXLCD
  3809 ;;		_ReadAddrXLCD
  3810 ;;		_ReadDataXLCD
  3811 ;;		_SetCGRamAddr
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text27
  3816  006EA2                     __ptext27:
  3817                           	opt callstack 0
  3818  006EA2                     _DelayFor18TCY:
  3819                           	opt callstack 28
  3820  006EA2                     
  3821                           ;main.c: 71:   _delay(240);
  3822  006EA2  0E50               	movlw	80
  3823  006EA4                     u1687:
  3824  006EA4  2EE8               	decfsz	wreg,f,c
  3825  006EA6  D7FE               	bra	u1687
  3826  006EA8  0012               	return		;funcret
  3827  006EAA                     __end_of_DelayFor18TCY:
  3828                           	opt callstack 0
  3829                           
  3830 ;; *************** function _initADC *****************
  3831 ;; Defined at:
  3832 ;;		line 35 in file "main.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3846 ;;      Params:         0       0       0       0       0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3849 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3850 ;;Total ram usage:        0 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text28
  3860  006EAA                     __ptext28:
  3861                           	opt callstack 0
  3862  006EAA                     _initADC:
  3863                           	opt callstack 30
  3864  006EAA                     
  3865                           ;main.c: 36:     ADCON0 = 0b00000001;
  3866  006EAA  0E01               	movlw	1
  3867  006EAC  6EC2               	movwf	194,c	;volatile
  3868                           
  3869                           ;main.c: 38:     ADCON1 = 0b00001110;
  3870  006EAE  0E0E               	movlw	14
  3871  006EB0  6EC1               	movwf	193,c	;volatile
  3872                           
  3873                           ;main.c: 40:     ADCON2 = 0b10111100;
  3874  006EB2  0EBC               	movlw	188
  3875  006EB4  6EC0               	movwf	192,c	;volatile
  3876  006EB6  0012               	return		;funcret
  3877  006EB8                     __end_of_initADC:
  3878                           	opt callstack 0
  3879                           
  3880 ;; *************** function _conversionADC *****************
  3881 ;; Defined at:
  3882 ;;		line 49 in file "main.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;		None
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  resultado       2    4[COMRAM] unsigned int 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  2    0[COMRAM] unsigned short 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3896 ;;      Params:         2       0       0       0       0       0       0       0       0
  3897 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3898 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3899 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3900 ;;Total ram usage:        6 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_main
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text29
  3910  006F42                     __ptext29:
  3911                           	opt callstack 0
  3912  006F42                     _conversionADC:
  3913                           	opt callstack 30
  3914  006F42                     
  3915                           ;main.c: 50:     unsigned int resultado;;main.c: 51:     ADCON0bits.GO_DONE = 1;
  3916  006F42  82C2               	bsf	194,1,c	;volatile
  3917  006F44                     l215:
  3918  006F44  B2C2               	btfsc	194,1,c	;volatile
  3919  006F46  EFA7  F037         	goto	u1431
  3920  006F4A  EFA9  F037         	goto	u1430
  3921  006F4E                     u1431:
  3922  006F4E  EFA2  F037         	goto	l215
  3923  006F52                     u1430:
  3924  006F52                     
  3925                           ;main.c: 53:     resultado = (ADRESH<<8) + ADRESL;
  3926  006F52  50C4               	movf	196,w,c	;volatile
  3927  006F54  6E04               	movwf	(??_conversionADC+1)^0,c
  3928  006F56  6A03               	clrf	??_conversionADC^0,c
  3929  006F58  50C3               	movf	195,w,c	;volatile
  3930  006F5A  2403               	addwf	??_conversionADC^0,w,c
  3931  006F5C  6E05               	movwf	conversionADC@resultado^0,c
  3932  006F5E  0E00               	movlw	0
  3933  006F60  2004               	addwfc	(??_conversionADC+1)^0,w,c
  3934  006F62  6E06               	movwf	(conversionADC@resultado+1)^0,c
  3935  006F64                     
  3936                           ;main.c: 54:     return resultado;
  3937  006F64  C005  F001         	movff	conversionADC@resultado,?_conversionADC
  3938  006F68  C006  F002         	movff	conversionADC@resultado+1,?_conversionADC+1
  3939  006F6C  0012               	return		;funcret
  3940  006F6E                     __end_of_conversionADC:
  3941                           	opt callstack 0
  3942                           
  3943 ;; *************** function _ChecarLEDs *****************
  3944 ;; Defined at:
  3945 ;;		line 57 in file "main.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  res             2    0[COMRAM] unsigned short 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3959 ;;      Params:         2       0       0       0       0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3961 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3962 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3963 ;;Total ram usage:        3 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text30
  3973  0077CC                     __ptext30:
  3974                           	opt callstack 0
  3975  0077CC                     _ChecarLEDs:
  3976                           	opt callstack 30
  3977  0077CC                     
  3978                           ;main.c: 58:     LATAbits.LA1 = (res&(1<<9)) == 0 ? 0 : 1;
  3979  0077CC  B202               	btfsc	(ChecarLEDs@res+1)^0,1,c
  3980  0077CE  EFEB  F03B         	goto	u1441
  3981  0077D2  EFEF  F03B         	goto	u1440
  3982  0077D6                     u1441:
  3983  0077D6  6A03               	clrf	??_ChecarLEDs^0,c
  3984  0077D8  2A03               	incf	??_ChecarLEDs^0,f,c
  3985  0077DA  EFF0  F03B         	goto	u1458
  3986  0077DE                     u1440:
  3987  0077DE  6A03               	clrf	??_ChecarLEDs^0,c
  3988  0077E0                     u1458:
  3989  0077E0  4603               	rlncf	??_ChecarLEDs^0,f,c
  3990  0077E2  5089               	movf	137,w,c	;volatile
  3991  0077E4  1803               	xorwf	??_ChecarLEDs^0,w,c
  3992  0077E6  0BFD               	andlw	-3
  3993  0077E8  1803               	xorwf	??_ChecarLEDs^0,w,c
  3994  0077EA  6E89               	movwf	137,c	;volatile
  3995                           
  3996                           ;main.c: 59:     LATAbits.LA2 = (res&(1<<8)) == 0 ? 0 : 1;
  3997  0077EC  B002               	btfsc	(ChecarLEDs@res+1)^0,0,c
  3998  0077EE  EFFB  F03B         	goto	u1461
  3999  0077F2  EFFF  F03B         	goto	u1460
  4000  0077F6                     u1461:
  4001  0077F6  6A03               	clrf	??_ChecarLEDs^0,c
  4002  0077F8  2A03               	incf	??_ChecarLEDs^0,f,c
  4003  0077FA  EF00  F03C         	goto	u1478
  4004  0077FE                     u1460:
  4005  0077FE  6A03               	clrf	??_ChecarLEDs^0,c
  4006  007800                     u1478:
  4007  007800  4603               	rlncf	??_ChecarLEDs^0,f,c
  4008  007802  4603               	rlncf	??_ChecarLEDs^0,f,c
  4009  007804  5089               	movf	137,w,c	;volatile
  4010  007806  1803               	xorwf	??_ChecarLEDs^0,w,c
  4011  007808  0BFB               	andlw	-5
  4012  00780A  1803               	xorwf	??_ChecarLEDs^0,w,c
  4013  00780C  6E89               	movwf	137,c	;volatile
  4014                           
  4015                           ;main.c: 60:     LATAbits.LA3 = (res&(1<<7)) == 0 ? 0 : 1;
  4016  00780E  BE01               	btfsc	ChecarLEDs@res^0,7,c
  4017  007810  EF0C  F03C         	goto	u1481
  4018  007814  EF10  F03C         	goto	u1480
  4019  007818                     u1481:
  4020  007818  6A03               	clrf	??_ChecarLEDs^0,c
  4021  00781A  2A03               	incf	??_ChecarLEDs^0,f,c
  4022  00781C  EF11  F03C         	goto	u1498
  4023  007820                     u1480:
  4024  007820  6A03               	clrf	??_ChecarLEDs^0,c
  4025  007822                     u1498:
  4026  007822  4603               	rlncf	??_ChecarLEDs^0,f,c
  4027  007824  4603               	rlncf	??_ChecarLEDs^0,f,c
  4028  007826  4603               	rlncf	??_ChecarLEDs^0,f,c
  4029  007828  5089               	movf	137,w,c	;volatile
  4030  00782A  1803               	xorwf	??_ChecarLEDs^0,w,c
  4031  00782C  0BF7               	andlw	-9
  4032  00782E  1803               	xorwf	??_ChecarLEDs^0,w,c
  4033  007830  6E89               	movwf	137,c	;volatile
  4034                           
  4035                           ;main.c: 61:     LATAbits.LA4 = (res&(1<<6)) == 0 ? 0 : 1;
  4036  007832  BC01               	btfsc	ChecarLEDs@res^0,6,c
  4037  007834  EF1E  F03C         	goto	u1501
  4038  007838  EF22  F03C         	goto	u1500
  4039  00783C                     u1501:
  4040  00783C  6A03               	clrf	??_ChecarLEDs^0,c
  4041  00783E  2A03               	incf	??_ChecarLEDs^0,f,c
  4042  007840  EF23  F03C         	goto	u1518
  4043  007844                     u1500:
  4044  007844  6A03               	clrf	??_ChecarLEDs^0,c
  4045  007846                     u1518:
  4046  007846  3A03               	swapf	??_ChecarLEDs^0,f,c
  4047  007848  5089               	movf	137,w,c	;volatile
  4048  00784A  1803               	xorwf	??_ChecarLEDs^0,w,c
  4049  00784C  0BEF               	andlw	-17
  4050  00784E  1803               	xorwf	??_ChecarLEDs^0,w,c
  4051  007850  6E89               	movwf	137,c	;volatile
  4052                           
  4053                           ;main.c: 62:     LATAbits.LA5 = (res&(1<<5)) == 0 ? 0 : 1;
  4054  007852  BA01               	btfsc	ChecarLEDs@res^0,5,c
  4055  007854  EF2E  F03C         	goto	u1521
  4056  007858  EF32  F03C         	goto	u1520
  4057  00785C                     u1521:
  4058  00785C  6A03               	clrf	??_ChecarLEDs^0,c
  4059  00785E  2A03               	incf	??_ChecarLEDs^0,f,c
  4060  007860  EF33  F03C         	goto	u1538
  4061  007864                     u1520:
  4062  007864  6A03               	clrf	??_ChecarLEDs^0,c
  4063  007866                     u1538:
  4064  007866  3A03               	swapf	??_ChecarLEDs^0,f,c
  4065  007868  4603               	rlncf	??_ChecarLEDs^0,f,c
  4066  00786A  5089               	movf	137,w,c	;volatile
  4067  00786C  1803               	xorwf	??_ChecarLEDs^0,w,c
  4068  00786E  0BDF               	andlw	-33
  4069  007870  1803               	xorwf	??_ChecarLEDs^0,w,c
  4070  007872  6E89               	movwf	137,c	;volatile
  4071                           
  4072                           ;main.c: 63:     LATBbits.LB0 = (res&(1<<4)) == 0 ? 0 : 1;
  4073  007874  B801               	btfsc	ChecarLEDs@res^0,4,c
  4074  007876  EF3F  F03C         	goto	u1541
  4075  00787A  EF43  F03C         	goto	u1540
  4076  00787E                     u1541:
  4077  00787E  6A03               	clrf	??_ChecarLEDs^0,c
  4078  007880  2A03               	incf	??_ChecarLEDs^0,f,c
  4079  007882  EF44  F03C         	goto	u1558
  4080  007886                     u1540:
  4081  007886  6A03               	clrf	??_ChecarLEDs^0,c
  4082  007888                     u1558:
  4083  007888  508A               	movf	138,w,c	;volatile
  4084  00788A  1803               	xorwf	??_ChecarLEDs^0,w,c
  4085  00788C  0BFE               	andlw	-2
  4086  00788E  1803               	xorwf	??_ChecarLEDs^0,w,c
  4087  007890  6E8A               	movwf	138,c	;volatile
  4088                           
  4089                           ;main.c: 64:     LATBbits.LB1 = (res&(1<<3)) == 0 ? 0 : 1;
  4090  007892  B601               	btfsc	ChecarLEDs@res^0,3,c
  4091  007894  EF4E  F03C         	goto	u1561
  4092  007898  EF52  F03C         	goto	u1560
  4093  00789C                     u1561:
  4094  00789C  6A03               	clrf	??_ChecarLEDs^0,c
  4095  00789E  2A03               	incf	??_ChecarLEDs^0,f,c
  4096  0078A0  EF53  F03C         	goto	u1578
  4097  0078A4                     u1560:
  4098  0078A4  6A03               	clrf	??_ChecarLEDs^0,c
  4099  0078A6                     u1578:
  4100  0078A6  4603               	rlncf	??_ChecarLEDs^0,f,c
  4101  0078A8  508A               	movf	138,w,c	;volatile
  4102  0078AA  1803               	xorwf	??_ChecarLEDs^0,w,c
  4103  0078AC  0BFD               	andlw	-3
  4104  0078AE  1803               	xorwf	??_ChecarLEDs^0,w,c
  4105  0078B0  6E8A               	movwf	138,c	;volatile
  4106                           
  4107                           ;main.c: 65:     LATBbits.LB2 = (res&(1<<2)) == 0 ? 0 : 1;
  4108  0078B2  B401               	btfsc	ChecarLEDs@res^0,2,c
  4109  0078B4  EF5E  F03C         	goto	u1581
  4110  0078B8  EF62  F03C         	goto	u1580
  4111  0078BC                     u1581:
  4112  0078BC  6A03               	clrf	??_ChecarLEDs^0,c
  4113  0078BE  2A03               	incf	??_ChecarLEDs^0,f,c
  4114  0078C0  EF63  F03C         	goto	u1598
  4115  0078C4                     u1580:
  4116  0078C4  6A03               	clrf	??_ChecarLEDs^0,c
  4117  0078C6                     u1598:
  4118  0078C6  4603               	rlncf	??_ChecarLEDs^0,f,c
  4119  0078C8  4603               	rlncf	??_ChecarLEDs^0,f,c
  4120  0078CA  508A               	movf	138,w,c	;volatile
  4121  0078CC  1803               	xorwf	??_ChecarLEDs^0,w,c
  4122  0078CE  0BFB               	andlw	-5
  4123  0078D0  1803               	xorwf	??_ChecarLEDs^0,w,c
  4124  0078D2  6E8A               	movwf	138,c	;volatile
  4125                           
  4126                           ;main.c: 66:     LATBbits.LB3 = (res&(1<<1)) == 0 ? 0 : 1;
  4127  0078D4  B201               	btfsc	ChecarLEDs@res^0,1,c
  4128  0078D6  EF6F  F03C         	goto	u1601
  4129  0078DA  EF73  F03C         	goto	u1600
  4130  0078DE                     u1601:
  4131  0078DE  6A03               	clrf	??_ChecarLEDs^0,c
  4132  0078E0  2A03               	incf	??_ChecarLEDs^0,f,c
  4133  0078E2  EF74  F03C         	goto	u1618
  4134  0078E6                     u1600:
  4135  0078E6  6A03               	clrf	??_ChecarLEDs^0,c
  4136  0078E8                     u1618:
  4137  0078E8  4603               	rlncf	??_ChecarLEDs^0,f,c
  4138  0078EA  4603               	rlncf	??_ChecarLEDs^0,f,c
  4139  0078EC  4603               	rlncf	??_ChecarLEDs^0,f,c
  4140  0078EE  508A               	movf	138,w,c	;volatile
  4141  0078F0  1803               	xorwf	??_ChecarLEDs^0,w,c
  4142  0078F2  0BF7               	andlw	-9
  4143  0078F4  1803               	xorwf	??_ChecarLEDs^0,w,c
  4144  0078F6  6E8A               	movwf	138,c	;volatile
  4145                           
  4146                           ;main.c: 67:     LATBbits.LB4 = (res&(1<<0)) == 0 ? 0 : 1;
  4147  0078F8  B001               	btfsc	ChecarLEDs@res^0,0,c
  4148  0078FA  EF81  F03C         	goto	u1621
  4149  0078FE  EF85  F03C         	goto	u1620
  4150  007902                     u1621:
  4151  007902  6A03               	clrf	??_ChecarLEDs^0,c
  4152  007904  2A03               	incf	??_ChecarLEDs^0,f,c
  4153  007906  EF86  F03C         	goto	u1638
  4154  00790A                     u1620:
  4155  00790A  6A03               	clrf	??_ChecarLEDs^0,c
  4156  00790C                     u1638:
  4157  00790C  3A03               	swapf	??_ChecarLEDs^0,f,c
  4158  00790E  508A               	movf	138,w,c	;volatile
  4159  007910  1803               	xorwf	??_ChecarLEDs^0,w,c
  4160  007912  0BEF               	andlw	-17
  4161  007914  1803               	xorwf	??_ChecarLEDs^0,w,c
  4162  007916  6E8A               	movwf	138,c	;volatile
  4163  007918  0012               	return		;funcret
  4164  00791A                     __end_of_ChecarLEDs:
  4165                           	opt callstack 0
  4166                           
  4167                           	psect	rparam
  4168  0000                     tosu	equ	0xFFF
  4169                           tosh	equ	0xFFE
  4170                           tosl	equ	0xFFD
  4171                           stkptr	equ	0xFFC
  4172                           pclatu	equ	0xFFB
  4173                           pclath	equ	0xFFA
  4174                           pcl	equ	0xFF9
  4175                           tblptru	equ	0xFF8
  4176                           tblptrh	equ	0xFF7
  4177                           tblptrl	equ	0xFF6
  4178                           tablat	equ	0xFF5
  4179                           prodh	equ	0xFF4
  4180                           prodl	equ	0xFF3
  4181                           indf0	equ	0xFEF
  4182                           postinc0	equ	0xFEE
  4183                           postdec0	equ	0xFED
  4184                           preinc0	equ	0xFEC
  4185                           plusw0	equ	0xFEB
  4186                           fsr0h	equ	0xFEA
  4187                           fsr0l	equ	0xFE9
  4188                           wreg	equ	0xFE8
  4189                           indf1	equ	0xFE7
  4190                           postinc1	equ	0xFE6
  4191                           postdec1	equ	0xFE5
  4192                           preinc1	equ	0xFE4
  4193                           plusw1	equ	0xFE3
  4194                           fsr1h	equ	0xFE2
  4195                           fsr1l	equ	0xFE1
  4196                           bsr	equ	0xFE0
  4197                           indf2	equ	0xFDF
  4198                           postinc2	equ	0xFDE
  4199                           postdec2	equ	0xFDD
  4200                           preinc2	equ	0xFDC
  4201                           plusw2	equ	0xFDB
  4202                           fsr2h	equ	0xFDA
  4203                           fsr2l	equ	0xFD9
  4204                           status	equ	0xFD8


Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     12      57
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1000_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _putsXLCD->_WriteDataXLCD
    _initLCD->_OpenXLCD
    _putrsXLCD->_WriteDataXLCD
    _DelayPORXLCD->_delay_ms

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9016
                                             10 BANK0      2     2      0
                         _ChecarLEDs
                       _WriteCmdXLCD
                      _conversionADC
                           _delay_ms
                            _initADC
                            _initLCD
                            _initLED
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7624
                                             89 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7271
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    6899
                                             59 COMRAM    22    16      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3759
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1198
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     165
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     569
                           _OpenXLCD
                       _WriteCmdXLCD
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     165
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             2     2      0     360
                                              5 COMRAM     2     2      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      44
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0     250
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             5     1      4     250
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conversionADC                                        6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ChecarLEDs                                           3     1      2     296
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ChecarLEDs
   _WriteCmdXLCD
     _DelayFor18TCY
   _conversionADC
   _delay_ms
   _initADC
   _initLCD
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
         _delay_ms
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
   _initLED
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C      39       5       35.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      98      20        0.0%
DATA                 0      0      98       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 19 15:30:24 2020

                      l9 7154                       l10 7166                       l53 77CA  
                     l66 71B0                       l79 70DC              __CFG_BOR$ON 000000  
    ___wmul@multiplicand 0003              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000                      l130 7018                      l212 6F1A  
                    l221 7918                      l141 7056                      l206 6EC8  
                    l215 6F44                      l119 72AE                      l224 6EA8  
                    l312 7308                      l209 6EB6                      l313 7310  
                    l218 6F6C                      l306 7FFE                      l227 6EDE  
                    l316 6F40                      l262 7408                      l271 7AEA  
                    l264 7444                      l193 7098                      l259 73C6  
                    l269 7AE2                      l293 7DA8                      l279 7CAA  
                    l761 76CE                      l754 76AE                      l771 75DE  
                    l764 75BE             __CFG_CPB$OFF 000000                      u900 73B2  
                    u901 73AE                      u830 7458                      u910 7408  
                    u831 7454                      u911 7404                      u840 746A  
                    u920 7418                      u841 7466                      u921 7414  
                    u930 6FD4                      u850 7492                      u931 6FCE  
                    u851 748E                      u940 6FD6                      u860 74C8  
                    u861 74C4                      u870 7120                      u951 75E6  
                    u871 711C                      u960 760A                      u880 6F96  
                    u961 7606                      u881 6F92                      u970 7634  
                    u890 7390                      u971 7630                      u891 738C  
                    u980 7674                      u981 7670                      u990 752E  
                    u991 752A                      _pad 7380    __size_of_WriteCmdXLCD 003E  
                    wreg 000FE8               _ChecarLEDs 77CC             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l1021 6FDA                     l1015 7AA0  
                   l2000 7CD0                     l1018 7AA8                     l2010 7D04  
                   l2002 7CDE                     l2100 76DE                     l1044 750E  
                   l1052 7120                     l2020 7D26                     l2012 7D16  
                   l2004 7CF0                     l1029 7202                     l2110 76EA  
                   l2102 76E0                     l1062 6EA0                     l2006 7CF4  
                   l2120 771A                     l2112 76F0                     l2104 76E2  
                   l2040 7DDE                     l2032 7D42                     l2024 7D2E  
                   l2016 7D1E                     l2008 7D00                     l2200 7242  
                   l2130 7762                     l2122 772E                     l2114 7700  
                   l2106 76E4                     l2050 7E5E                     l2042 7E14  
                   l2034 7D96                     l1059 7254                     l2204 77CC  
                   l2140 77AA                     l2132 7776                     l2124 7742  
                   l2116 7706                     l2108 76E6                     l1068 6FA2  
                   l2060 7F24                     l2044 7E22                     l2036 7DB8  
                   l2028 7D36                     l2142 77B0                     l2134 777C  
                   l2126 7748                     l2118 7714                     l2150 716C  
                   l2070 7FA2                     l2054 7EA4                     l2046 7E30  
                   l2038 7DBA                     l2144 77C4                     l2136 7790  
                   l2128 775C                     l2152 7180                     l2064 7F5C  
                   l2048 7E50                     l2056 7EB6                     l2080 7FC8  
                   l2160 72B8                     l2138 7796                     l2154 7190  
                   l2170 70B2                     l2082 7FEC                     l2066 7F80  
                   l2074 7FAE                     l2058 7EDA                     l2162 72C6  
                   l2180 6EAA                     l2156 7194                     l2148 7168  
                   l2172 70C0                     l2076 7FBC                     l2068 7F8E  
                   l2164 72EC                     l2094 76D2                     l2182 6EB8  
                   l2174 70C4                     l2166 709A                     l1702 70DE  
                   l1710 6F6E                     l2350 7D68                     l2158 72B0  
                   l2184 6F42                     l2096 76DA                     l2176 6EF6  
                   l2168 709E                     l2352 79D6                     l1704 70EA  
                   l1712 6F7A                     l1720 7380                     l2192 7204  
                   l2280 7312                     l2186 6F52                     l1802 6EA2  
                   l2098 76DC                     l2178 6F0E                     l1706 70FC  
                   l1714 6F7E                     l1730 73D2                     l1722 7390  
                   l1810 7AAA                     l2194 7216                     l2290 7346  
                   l2282 7316                     l2188 6F64                     l1900 7144  
                   l1804 7058                     l1708 7100                     l1716 6F96  
                   l1732 73E6                     l1724 73A4                     l1820 7B1A  
                   l1812 7ABA                     l2196 721E                     l2292 734C  
                   l2284 731A                     l1902 714A                     l1806 705C  
                   l1742 6FA4                     l1734 73EA                     l1726 73B2  
                   l1830 7BAA                     l1822 7B22                     l1814 7ABC  
                   l2198 7226                     l2294 7358                     l2286 731E  
                   l1920 7164                     l1912 7156                     l1904 714C  
                   l1808 706C                     l1760 7626                     l1752 75E0  
                   l1736 7418                     l1728 73BE                     l1840 7C72  
                   l1824 7B28                     l1832 7C0E                     l1816 7AD6  
                   l2296 7364                     l2288 732A                     l1914 715A  
                   l1906 714E                     l1930 6FF0                     l1746 6F1C  
                   l1850 7932                     l1770 7696                     l1762 7634  
                   l1754 75EC                     l1690 7458                     l1738 742C  
                   l1834 7C20                     l1842 7C82                     l1826 7B9E  
                   l1818 7B12                     l1916 7160                     l1924 6ECA  
                   l1940 7008                     l1932 6FF2                     l1748 6F38  
                   l1852 7936                     l1772 76A8                     l1764 7646  
                   l1756 760A                     l1780 754A                     l1692 746A  
                   l1836 7C3E                     l1828 7BA4                     l1918 7162  
                   l1950 7258                     l1942 700C                     l1934 6FF6  
                   l1926 6FDE                     l1790 71B2                     l1870 79EC  
                   l1862 7992                     l1854 7952                     l1846 791A  
                   l1766 7674                     l1758 7612                     l1782 7558  
                   l1774 7510                     l1694 7474                     l1838 7C58  
                   l1960 728E                     l1952 7284                     l1944 700E  
                   l1936 6FF8                     l1928 6FEE                     l1792 71B6  
                   l1880 7A72                     l1864 79A8                     l1856 7988  
                   l1848 792E                     l1768 7694                     l1784 7586  
                   l1776 752E                     l1696 7492                     l1688 7446  
                   l1890 7126                     l1970 72A8                     l1962 7292  
                   l1954 7286                     l1946 7012                     l1938 6FFC  
                   l1794 71CA                     l1882 7A84                     l1874 7A22  
                   l1866 79B0                     l1858 798C                     l1786 75A6  
                   l1778 7536                     l1698 74C8                     l1892 712A  
                   l1964 729E                     l1956 7288                     l1980 7030  
                   l1796 71F8                     l1868 79B8                     l1788 75B8  
                   l1894 7130                     l1966 72A2                     l1958 728C  
                   l1990 704A                     l1982 7034                     l1974 701C  
                   l1798 71FC                     l1878 7A60                     ?_pad 0011  
                   l1896 713E                     l1888 7122                     l1968 72A4  
                   l1992 704C                     l1984 7036                     l1976 702C  
                   l1898 7140                     l1994 7050                     l1986 703A  
                   l1978 702E                     l1988 7046                     l1998 7CAC  
                   STR_1 1015                     STR_2 1005                     u1000 7558  
                   u1001 7554                     u1010 7586                     u1011 7582  
                   u1020 71CA                     u1100 7C72                     u1021 71C6  
                   u1101 7C6E                     u1030 71F8                     u1110 7C82  
                   u1031 71F4                     u1111 7C7E                     u1040 7098  
                   u1120 7952                     u1041 7094                     u1121 794E  
                   u1130 7988                     u1050 7ABA                     u1210 7CD0  
                   u1131 7984                     u1051 7AB6                     u1211 7CCC  
                   u1140 79A4                     u1060 7AD6                     u1300 7F80  
                   u1220 7DA8                     u1205 7272                     u1141 79A0  
                   u1061 7AD2                     u1301 7F7C                     u1221 7DA4  
                   u1310 772E                     u1150 7A5A                     u1070 7C20  
                   u1230 7DB8                     u1311 772A                     u1151 7A54  
                   u1071 7C1C                     u1231 7DB4                     u1320 7742  
                   u1160 7A5C                     u1080 7C3E                     u1240 7DDE  
                   u1400 7308                     u1321 773E                     u1081 7C3A  
                   u1241 7DDA                     u1401 7304                     u1330 775C  
                   u1410 70B2                     u1170 7A72                     u1090 7C58  
                   u1250 7E22                     u1331 7758                     u1411 70AE  
                   u1171 7A6E                     u1091 7C54                     u1251 7E1E  
                   u1500 7844                     u1340 7776                     u1420 70DC  
                   u1180 7A84                     u1260 7E9E                     u1501 783C  
                   u1341 7772                     u1421 70D8                     u1181 7A80  
                   u1261 7E98                     _LATA 000F89                     u1430 6F52  
                   u1190 713E                     u1350 7790                     u1270 7EA0  
                   _LATB 000F8A                     u1431 6F4E                     u1191 713A  
                   u1351 778C                     u1600 78E6                     u1520 7864  
                   u1440 77DE                     u1360 77AA                     u1280 7EB6  
                   u1601 78DE                     u1521 785C                     u1441 77D6  
                   u1361 77A6                     u1281 7EB2                     u1370 77C4  
                   u1290 7EDA                     u1371 77C0                     u1291 7ED6  
                   u1620 790A                     u1540 7886                     u1460 77FE  
                   u1380 7180                     u1621 7902                     u1541 787E  
                   u1461 77F6                     u1381 717C                     u1518 7846  
                   u1390 71B0                     u1391 71AC                     u1560 78A4  
                   u1480 7820                     u1561 789C                     u1481 7818  
                   u1618 78E8                     u1538 7866                     u1458 77E0  
                   u1580 78C4                     u1581 78BC                     u1638 790C  
                   u1558 7888                     u1478 7800                     u1657 76F6  
                   u1578 78A6                     u1498 7822                     u1667 770C  
                   u1677 7062                     u1598 78C6                     u1687 6EA4  
                   _dbuf 0068                     _atoi 791A                     _main 7312  
                   _prec 0064                     _nout 0060                     pad@i 0018  
                   pad@p 0015                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9                     _utoa 7AAA             _strResultado 0088  
 __size_of_WriteDataXLCD 003E                     prodh 000FF4                     prodl 000FF3  
                   start 1000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_pad 0017             _WriteCmdXLCD 6FDC  
          __CFG_PLLDIV$5 000000                    ?_atoi 0008            _conversionADC 6F42  
          ?_SetDDRamAddr 0001                    ?_main 0001                    ?_utoa 001C  
        __end_of___lodiv 76D0          __end_of___lomod 75E0             vfpfcnvrt@fmt 003E  
           vfpfcnvrt@llu 0046                    _PORTD 000F83            __CFG_USBDIV$2 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000          __end_of_initADC 6EB8  
        __end_of_initLCD 6F1C          __end_of_initLED 6ECA           __CFG_EBTRB$OFF 000000  
                  _flags 0066                    _fputc 7446                    _fputs 70DE  
        __end_of_isdigit 6FDC                    atoi@n 0015                    pad@fp 0011  
                  atoi@s 0008                    _width 0062                    _putch 6EA0  
        __end_of_isspace 7204                    tablat 000FF5                    utoa@d 001E  
                  utoa@i 003A                    utoa@n 0032                    utoa@p 002E  
                  utoa@w 0030                    status 000FD8          __end_of_sprintf 7256  
       ___lodiv@dividend 0001          __initialization 6EE0             __end_of_atoi 7AAA  
           __end_of_main 7380             __end_of_utoa 7CAC         __end_of_BusyXLCD 7168  
  __size_of_DelayPORXLCD 0016           ?_conversionADC 0001           ??_SetDDRamAddr 0001  
       __end_of_OpenXLCD 77CC                   ??_atoi 000A                   ??_main 0060  
                 ??_utoa 0026            __activetblptr 000002            _WriteDataXLCD 701A  
 conversionADC@resultado 0005         ___lodiv@quotient 0011              ?_ChecarLEDs 0001  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 ?_fputc 0001                   ?_fputs 000A                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   ?_putch 0001            vfpfcnvrt@done 004E  
         __CFG_VREGEN$ON 000000         __end_of_delay_ms 709A             _DelayPORXLCD 6ECA  
         __CFG_XINST$OFF 000000             vfprintf@cfmt 0058                   ___wmul 6F1C  
         __CFG_STVREN$ON 000000                ??___lodiv 0011                ??___lomod 0011  
                 clear_0 6EE6                   pad@buf 0013           ?_WriteDataXLCD 0001  
                 _strlen 6F6E                ??_initADC 0001                ??_initLCD 0008  
              ??_initLED 0001            main@resultado 0097                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
              ??_isdigit 0003             __mediumconst 0000                ??_isspace 0003  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_putsXLCD 70DE         __end_of_vfprintf 7312  
                 utoa@fp 001C                ??_sprintf 0060               __accesstop 0060  
__end_of__initialization 6EEC          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001      __size_of_ChecarLEDs 014E          ??_conversionADC 0003  
          __end_of_fputc 7510            __end_of_fputs 7122            __end_of_putch 6EA2  
                ??_fputc 0005                  ??_fputs 000E   __size_of_DelayFor18TCY 0008  
                ??_putch 0001               __pbssBANK0 0060                ?_BusyXLCD 0001  
        WriteCmdXLCD@cmd 0001     __end_of_SetDDRamAddr 72B0                ?_OpenXLCD 0001  
      WriteDataXLCD@data 0001                  ?___wmul 0001          ??_WriteDataXLCD 0001  
                ?_strlen 0001                ?_delay_ms 0001       __size_of_vfpfcnvrt 0354  
       ___lomod@dividend 0001       __size_of_putrsXLCD 004A               ??_BusyXLCD 0001  
             ??_OpenXLCD 0006                  __Hparam 0000                  __Lparam 0000  
          _DelayFor18TCY 6EA2          __size_of___wmul 0026                  ___lodiv 75E0  
                ___lomod 7510                ?_putsXLCD 0002                ?_vfprintf 0052  
           __psmallconst 1004                  __pcinit 6EE0          putrsXLCD@buffer 0002  
                __ramtop 0800                  __ptext0 7312                  __ptext1 7204  
                __ptext2 72B0                  __ptext3 7CAC                  __ptext4 7AAA  
                __ptext5 7380                  __ptext6 6F6E                  __ptext7 70DE  
                __ptext8 7446                  __ptext9 6EA0                  _initADC 6EAA  
        __size_of_strlen 0036                  _initLCD 6EF6                  _initLED 6EB8  
           __size_of_pad 00C6                  _isdigit 6FA4                  _isspace 71B2  
             ??_delay_ms 0005             ??_ChecarLEDs 0003                  atoi@neg 000E  
                _sprintf 7204     end_of_initialization 6EEC                  fputc@fp 0003  
          __Lmediumconst 0000                  fputs@fp 000C        __end_of_vfpfcnvrt 8000  
         ?_DelayFor18TCY 0001                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_putsXLCD 0004  
     __end_of_ChecarLEDs 791A               ??_vfprintf 0058                  strlen@a 0003  
                strlen@s 0001        __end_of_putrsXLCD 71B2                _TRISEbits 000F96  
  __size_of_SetDDRamAddr 005A              vfpfcnvrt@ap 0040              vfpfcnvrt@fp 003C  
         __end_of___wmul 6F42             _SetDDRamAddr 7256       SetDDRamAddr@DDaddr 0004  
         __end_of_strlen 6FA4      start_initialization 6EE0          ___lodiv@divisor 0009  
        ___lodiv@counter 0019              __end_of_pad 7446        __size_of_BusyXLCD 0046  
        ??_DelayFor18TCY 0001              vfprintf@fmt 0054        __size_of_OpenXLCD 00FC  
               ??___wmul 0005            ?_WriteCmdXLCD 0001         __CFG_LPT1OSC$OFF 000000  
  __end_of_conversionADC 6F6E                 ??_strlen 0003            __pcstackBANK0 008D  
      __size_of_delay_ms 0042           putsXLCD@buffer 0002           ??_WriteCmdXLCD 0001  
               ?___lodiv 0001                 ?___lomod 0001        __size_of_putsXLCD 0044  
  __end_of_WriteDataXLCD 7058        __size_of_vfprintf 0062                 ?_initADC 0001  
        ___lomod@divisor 0009                 ?_initLCD 0001                 ?_initLED 0001  
            __smallconst 1004          ___lomod@counter 0011                 ?_isdigit 0001  
               ?_isspace 0001                 ?_sprintf 005A           __size_of_fputc 00CA  
         __size_of_fputs 0044           __size_of_putch 0002           ___wmul@product 0005  
               _LATAbits 000F89                 _LATBbits 000F8A                 _LATEbits 000F8D  
              delay_ms@n 0001            ?_DelayPORXLCD 0001          OpenXLCD@lcdtype 0007  
       __CFG_WDTPS$32768 000000                _vfpfcnvrt 7CAC               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001                _putrsXLCD 7168                 _BusyXLCD 7122  
         ??_DelayPORXLCD 0006                 _OpenXLCD 76D0                 __Hrparam 0000  
             vfprintf@ap 0056                 __Lrparam 0000               vfprintf@fp 0052  
       __size_of___lodiv 00F0         __size_of___lomod 00D0               ?_vfpfcnvrt 003C  
             sprintf@fmt 005C               ?_putrsXLCD 0002         __size_of_initADC 000E  
       __size_of_initLCD 0026         __size_of_initLED 0012                 _atoi$980 0012  
               _atoi$978 0010                 _atoi$979 0014         __size_of_isdigit 0038  
               _delay_ms 7058         __size_of_isspace 0052            ChecarLEDs@res 0001  
               __ptext10 7510                 __ptext11 75E0                 __ptext20 701A  
               __ptext12 791A                 __ptext21 76D0                 __ptext13 71B2  
               __ptext30 77CC                 __ptext22 6FDC                 __ptext14 6FA4  
               __ptext23 7256                 __ptext15 6F1C                 __ptext24 6ECA  
               __ptext16 709A                 __ptext25 7058                 __ptext17 6EB8  
               __ptext26 7122                 __ptext18 6EF6                 __ptext27 6EA2  
               __ptext19 7168                 __ptext28 6EAA                 __ptext29 6F42  
   __end_of_WriteCmdXLCD 701A         __size_of_sprintf 0052            __size_of_atoi 0190  
          __size_of_main 006E            __size_of_utoa 0202                 _putsXLCD 709A  
               _vfprintf 72B0              _isspace$996 0007    __CFG_CPUDIV$OSC1_PLL2 000000  
               isdigit@c 0001                sprintf@ap 008F                 isspace@c 0001  
  __end_of_DelayFor18TCY 6EAA              ??_vfpfcnvrt 0042            _vfpfcnvrt$523 0050  
               sprintf@f 0091                 sprintf@s 005A     __end_of_DelayPORXLCD 6EE0  
            ??_putrsXLCD 0004       __CFG_FOSC$HSPLL_HS 000000   __size_of_conversionADC 002C  
