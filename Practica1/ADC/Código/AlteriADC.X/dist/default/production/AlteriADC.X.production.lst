

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu May 07 14:00:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4550 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     _LATBbits	set	3978
    79  0000                     _LATAbits	set	3977
    80  0000                     _ADRESL	set	4035
    81  0000                     _ADRESH	set	4036
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _ADCON2	set	4032
    84  0000                     _ADCON1	set	4033
    85  0000                     _ADCON0	set	4034
    86  0000                     _LATB	set	3978
    87  0000                     _LATA	set	3977
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISA	set	3986
    90  0000                     _TRISEbits	set	3990
    91  0000                     _TRISD	set	3989
    92  0000                     _PORTD	set	3971
    93  0000                     _LATEbits	set	3981
    94                           
    95                           	psect	smallconst
    96  001004                     __psmallconst:
    97                           	opt callstack 0
    98  001004  00                 	db	0
    99  001005                     STR_2:
   100  001005  43                 	db	67	;'C'
   101  001006  6F                 	db	111	;'o'
   102  001007  6E                 	db	110	;'n'
   103  001008  76                 	db	118	;'v'
   104  001009  65                 	db	101	;'e'
   105  00100A  72                 	db	114	;'r'
   106  00100B  74                 	db	116	;'t'
   107  00100C  69                 	db	105	;'i'
   108  00100D  64                 	db	100	;'d'
   109  00100E  6F                 	db	111	;'o'
   110  00100F  72                 	db	114	;'r'
   111  001010  20                 	db	32
   112  001011  41                 	db	65	;'A'
   113  001012  44                 	db	68	;'D'
   114  001013  3A                 	db	58	;':'
   115  001014  00                 	db	0
   116  001015                     STR_1:
   117  001015  25                 	db	37
   118  001016  30                 	db	48	;'0'
   119  001017  34                 	db	52	;'4'
   120  001018  75                 	db	117	;'u'
   121  001019  00                 	db	0
   122                           
   123                           ; #config settings
   124  00101A  00                 	db	0	; dummy byte at the end
   125  0000                     
   126                           	psect	cinit
   127  006EFA                     __pcinit:
   128                           	opt callstack 0
   129  006EFA                     start_initialization:
   130                           	opt callstack 0
   131  006EFA                     __initialization:
   132                           	opt callstack 0
   133                           
   134                           ; Clear objects allocated to BANK0 (45 bytes)
   135  006EFA  EE00  F060         	lfsr	0,__pbssBANK0
   136  006EFE  0E2D               	movlw	45
   137  006F00                     clear_0:
   138  006F00  6AEE               	clrf	postinc0,c
   139  006F02  06E8               	decf	wreg,f,c
   140  006F04  E1FD               	bnz	clear_0
   141  006F06                     end_of_initialization:
   142                           	opt callstack 0
   143  006F06                     __end_of__initialization:
   144                           	opt callstack 0
   145  006F06  0E00               	movlw	low (__Lmediumconst shr (0+16))
   146  006F08  6EF8               	movwf	tblptru,c
   147  006F0A  0100               	movlb	0
   148  006F0C  EF89  F039         	goto	_main	;jump to C main() function
   149                           
   150                           	psect	bssBANK0
   151  000060                     __pbssBANK0:
   152                           	opt callstack 0
   153  000060                     _nout:
   154                           	opt callstack 0
   155  000060                     	ds	2
   156  000062                     _width:
   157                           	opt callstack 0
   158  000062                     	ds	2
   159  000064                     _prec:
   160                           	opt callstack 0
   161  000064                     	ds	2
   162  000066                     _flags:
   163                           	opt callstack 0
   164  000066                     	ds	2
   165  000068                     _dbuf:
   166                           	opt callstack 0
   167  000068                     	ds	32
   168  000088                     _strResultado:
   169                           	opt callstack 0
   170  000088                     	ds	5
   171                           
   172                           	psect	cstackBANK0
   173  00008D                     __pcstackBANK0:
   174                           	opt callstack 0
   175  00008D                     	ds	2
   176  00008F                     sprintf@ap:
   177                           	opt callstack 0
   178                           
   179                           ; 2 bytes @ 0x2
   180  00008F                     	ds	2
   181  000091                     sprintf@f:
   182                           	opt callstack 0
   183                           
   184                           ; 6 bytes @ 0x4
   185  000091                     	ds	6
   186  000097                     main@resultado:
   187                           	opt callstack 0
   188                           
   189                           ; 2 bytes @ 0xA
   190  000097                     	ds	2
   191                           
   192                           	psect	cstackCOMRAM
   193  000001                     __pcstackCOMRAM:
   194                           	opt callstack 0
   195  000001                     ?_conversionADC:
   196                           	opt callstack 0
   197  000001                     ?_strlen:
   198                           	opt callstack 0
   199  000001                     ?_isdigit:
   200                           	opt callstack 0
   201  000001                     ?_isspace:
   202                           	opt callstack 0
   203  000001                     ?___wmul:
   204                           	opt callstack 0
   205  000001                     ?___lodiv:
   206                           	opt callstack 0
   207  000001                     ?___lomod:
   208                           	opt callstack 0
   209  000001                     SetDDRamAddr@DDaddr:
   210                           	opt callstack 0
   211  000001                     WriteCmdXLCD@cmd:
   212                           	opt callstack 0
   213  000001                     WriteDataXLCD@data:
   214                           	opt callstack 0
   215  000001                     ChecarLEDs@res:
   216                           	opt callstack 0
   217  000001                     ___wmul@multiplier:
   218                           	opt callstack 0
   219  000001                     isdigit@c:
   220                           	opt callstack 0
   221  000001                     isspace@c:
   222                           	opt callstack 0
   223  000001                     fputc@c:
   224                           	opt callstack 0
   225  000001                     strlen@s:
   226                           	opt callstack 0
   227  000001                     delay_ms@n:
   228                           	opt callstack 0
   229  000001                     ___lodiv@dividend:
   230                           	opt callstack 0
   231  000001                     ___lomod@dividend:
   232                           	opt callstack 0
   233                           
   234                           ; 8 bytes @ 0x0
   235  000001                     	ds	1
   236  000002                     putrsXLCD@buffer:
   237                           	opt callstack 0
   238  000002                     putsXLCD@buffer:
   239                           	opt callstack 0
   240                           
   241                           ; 2 bytes @ 0x1
   242  000002                     	ds	1
   243  000003                     ??_conversionADC:
   244  000003                     ??_ChecarLEDs:
   245  000003                     ??_isdigit:
   246  000003                     ??_isspace:
   247  000003                     ___wmul@multiplicand:
   248                           	opt callstack 0
   249  000003                     fputc@fp:
   250                           	opt callstack 0
   251  000003                     strlen@a:
   252                           	opt callstack 0
   253                           
   254                           ; 2 bytes @ 0x2
   255  000003                     	ds	1
   256  000004                     
   257                           ; 1 bytes @ 0x3
   258  000004                     	ds	1
   259  000005                     ??_fputc:
   260  000005                     ??_delay_ms:
   261  000005                     conversionADC@resultado:
   262                           	opt callstack 0
   263  000005                     ___wmul@product:
   264                           	opt callstack 0
   265                           
   266                           ; 2 bytes @ 0x4
   267  000005                     	ds	1
   268  000006                     ??_OpenXLCD:
   269                           
   270                           ; 1 bytes @ 0x5
   271  000006                     	ds	1
   272  000007                     OpenXLCD@lcdtype:
   273                           	opt callstack 0
   274  000007                     _isspace$996:
   275                           	opt callstack 0
   276                           
   277                           ; 1 bytes @ 0x6
   278  000007                     	ds	1
   279  000008                     ?_atoi:
   280                           	opt callstack 0
   281  000008                     atoi@s:
   282                           	opt callstack 0
   283                           
   284                           ; 2 bytes @ 0x7
   285  000008                     	ds	1
   286  000009                     ___lodiv@divisor:
   287                           	opt callstack 0
   288  000009                     ___lomod@divisor:
   289                           	opt callstack 0
   290                           
   291                           ; 8 bytes @ 0x8
   292  000009                     	ds	1
   293  00000A                     ??_atoi:
   294  00000A                     fputs@s:
   295                           	opt callstack 0
   296                           
   297                           ; 2 bytes @ 0x9
   298  00000A                     	ds	2
   299  00000C                     fputs@fp:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0xB
   303  00000C                     	ds	2
   304  00000E                     fputs@c:
   305                           	opt callstack 0
   306  00000E                     atoi@neg:
   307                           	opt callstack 0
   308                           
   309                           ; 2 bytes @ 0xD
   310  00000E                     	ds	1
   311  00000F                     fputs@i:
   312                           	opt callstack 0
   313                           
   314                           ; 2 bytes @ 0xE
   315  00000F                     	ds	1
   316  000010                     _atoi$978:
   317                           	opt callstack 0
   318                           
   319                           ; 2 bytes @ 0xF
   320  000010                     	ds	1
   321  000011                     ?_pad:
   322                           	opt callstack 0
   323  000011                     ___lomod@counter:
   324                           	opt callstack 0
   325  000011                     pad@fp:
   326                           	opt callstack 0
   327  000011                     ___lodiv@quotient:
   328                           	opt callstack 0
   329                           
   330                           ; 8 bytes @ 0x10
   331  000011                     	ds	1
   332  000012                     _atoi$980:
   333                           	opt callstack 0
   334                           
   335                           ; 2 bytes @ 0x11
   336  000012                     	ds	1
   337  000013                     pad@buf:
   338                           	opt callstack 0
   339                           
   340                           ; 2 bytes @ 0x12
   341  000013                     	ds	1
   342  000014                     _atoi$979:
   343                           	opt callstack 0
   344                           
   345                           ; 1 bytes @ 0x13
   346  000014                     	ds	1
   347  000015                     pad@p:
   348                           	opt callstack 0
   349  000015                     atoi@n:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0x14
   353  000015                     	ds	2
   354  000017                     ??_pad:
   355                           
   356                           ; 1 bytes @ 0x16
   357  000017                     	ds	1
   358  000018                     pad@i:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0x17
   362  000018                     	ds	1
   363  000019                     ___lodiv@counter:
   364                           	opt callstack 0
   365                           
   366                           ; 1 bytes @ 0x18
   367  000019                     	ds	1
   368  00001A                     pad@w:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x19
   372  00001A                     	ds	2
   373  00001C                     ?_utoa:
   374                           	opt callstack 0
   375  00001C                     utoa@fp:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0x1B
   379  00001C                     	ds	2
   380  00001E                     utoa@d:
   381                           	opt callstack 0
   382                           
   383                           ; 8 bytes @ 0x1D
   384  00001E                     	ds	8
   385  000026                     ??_utoa:
   386                           
   387                           ; 1 bytes @ 0x25
   388  000026                     	ds	8
   389  00002E                     utoa@p:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0x2D
   393  00002E                     	ds	2
   394  000030                     utoa@w:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x2F
   398  000030                     	ds	2
   399  000032                     utoa@n:
   400                           	opt callstack 0
   401                           
   402                           ; 8 bytes @ 0x31
   403  000032                     	ds	8
   404  00003A                     utoa@i:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x39
   408  00003A                     	ds	2
   409  00003C                     ?_vfpfcnvrt:
   410                           	opt callstack 0
   411  00003C                     vfpfcnvrt@fp:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x3B
   415  00003C                     	ds	2
   416  00003E                     vfpfcnvrt@fmt:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x3D
   420  00003E                     	ds	2
   421  000040                     vfpfcnvrt@ap:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0x3F
   425  000040                     	ds	2
   426  000042                     ??_vfpfcnvrt:
   427                           
   428                           ; 1 bytes @ 0x41
   429  000042                     	ds	4
   430  000046                     vfpfcnvrt@llu:
   431                           	opt callstack 0
   432                           
   433                           ; 8 bytes @ 0x45
   434  000046                     	ds	8
   435  00004E                     vfpfcnvrt@done:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0x4D
   439  00004E                     	ds	2
   440  000050                     _vfpfcnvrt$523:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0x4F
   444  000050                     	ds	2
   445  000052                     ?_vfprintf:
   446                           	opt callstack 0
   447  000052                     vfprintf@fp:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x51
   451  000052                     	ds	2
   452  000054                     vfprintf@fmt:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0x53
   456  000054                     	ds	2
   457  000056                     vfprintf@ap:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x55
   461  000056                     	ds	2
   462  000058                     vfprintf@cfmt:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x57
   466  000058                     	ds	2
   467  00005A                     ?_sprintf:
   468                           	opt callstack 0
   469  00005A                     sprintf@s:
   470                           	opt callstack 0
   471                           
   472                           ; 2 bytes @ 0x59
   473  00005A                     	ds	2
   474  00005C                     sprintf@fmt:
   475                           	opt callstack 0
   476                           
   477                           ; 2 bytes @ 0x5B
   478  00005C                     	ds	4
   479  000060                     
   480                           ; 1 bytes @ 0x5F
   481 ;;
   482 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   483 ;;
   484 ;; *************** function _main *****************
   485 ;; Defined at:
   486 ;;		line 15 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  resultado       2   10[BANK0 ] unsigned short 
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   500 ;;      Params:         0       0       0       0       0       0       0       0       0
   501 ;;      Locals:         0       2       0       0       0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0       0       0
   503 ;;      Totals:         0       2       0       0       0       0       0       0       0
   504 ;;Total ram usage:        2 bytes
   505 ;; Hardware stack levels required when called:    8
   506 ;; This function calls:
   507 ;;		_ChecarLEDs
   508 ;;		_WriteCmdXLCD
   509 ;;		_conversionADC
   510 ;;		_delay_ms
   511 ;;		_initADC
   512 ;;		_initLCD
   513 ;;		_initLED
   514 ;;		_putsXLCD
   515 ;;		_sprintf
   516 ;; This function is called by:
   517 ;;		Startup code after reset
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text0
   522  007312                     __ptext0:
   523                           	opt callstack 0
   524  007312                     _main:
   525                           	opt callstack 23
   526  007312                     
   527                           ;main.c: 16:     initLCD();
   528  007312  EC88  F037         	call	_initLCD	;wreg free
   529  007316                     
   530                           ;main.c: 17:     initADC();
   531  007316  EC62  F037         	call	_initADC	;wreg free
   532  00731A                     
   533                           ;main.c: 18:     initLED();
   534  00731A  EC69  F037         	call	_initLED	;wreg free
   535  00731E                     l2286:
   536                           
   537                           ;main.c: 20:         uint16_t resultado = conversionADC();
   538  00731E  ECAE  F037         	call	_conversionADC	;wreg free
   539  007322  C001  F097         	movff	?_conversionADC,main@resultado
   540  007326  C002  F098         	movff	?_conversionADC+1,main@resultado+1
   541  00732A                     
   542                           ;main.c: 21:         sprintf(strResultado,"%04u",resultado);
   543  00732A  0E88               	movlw	low _strResultado
   544  00732C  6E5A               	movwf	sprintf@s^0,c
   545  00732E  0E00               	movlw	high _strResultado
   546  007330  6E5B               	movwf	(sprintf@s+1)^0,c
   547  007332  0E15               	movlw	low STR_1
   548  007334  6E5C               	movwf	sprintf@fmt^0,c
   549  007336  0E10               	movlw	high STR_1
   550  007338  6E5D               	movwf	(sprintf@fmt+1)^0,c
   551  00733A  C097  F05E         	movff	main@resultado,?_sprintf+4
   552  00733E  C098  F05F         	movff	main@resultado+1,?_sprintf+5
   553  007342  EC2F  F039         	call	_sprintf	;wreg free
   554  007346                     
   555                           ;main.c: 22:         WriteCmdXLCD(0b11000000 + 5);
   556  007346  0EC5               	movlw	197
   557  007348  ECFB  F037         	call	_WriteCmdXLCD
   558  00734C                     
   559                           ;main.c: 23:         putsXLCD(strResultado);
   560  00734C  0E88               	movlw	low _strResultado
   561  00734E  6E02               	movwf	putsXLCD@buffer^0,c
   562  007350  0E00               	movlw	high _strResultado
   563  007352  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   564  007354  EC7A  F038         	call	_putsXLCD	;wreg free
   565  007358                     
   566                           ;main.c: 24:         ChecarLEDs(resultado);
   567  007358  C097  F001         	movff	main@resultado,ChecarLEDs@res
   568  00735C  C098  F002         	movff	main@resultado+1,ChecarLEDs@res+1
   569  007360  ECE6  F03B         	call	_ChecarLEDs	;wreg free
   570  007364                     
   571                           ;main.c: 25:         delay_ms(200);
   572  007364  0EC8               	movlw	200
   573  007366  6E01               	movwf	delay_ms@n^0,c
   574  007368  0E00               	movlw	0
   575  00736A  6E02               	movwf	(delay_ms@n+1)^0,c
   576  00736C  0E00               	movlw	0
   577  00736E  6E03               	movwf	(delay_ms@n+2)^0,c
   578  007370  0E00               	movlw	0
   579  007372  6E04               	movwf	(delay_ms@n+3)^0,c
   580  007374  EC59  F038         	call	_delay_ms	;wreg free
   581  007378  EF8F  F039         	goto	l2286
   582  00737C  EF00  F008         	goto	start
   583  007380                     __end_of_main:
   584                           	opt callstack 0
   585                           
   586 ;; *************** function _sprintf *****************
   587 ;; Defined at:
   588 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;  s               2   89[COMRAM] PTR unsigned char 
   591 ;;		 -> strResultado(5), 
   592 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
   593 ;;		 -> STR_1(5), 
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  f               6    4[BANK0 ] struct _IO_FILE
   596 ;;  ap              2    2[BANK0 ] PTR void [1]
   597 ;;		 -> ?_sprintf(2), 
   598 ;;  ret             2    0        int 
   599 ;; Return value:  Size  Location     Type
   600 ;;                  2   89[COMRAM] int 
   601 ;; Registers used:
   602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   608 ;;      Params:         6       0       0       0       0       0       0       0       0
   609 ;;      Locals:         0      10       0       0       0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0       0       0       0       0
   611 ;;      Totals:         6      10       0       0       0       0       0       0       0
   612 ;;Total ram usage:       16 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; Hardware stack levels required when called:    7
   615 ;; This function calls:
   616 ;;		_vfprintf
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text1
   623  00725E                     __ptext1:
   624                           	opt callstack 0
   625  00725E                     _sprintf:
   626                           	opt callstack 23
   627  00725E  0E5E               	movlw	low (?_sprintf+4)
   628  007260  0100               	movlb	0	; () banked
   629  007262  6F8F               	movwf	sprintf@ap& (0+255),b
   630  007264  0E00               	movlw	high (?_sprintf+4)
   631  007266  6F90               	movwf	(sprintf@ap+1)& (0+255),b
   632  007268  C05A  F091         	movff	sprintf@s,sprintf@f
   633  00726C  C05B  F092         	movff	sprintf@s+1,sprintf@f+1
   634  007270                     
   635                           ; BSR set to: 0
   636  007270  0E00               	movlw	0
   637  007272  6F94               	movwf	(sprintf@f+3)& (0+255),b
   638  007274  0E00               	movlw	0
   639  007276  6F93               	movwf	(sprintf@f+2)& (0+255),b
   640  007278                     
   641                           ; BSR set to: 0
   642  007278  0E00               	movlw	0
   643  00727A  6F96               	movwf	(sprintf@f+5)& (0+255),b
   644  00727C  0E00               	movlw	0
   645  00727E  6F95               	movwf	(sprintf@f+4)& (0+255),b
   646  007280                     
   647                           ; BSR set to: 0
   648  007280  0E91               	movlw	low sprintf@f
   649  007282  6E52               	movwf	vfprintf@fp^0,c
   650  007284  0E00               	movlw	high sprintf@f
   651  007286  6E53               	movwf	(vfprintf@fp+1)^0,c
   652  007288  C05C  F054         	movff	sprintf@fmt,vfprintf@fmt
   653  00728C  C05D  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
   654  007290  0E8F               	movlw	low sprintf@ap
   655  007292  6E56               	movwf	vfprintf@ap^0,c
   656  007294  0E00               	movlw	high sprintf@ap
   657  007296  6E57               	movwf	(vfprintf@ap+1)^0,c
   658  007298  EC58  F039         	call	_vfprintf	;wreg free
   659  00729C  0100               	movlb	0	; () banked
   660  00729E  5193               	movf	(sprintf@f+2)& (0+255),w,b
   661  0072A0  245A               	addwf	sprintf@s^0,w,c
   662  0072A2  6ED9               	movwf	fsr2l,c
   663  0072A4  5194               	movf	(sprintf@f+3)& (0+255),w,b
   664  0072A6  205B               	addwfc	(sprintf@s+1)^0,w,c
   665  0072A8  6EDA               	movwf	fsr2h,c
   666  0072AA  0E00               	movlw	0
   667  0072AC  6EDF               	movwf	indf2,c
   668  0072AE                     
   669                           ; BSR set to: 0
   670  0072AE  0012               	return		;funcret
   671  0072B0                     __end_of_sprintf:
   672                           	opt callstack 0
   673                           
   674 ;; *************** function _vfprintf *****************
   675 ;; Defined at:
   676 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
   679 ;;		 -> sprintf@f(6), 
   680 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
   681 ;;		 -> STR_1(5), 
   682 ;;  ap              2   85[COMRAM] PTR PTR void 
   683 ;;		 -> sprintf@ap(2), 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
   686 ;;		 -> STR_1(5), 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  2   81[COMRAM] int 
   689 ;; Registers used:
   690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   696 ;;      Params:         6       0       0       0       0       0       0       0       0
   697 ;;      Locals:         2       0       0       0       0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0       0       0       0       0
   699 ;;      Totals:         8       0       0       0       0       0       0       0       0
   700 ;;Total ram usage:        8 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:    6
   703 ;; This function calls:
   704 ;;		_vfpfcnvrt
   705 ;; This function is called by:
   706 ;;		_sprintf
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text2
   711  0072B0                     __ptext2:
   712                           	opt callstack 0
   713  0072B0                     _vfprintf:
   714                           	opt callstack 23
   715  0072B0                     
   716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   717  0072B0  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
   718  0072B4  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   719  0072B8                     
   720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   721  0072B8  0E00               	movlw	0
   722  0072BA  0100               	movlb	0	; () banked
   723  0072BC  6F61               	movwf	(_nout+1)& (0+255),b
   724  0072BE  0E00               	movlw	0
   725  0072C0  6F60               	movwf	_nout& (0+255),b
   726                           
   727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   728  0072C2  EF76  F039         	goto	l2164
   729  0072C6                     l2162:
   730                           
   731                           ; BSR set to: 0
   732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   733  0072C6  C052  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
   734  0072CA  C053  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   735  0072CE  0E58               	movlw	low vfprintf@cfmt
   736  0072D0  6E3E               	movwf	vfpfcnvrt@fmt^0,c
   737  0072D2  0E00               	movlw	high vfprintf@cfmt
   738  0072D4  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
   739  0072D6  C056  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
   740  0072DA  C057  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   741  0072DE  EC56  F03E         	call	_vfpfcnvrt	;wreg free
   742  0072E2  503C               	movf	?_vfpfcnvrt^0,w,c
   743  0072E4  0100               	movlb	0	; () banked
   744  0072E6  2760               	addwf	_nout& (0+255),f,b
   745  0072E8  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
   746  0072EA  2361               	addwfc	(_nout+1)& (0+255),f,b
   747  0072EC                     l2164:
   748                           
   749                           ; BSR set to: 0
   750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   751  0072EC  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
   752  0072F0  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   753  0072F4                     	if	0	;tblptru may be non-zero
   754  0072F4                     	endif
   755  0072F4                     	if	0	;tblptru may be non-zero
   756  0072F4                     	endif
   757  0072F4  0008               	tblrd		*
   758  0072F6  50F5               	movf	tablat,w,c
   759  0072F8  0900               	iorlw	0
   760  0072FA  A4D8               	btfss	status,2,c
   761  0072FC  EF82  F039         	goto	u1371
   762  007300  EF84  F039         	goto	u1370
   763  007304                     u1371:
   764  007304  EF63  F039         	goto	l2162
   765  007308                     u1370:
   766  007308                     
   767                           ; BSR set to: 0
   768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   769  007308  C060  F052         	movff	_nout,?_vfprintf
   770  00730C  C061  F053         	movff	_nout+1,?_vfprintf+1
   771  007310                     
   772                           ; BSR set to: 0
   773  007310  0012               	return		;funcret
   774  007312                     __end_of_vfprintf:
   775                           	opt callstack 0
   776                           
   777 ;; *************** function _vfpfcnvrt *****************
   778 ;; Defined at:
   779 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
   782 ;;		 -> sprintf@f(6), 
   783 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
   784 ;;		 -> vfprintf@cfmt(2), 
   785 ;;  ap              2   63[COMRAM] PTR PTR void 
   786 ;;		 -> sprintf@ap(2), 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  llu             8   69[COMRAM] unsigned long long 
   789 ;;  ll              8    0        long long 
   790 ;;  f               4    0        long long 
   791 ;;  vp              3    0        PTR void 
   792 ;;  ct              3    0        unsigned char [3]
   793 ;;  cp              3    0        PTR unsigned char 
   794 ;;  done            2   77[COMRAM] int 
   795 ;;  i               2    0        int 
   796 ;;  c               1    0        unsigned char 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  2   59[COMRAM] int 
   799 ;; Registers used:
   800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   806 ;;      Params:         6       0       0       0       0       0       0       0       0
   807 ;;      Locals:        12       0       0       0       0       0       0       0       0
   808 ;;      Temps:          4       0       0       0       0       0       0       0       0
   809 ;;      Totals:        22       0       0       0       0       0       0       0       0
   810 ;;Total ram usage:       22 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    5
   813 ;; This function calls:
   814 ;;		_atoi
   815 ;;		_fputc
   816 ;;		_isdigit
   817 ;;		_utoa
   818 ;; This function is called by:
   819 ;;		_vfprintf
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text3
   824  007CAC                     __ptext3:
   825                           	opt callstack 0
   826  007CAC                     _vfpfcnvrt:
   827                           	opt callstack 23
   828  007CAC                     
   829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   830  007CAC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   831  007CB0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   832  007CB4  CFDE FFF6          	movff	postinc2,tblptrl
   833  007CB8  CFDD FFF7          	movff	postdec2,tblptrh
   834  007CBC                     	if	0	;tblptru may be non-zero
   835  007CBC                     	endif
   836  007CBC                     	if	0	;tblptru may be non-zero
   837  007CBC                     	endif
   838  007CBC  0008               	tblrd		*
   839  007CBE  50F5               	movf	tablat,w,c
   840  007CC0  0A25               	xorlw	37
   841  007CC2  A4D8               	btfss	status,2,c
   842  007CC4  EF66  F03E         	goto	u1181
   843  007CC8  EF68  F03E         	goto	u1180
   844  007CCC                     u1181:
   845  007CCC  EFE4  F03F         	goto	l2080
   846  007CD0                     u1180:
   847  007CD0                     
   848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
   849  007CD0  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   850  007CD4  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   851  007CD8  2ADE               	incf	postinc2,f,c
   852  007CDA  0E00               	movlw	0
   853  007CDC  22DD               	addwfc	postdec2,f,c
   854  007CDE                     
   855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
   856  007CDE  0E00               	movlw	0
   857  007CE0  0100               	movlb	0	; () banked
   858  007CE2  6F63               	movwf	(_width+1)& (0+255),b
   859  007CE4  0E00               	movlw	0
   860  007CE6  6F62               	movwf	_width& (0+255),b
   861  007CE8  C062  F066         	movff	_width,_flags
   862  007CEC  C063  F067         	movff	_width+1,_flags+1
   863  007CF0                     
   864                           ; BSR set to: 0
   865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
   866  007CF0  6964               	setf	_prec& (0+255),b
   867  007CF2  6965               	setf	(_prec+1)& (0+255),b
   868  007CF4                     
   869                           ; BSR set to: 0
   870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
   871  007CF4  0E00               	movlw	0
   872  007CF6  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
   873  007CF8  0E00               	movlw	0
   874  007CFA  6E4E               	movwf	vfpfcnvrt@done^0,c
   875                           
   876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
   877  007CFC  EFCB  F03E         	goto	l2034
   878  007D00                     l2008:
   879                           
   880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
   881  007D00  0100               	movlb	0	; () banked
   882  007D02  8166               	bsf	_flags& (0+255),0,b
   883  007D04                     l2010:
   884                           
   885                           ; BSR set to: 0
   886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
   887  007D04  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   888  007D08  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   889  007D0C  2ADE               	incf	postinc2,f,c
   890  007D0E  0E00               	movlw	0
   891  007D10  22DD               	addwfc	postdec2,f,c
   892                           
   893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
   894  007D12  EFCB  F03E         	goto	l2034
   895  007D16                     l2012:
   896                           
   897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
   898  007D16  0100               	movlb	0	; () banked
   899  007D18  8366               	bsf	_flags& (0+255),1,b
   900  007D1A  EF82  F03E         	goto	l2010
   901  007D1E                     l2016:
   902                           
   903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
   904  007D1E  0100               	movlb	0	; () banked
   905  007D20  8566               	bsf	_flags& (0+255),2,b
   906  007D22  EF82  F03E         	goto	l2010
   907  007D26                     l2020:
   908                           
   909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
   910  007D26  0100               	movlb	0	; () banked
   911  007D28  8766               	bsf	_flags& (0+255),3,b
   912  007D2A  EF82  F03E         	goto	l2010
   913  007D2E                     l2024:
   914                           
   915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
   916  007D2E  0100               	movlb	0	; () banked
   917  007D30  8966               	bsf	_flags& (0+255),4,b
   918  007D32  EF82  F03E         	goto	l2010
   919  007D36                     l2028:
   920                           
   921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
   922  007D36  0E00               	movlw	0
   923  007D38  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
   924  007D3A  0E01               	movlw	1
   925  007D3C  6E4E               	movwf	vfpfcnvrt@done^0,c
   926                           
   927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
   928  007D3E  EFCB  F03E         	goto	l2034
   929  007D42                     l2032:
   930  007D42  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   931  007D46  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   932  007D4A  CFDE FFF6          	movff	postinc2,tblptrl
   933  007D4E  CFDD FFF7          	movff	postdec2,tblptrh
   934  007D52                     	if	0	;tblptru may be non-zero
   935  007D52                     	endif
   936  007D52                     	if	0	;tblptru may be non-zero
   937  007D52                     	endif
   938  007D52  0008               	tblrd		*
   939  007D54  50F5               	movf	tablat,w,c
   940  007D56  6E42               	movwf	??_vfpfcnvrt^0,c
   941  007D58  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
   942                           
   943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   944                           ; Switch size 1, requested type "simple"
   945                           ; Number of cases is 1, Range of values is 0 to 0
   946                           ; switch strategies available:
   947                           ; Name         Instructions Cycles
   948                           ; simple_byte            4     3 (average)
   949                           ;	Chosen strategy is simple_byte
   950  007D5A  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
   951  007D5C  0A00               	xorlw	0	; case 0
   952  007D5E  B4D8               	btfsc	status,2,c
   953  007D60  EFB4  F03E         	goto	l2350
   954  007D64  EF9B  F03E         	goto	l2028
   955  007D68                     l2350:
   956                           
   957                           ; Switch size 1, requested type "simple"
   958                           ; Number of cases is 5, Range of values is 32 to 48
   959                           ; switch strategies available:
   960                           ; Name         Instructions Cycles
   961                           ; simple_byte           16     9 (average)
   962                           ;	Chosen strategy is simple_byte
   963  007D68  5042               	movf	??_vfpfcnvrt^0,w,c
   964  007D6A  0A20               	xorlw	32	; case 32
   965  007D6C  B4D8               	btfsc	status,2,c
   966  007D6E  EF93  F03E         	goto	l2020
   967  007D72  0A03               	xorlw	3	; case 35
   968  007D74  B4D8               	btfsc	status,2,c
   969  007D76  EF97  F03E         	goto	l2024
   970  007D7A  0A08               	xorlw	8	; case 43
   971  007D7C  B4D8               	btfsc	status,2,c
   972  007D7E  EF8F  F03E         	goto	l2016
   973  007D82  0A06               	xorlw	6	; case 45
   974  007D84  B4D8               	btfsc	status,2,c
   975  007D86  EF80  F03E         	goto	l2008
   976  007D8A  0A1D               	xorlw	29	; case 48
   977  007D8C  B4D8               	btfsc	status,2,c
   978  007D8E  EF8B  F03E         	goto	l2012
   979  007D92  EF9B  F03E         	goto	l2028
   980  007D96                     l2034:
   981                           
   982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
   983  007D96  504E               	movf	vfpfcnvrt@done^0,w,c
   984  007D98  104F               	iorwf	(vfpfcnvrt@done+1)^0,w,c
   985  007D9A  B4D8               	btfsc	status,2,c
   986  007D9C  EFD2  F03E         	goto	u1191
   987  007DA0  EFD4  F03E         	goto	u1190
   988  007DA4                     u1191:
   989  007DA4  EFA1  F03E         	goto	l2032
   990  007DA8                     u1190:
   991  007DA8                     
   992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
   993  007DA8  0100               	movlb	0	; () banked
   994  007DAA  A166               	btfss	_flags& (0+255),0,b
   995  007DAC  EFDA  F03E         	goto	u1201
   996  007DB0  EFDC  F03E         	goto	u1200
   997  007DB4                     u1201:
   998  007DB4  EFDD  F03E         	goto	l2038
   999  007DB8                     u1200:
  1000  007DB8                     
  1001                           ; BSR set to: 0
  1002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1003  007DB8  9366               	bcf	_flags& (0+255),1,b
  1004  007DBA                     l2038:
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1008  007DBA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1009  007DBE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1010  007DC2  CFDE FFF6          	movff	postinc2,tblptrl
  1011  007DC6  CFDD FFF7          	movff	postdec2,tblptrh
  1012  007DCA                     	if	0	;tblptru may be non-zero
  1013  007DCA                     	endif
  1014  007DCA                     	if	0	;tblptru may be non-zero
  1015  007DCA                     	endif
  1016  007DCA  0008               	tblrd		*
  1017  007DCC  50F5               	movf	tablat,w,c
  1018  007DCE  0A2A               	xorlw	42
  1019  007DD0  A4D8               	btfss	status,2,c
  1020  007DD2  EFED  F03E         	goto	u1211
  1021  007DD6  EFEF  F03E         	goto	u1210
  1022  007DDA                     u1211:
  1023  007DDA  EF18  F03F         	goto	l2046
  1024  007DDE                     u1210:
  1025  007DDE                     
  1026                           ; BSR set to: 0
  1027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1028  007DDE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1029  007DE2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1030  007DE6  2ADE               	incf	postinc2,f,c
  1031  007DE8  0E00               	movlw	0
  1032  007DEA  22DD               	addwfc	postdec2,f,c
  1033                           
  1034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1035  007DEC  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1036  007DF0  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1037  007DF4  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1038  007DF8  0E02               	movlw	2
  1039  007DFA  26DE               	addwf	postinc2,f,c
  1040  007DFC  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1041  007E00  0E00               	movlw	0
  1042  007E02  22DD               	addwfc	postdec2,f,c
  1043  007E04  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1044  007E08  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1045  007E0C  CFDE F062          	movff	postinc2,_width
  1046  007E10  CFDD F063          	movff	postdec2,_width+1
  1047  007E14                     
  1048                           ; BSR set to: 0
  1049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1050  007E14  BF63               	btfsc	(_width+1)& (0+255),7,b
  1051  007E16  EF11  F03F         	goto	u1220
  1052  007E1A  EF0F  F03F         	goto	u1221
  1053  007E1E                     u1221:
  1054  007E1E  EF5B  F03F         	goto	l2056
  1055  007E22                     u1220:
  1056  007E22                     
  1057                           ; BSR set to: 0
  1058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1059  007E22  8166               	bsf	_flags& (0+255),0,b
  1060                           
  1061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1062  007E24  6D62               	negf	_width& (0+255),b
  1063  007E26  1F63               	comf	(_width+1)& (0+255),f,b
  1064  007E28  B0D8               	btfsc	status,0,c
  1065  007E2A  2B63               	incf	(_width+1)& (0+255),f,b
  1066  007E2C  EF5B  F03F         	goto	l2056
  1067  007E30                     l2046:
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1071  007E30  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1072  007E34  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1073  007E38  CFDE F008          	movff	postinc2,atoi@s
  1074  007E3C  CFDD F009          	movff	postdec2,atoi@s+1
  1075  007E40  EC8D  F03C         	call	_atoi	;wreg free
  1076  007E44  C008  F062         	movff	?_atoi,_width
  1077  007E48  C009  F063         	movff	?_atoi+1,_width+1
  1078                           
  1079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1080  007E4C  EF2F  F03F         	goto	l2050
  1081  007E50                     l2048:
  1082                           
  1083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1084  007E50  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1085  007E54  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1086  007E58  2ADE               	incf	postinc2,f,c
  1087  007E5A  0E00               	movlw	0
  1088  007E5C  22DD               	addwfc	postdec2,f,c
  1089  007E5E                     l2050:
  1090  007E5E  0ED0               	movlw	208
  1091  007E60  6E42               	movwf	??_vfpfcnvrt^0,c
  1092  007E62  0EFF               	movlw	255
  1093  007E64  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1094  007E66  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1095  007E6A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1096  007E6E  CFDE FFF6          	movff	postinc2,tblptrl
  1097  007E72  CFDD FFF7          	movff	postdec2,tblptrh
  1098  007E76                     	if	0	;tblptru may be non-zero
  1099  007E76                     	endif
  1100  007E76                     	if	0	;tblptru may be non-zero
  1101  007E76                     	endif
  1102  007E76  0008               	tblrd		*
  1103  007E78  50F5               	movf	tablat,w,c
  1104  007E7A  6E44               	movwf	(??_vfpfcnvrt+2)^0,c
  1105  007E7C  6A45               	clrf	(??_vfpfcnvrt+3)^0,c
  1106  007E7E  5042               	movf	??_vfpfcnvrt^0,w,c
  1107  007E80  2644               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1108  007E82  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1109  007E84  2245               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1110  007E86  5045               	movf	(??_vfpfcnvrt+3)^0,w,c
  1111  007E88  E10A               	bnz	u1230
  1112  007E8A  0E0A               	movlw	10
  1113  007E8C  5C44               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1114  007E8E  A0D8               	btfss	status,0,c
  1115  007E90  EF4C  F03F         	goto	u1231
  1116  007E94  EF4F  F03F         	goto	u1230
  1117  007E98                     u1231:
  1118  007E98  0E01               	movlw	1
  1119  007E9A  EF50  F03F         	goto	u1240
  1120  007E9E                     u1230:
  1121  007E9E  0E00               	movlw	0
  1122  007EA0                     u1240:
  1123  007EA0  6E50               	movwf	_vfpfcnvrt$523^0,c
  1124  007EA2  6A51               	clrf	(_vfpfcnvrt$523+1)^0,c
  1125  007EA4  5050               	movf	_vfpfcnvrt$523^0,w,c
  1126  007EA6  1051               	iorwf	(_vfpfcnvrt$523+1)^0,w,c
  1127  007EA8  A4D8               	btfss	status,2,c
  1128  007EAA  EF59  F03F         	goto	u1251
  1129  007EAE  EF5B  F03F         	goto	u1250
  1130  007EB2                     u1251:
  1131  007EB2  EF28  F03F         	goto	l2048
  1132  007EB6                     u1250:
  1133  007EB6                     l2056:
  1134                           
  1135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1136  007EB6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1137  007EBA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1138  007EBE  CFDE FFF6          	movff	postinc2,tblptrl
  1139  007EC2  CFDD FFF7          	movff	postdec2,tblptrh
  1140  007EC6                     	if	0	;tblptru may be non-zero
  1141  007EC6                     	endif
  1142  007EC6                     	if	0	;tblptru may be non-zero
  1143  007EC6                     	endif
  1144  007EC6  0008               	tblrd		*
  1145  007EC8  50F5               	movf	tablat,w,c
  1146  007ECA  0A75               	xorlw	117
  1147  007ECC  A4D8               	btfss	status,2,c
  1148  007ECE  EF6B  F03F         	goto	u1261
  1149  007ED2  EF6D  F03F         	goto	u1260
  1150  007ED6                     u1261:
  1151  007ED6  EFAE  F03F         	goto	l2064
  1152  007EDA                     u1260:
  1153  007EDA                     
  1154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1155  007EDA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1156  007EDE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1157  007EE2  2ADE               	incf	postinc2,f,c
  1158  007EE4  0E00               	movlw	0
  1159  007EE6  22DD               	addwfc	postdec2,f,c
  1160                           
  1161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1162  007EE8  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1163  007EEC  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1164  007EF0  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1165  007EF4  0E02               	movlw	2
  1166  007EF6  26DE               	addwf	postinc2,f,c
  1167  007EF8  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1168  007EFC  0E00               	movlw	0
  1169  007EFE  22DD               	addwfc	postdec2,f,c
  1170  007F00  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1171  007F04  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1172  007F08  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  1173  007F0C  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  1174  007F10  C044  F046         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1175  007F14  C045  F047         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1176  007F18  6A48               	clrf	(vfpfcnvrt@llu+2)^0,c
  1177  007F1A  6A49               	clrf	(vfpfcnvrt@llu+3)^0,c
  1178  007F1C  6A4A               	clrf	(vfpfcnvrt@llu+4)^0,c
  1179  007F1E  6A4B               	clrf	(vfpfcnvrt@llu+5)^0,c
  1180  007F20  6A4C               	clrf	(vfpfcnvrt@llu+6)^0,c
  1181  007F22  6A4D               	clrf	(vfpfcnvrt@llu+7)^0,c
  1182  007F24                     
  1183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1184  007F24  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  1185  007F28  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1186  007F2C  C046  F01E         	movff	vfpfcnvrt@llu,utoa@d
  1187  007F30  C047  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1188  007F34  C048  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1189  007F38  C049  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1190  007F3C  C04A  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1191  007F40  C04B  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1192  007F44  C04C  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1193  007F48  C04D  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1194  007F4C  EC55  F03D         	call	_utoa	;wreg free
  1195  007F50  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  1196  007F54  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  1197  007F58  EFFF  F03F         	goto	l306
  1198  007F5C                     l2064:
  1199                           
  1200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1201  007F5C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1202  007F60  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1203  007F64  CFDE FFF6          	movff	postinc2,tblptrl
  1204  007F68  CFDD FFF7          	movff	postdec2,tblptrh
  1205  007F6C                     	if	0	;tblptru may be non-zero
  1206  007F6C                     	endif
  1207  007F6C                     	if	0	;tblptru may be non-zero
  1208  007F6C                     	endif
  1209  007F6C  0008               	tblrd		*
  1210  007F6E  50F5               	movf	tablat,w,c
  1211  007F70  0A25               	xorlw	37
  1212  007F72  A4D8               	btfss	status,2,c
  1213  007F74  EFBE  F03F         	goto	u1271
  1214  007F78  EFC0  F03F         	goto	u1270
  1215  007F7C                     u1271:
  1216  007F7C  EFD7  F03F         	goto	l2074
  1217  007F80                     u1270:
  1218  007F80                     
  1219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1220  007F80  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1221  007F84  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1222  007F88  2ADE               	incf	postinc2,f,c
  1223  007F8A  0E00               	movlw	0
  1224  007F8C  22DD               	addwfc	postdec2,f,c
  1225  007F8E                     
  1226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1227  007F8E  0E00               	movlw	0
  1228  007F90  6E02               	movwf	(fputc@c+1)^0,c
  1229  007F92  0E25               	movlw	37
  1230  007F94  6E01               	movwf	fputc@c^0,c
  1231  007F96  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1232  007F9A  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1233  007F9E  EC23  F03A         	call	_fputc	;wreg free
  1234  007FA2                     l2070:
  1235                           
  1236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1237  007FA2  0E00               	movlw	0
  1238  007FA4  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1239  007FA6  0E01               	movlw	1
  1240  007FA8  6E3C               	movwf	?_vfpfcnvrt^0,c
  1241  007FAA  EFFF  F03F         	goto	l306
  1242  007FAE                     l2074:
  1243                           
  1244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1245  007FAE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1246  007FB2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1247  007FB6  2ADE               	incf	postinc2,f,c
  1248  007FB8  0E00               	movlw	0
  1249  007FBA  22DD               	addwfc	postdec2,f,c
  1250  007FBC                     
  1251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1252  007FBC  0E00               	movlw	0
  1253  007FBE  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1254  007FC0  0E00               	movlw	0
  1255  007FC2  6E3C               	movwf	?_vfpfcnvrt^0,c
  1256  007FC4  EFFF  F03F         	goto	l306
  1257  007FC8                     l2080:
  1258                           
  1259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1260  007FC8  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1261  007FCC  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1262  007FD0  CFDE FFF6          	movff	postinc2,tblptrl
  1263  007FD4  CFDD FFF7          	movff	postdec2,tblptrh
  1264  007FD8                     	if	0	;tblptru may be non-zero
  1265  007FD8                     	endif
  1266  007FD8                     	if	0	;tblptru may be non-zero
  1267  007FD8                     	endif
  1268  007FD8  0008               	tblrd		*
  1269  007FDA  50F5               	movf	tablat,w,c
  1270  007FDC  6E01               	movwf	fputc@c^0,c
  1271  007FDE  6A02               	clrf	(fputc@c+1)^0,c
  1272  007FE0  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1273  007FE4  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1274  007FE8  EC23  F03A         	call	_fputc	;wreg free
  1275  007FEC                     
  1276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1277  007FEC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1278  007FF0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1279  007FF4  2ADE               	incf	postinc2,f,c
  1280  007FF6  0E00               	movlw	0
  1281  007FF8  22DD               	addwfc	postdec2,f,c
  1282  007FFA  EFD1  F03F         	goto	l2070
  1283  007FFE                     l306:
  1284  007FFE  0012               	return		;funcret
  1285  008000                     __end_of_vfpfcnvrt:
  1286                           	opt callstack 0
  1287                           
  1288 ;; *************** function _utoa *****************
  1289 ;; Defined at:
  1290 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1293 ;;		 -> sprintf@f(6), 
  1294 ;;  d               8   29[COMRAM] unsigned long long 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  n               8   49[COMRAM] unsigned long long 
  1297 ;;  i               2   57[COMRAM] int 
  1298 ;;  w               2   47[COMRAM] int 
  1299 ;;  p               2   45[COMRAM] int 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  2   27[COMRAM] int 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1309 ;;      Params:        10       0       0       0       0       0       0       0       0
  1310 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1311 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1312 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1313 ;;Total ram usage:       32 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    4
  1316 ;; This function calls:
  1317 ;;		___lodiv
  1318 ;;		___lomod
  1319 ;;		_pad
  1320 ;; This function is called by:
  1321 ;;		_vfpfcnvrt
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text4
  1326  007AAA                     __ptext4:
  1327                           	opt callstack 0
  1328  007AAA                     _utoa:
  1329                           	opt callstack 23
  1330  007AAA                     
  1331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1332  007AAA  0100               	movlb	0	; () banked
  1333  007AAC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1334  007AAE  EF5B  F03D         	goto	u1031
  1335  007AB2  EF5D  F03D         	goto	u1030
  1336  007AB6                     u1031:
  1337  007AB6  EF5E  F03D         	goto	l1814
  1338  007ABA                     u1030:
  1339  007ABA                     
  1340                           ; BSR set to: 0
  1341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1342  007ABA  9366               	bcf	_flags& (0+255),1,b
  1343  007ABC                     l1814:
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1347  007ABC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1348  007ABE  EF6B  F03D         	goto	u1040
  1349  007AC2  5165               	movf	(_prec+1)& (0+255),w,b
  1350  007AC4  E106               	bnz	u1041
  1351  007AC6  0564               	decf	_prec& (0+255),w,b
  1352  007AC8  B0D8               	btfsc	status,0,c
  1353  007ACA  EF69  F03D         	goto	u1041
  1354  007ACE  EF6B  F03D         	goto	u1040
  1355  007AD2                     u1041:
  1356  007AD2  EF71  F03D         	goto	l269
  1357  007AD6                     u1040:
  1358  007AD6                     
  1359                           ; BSR set to: 0
  1360  007AD6  0E00               	movlw	0
  1361  007AD8  6E2F               	movwf	(utoa@p+1)^0,c
  1362  007ADA  0E01               	movlw	1
  1363  007ADC  6E2E               	movwf	utoa@p^0,c
  1364  007ADE  EF75  F03D         	goto	l271
  1365  007AE2                     l269:
  1366                           
  1367                           ; BSR set to: 0
  1368  007AE2  C064  F02E         	movff	_prec,utoa@p
  1369  007AE6  C065  F02F         	movff	_prec+1,utoa@p+1
  1370  007AEA                     l271:
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1374  007AEA  C062  F030         	movff	_width,utoa@w
  1375  007AEE  C063  F031         	movff	_width+1,utoa@w+1
  1376                           
  1377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1378  007AF2  C01E  F032         	movff	utoa@d,utoa@n
  1379  007AF6  C01F  F033         	movff	utoa@d+1,utoa@n+1
  1380  007AFA  C020  F034         	movff	utoa@d+2,utoa@n+2
  1381  007AFE  C021  F035         	movff	utoa@d+3,utoa@n+3
  1382  007B02  C022  F036         	movff	utoa@d+4,utoa@n+4
  1383  007B06  C023  F037         	movff	utoa@d+5,utoa@n+5
  1384  007B0A  C024  F038         	movff	utoa@d+6,utoa@n+6
  1385  007B0E  C025  F039         	movff	utoa@d+7,utoa@n+7
  1386  007B12                     
  1387                           ; BSR set to: 0
  1388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1389  007B12  0E00               	movlw	0
  1390  007B14  6E3B               	movwf	(utoa@i+1)^0,c
  1391  007B16  0E1F               	movlw	31
  1392  007B18  6E3A               	movwf	utoa@i^0,c
  1393  007B1A                     
  1394                           ; BSR set to: 0
  1395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1396  007B1A  0E00               	movlw	0
  1397  007B1C  6F87               	movwf	(_dbuf+31)& (0+255),b
  1398                           
  1399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1400  007B1E  EF07  F03E         	goto	l1832
  1401  007B22                     l1822:
  1402                           
  1403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1404  007B22  063A               	decf	utoa@i^0,f,c
  1405  007B24  A0D8               	btfss	status,0,c
  1406  007B26  063B               	decf	(utoa@i+1)^0,f,c
  1407  007B28                     
  1408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1409  007B28  0E68               	movlw	low _dbuf
  1410  007B2A  243A               	addwf	utoa@i^0,w,c
  1411  007B2C  6ED9               	movwf	fsr2l,c
  1412  007B2E  0E00               	movlw	high _dbuf
  1413  007B30  203B               	addwfc	(utoa@i+1)^0,w,c
  1414  007B32  6EDA               	movwf	fsr2h,c
  1415  007B34  C032  F001         	movff	utoa@n,___lomod@dividend
  1416  007B38  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  1417  007B3C  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  1418  007B40  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  1419  007B44  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  1420  007B48  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  1421  007B4C  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  1422  007B50  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  1423  007B54  0E0A               	movlw	10
  1424  007B56  6E09               	movwf	___lomod@divisor^0,c
  1425  007B58  0E00               	movlw	0
  1426  007B5A  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1427  007B5C  0E00               	movlw	0
  1428  007B5E  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1429  007B60  0E00               	movlw	0
  1430  007B62  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1431  007B64  0E00               	movlw	0
  1432  007B66  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1433  007B68  0E00               	movlw	0
  1434  007B6A  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1435  007B6C  0E00               	movlw	0
  1436  007B6E  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1437  007B70  0E00               	movlw	0
  1438  007B72  6E10               	movwf	(___lomod@divisor+7)^0,c
  1439  007B74  EC88  F03A         	call	___lomod	;wreg free
  1440  007B78  C001  F026         	movff	?___lomod,??_utoa
  1441  007B7C  C002  F027         	movff	?___lomod+1,??_utoa+1
  1442  007B80  C003  F028         	movff	?___lomod+2,??_utoa+2
  1443  007B84  C004  F029         	movff	?___lomod+3,??_utoa+3
  1444  007B88  C005  F02A         	movff	?___lomod+4,??_utoa+4
  1445  007B8C  C006  F02B         	movff	?___lomod+5,??_utoa+5
  1446  007B90  C007  F02C         	movff	?___lomod+6,??_utoa+6
  1447  007B94  C008  F02D         	movff	?___lomod+7,??_utoa+7
  1448  007B98  5026               	movf	??_utoa^0,w,c
  1449  007B9A  0F30               	addlw	48
  1450  007B9C  6EDF               	movwf	indf2,c
  1451  007B9E                     
  1452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  1453  007B9E  062E               	decf	utoa@p^0,f,c
  1454  007BA0  A0D8               	btfss	status,0,c
  1455  007BA2  062F               	decf	(utoa@p+1)^0,f,c
  1456  007BA4                     
  1457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  1458  007BA4  0630               	decf	utoa@w^0,f,c
  1459  007BA6  A0D8               	btfss	status,0,c
  1460  007BA8  0631               	decf	(utoa@w+1)^0,f,c
  1461  007BAA                     
  1462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  1463  007BAA  C032  F001         	movff	utoa@n,___lodiv@dividend
  1464  007BAE  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1465  007BB2  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1466  007BB6  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1467  007BBA  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1468  007BBE  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1469  007BC2  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1470  007BC6  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1471  007BCA  0E0A               	movlw	10
  1472  007BCC  6E09               	movwf	___lodiv@divisor^0,c
  1473  007BCE  0E00               	movlw	0
  1474  007BD0  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1475  007BD2  0E00               	movlw	0
  1476  007BD4  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1477  007BD6  0E00               	movlw	0
  1478  007BD8  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1479  007BDA  0E00               	movlw	0
  1480  007BDC  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1481  007BDE  0E00               	movlw	0
  1482  007BE0  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1483  007BE2  0E00               	movlw	0
  1484  007BE4  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1485  007BE6  0E00               	movlw	0
  1486  007BE8  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1487  007BEA  ECF0  F03A         	call	___lodiv	;wreg free
  1488  007BEE  C001  F032         	movff	?___lodiv,utoa@n
  1489  007BF2  C002  F033         	movff	?___lodiv+1,utoa@n+1
  1490  007BF6  C003  F034         	movff	?___lodiv+2,utoa@n+2
  1491  007BFA  C004  F035         	movff	?___lodiv+3,utoa@n+3
  1492  007BFE  C005  F036         	movff	?___lodiv+4,utoa@n+4
  1493  007C02  C006  F037         	movff	?___lodiv+5,utoa@n+5
  1494  007C06  C007  F038         	movff	?___lodiv+6,utoa@n+6
  1495  007C0A  C008  F039         	movff	?___lodiv+7,utoa@n+7
  1496  007C0E                     l1832:
  1497                           
  1498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1499  007C0E  503A               	movf	utoa@i^0,w,c
  1500  007C10  103B               	iorwf	(utoa@i+1)^0,w,c
  1501  007C12  B4D8               	btfsc	status,2,c
  1502  007C14  EF0E  F03E         	goto	u1051
  1503  007C18  EF10  F03E         	goto	u1050
  1504  007C1C                     u1051:
  1505  007C1C  EF41  F03E         	goto	l1842
  1506  007C20                     u1050:
  1507  007C20  5032               	movf	utoa@n^0,w,c
  1508  007C22  1033               	iorwf	(utoa@n+1)^0,w,c
  1509  007C24  1034               	iorwf	(utoa@n+2)^0,w,c
  1510  007C26  1035               	iorwf	(utoa@n+3)^0,w,c
  1511  007C28  1036               	iorwf	(utoa@n+4)^0,w,c
  1512  007C2A  1037               	iorwf	(utoa@n+5)^0,w,c
  1513  007C2C  1038               	iorwf	(utoa@n+6)^0,w,c
  1514  007C2E  1039               	iorwf	(utoa@n+7)^0,w,c
  1515  007C30  A4D8               	btfss	status,2,c
  1516  007C32  EF1D  F03E         	goto	u1061
  1517  007C36  EF1F  F03E         	goto	u1060
  1518  007C3A                     u1061:
  1519  007C3A  EF91  F03D         	goto	l1822
  1520  007C3E                     u1060:
  1521  007C3E  BE2F               	btfsc	(utoa@p+1)^0,7,c
  1522  007C40  EF2C  F03E         	goto	u1070
  1523  007C44  502F               	movf	(utoa@p+1)^0,w,c
  1524  007C46  E106               	bnz	u1071
  1525  007C48  042E               	decf	utoa@p^0,w,c
  1526  007C4A  B0D8               	btfsc	status,0,c
  1527  007C4C  EF2A  F03E         	goto	u1071
  1528  007C50  EF2C  F03E         	goto	u1070
  1529  007C54                     u1071:
  1530  007C54  EF91  F03D         	goto	l1822
  1531  007C58                     u1070:
  1532  007C58  BE31               	btfsc	(utoa@w+1)^0,7,c
  1533  007C5A  EF37  F03E         	goto	u1081
  1534  007C5E  5031               	movf	(utoa@w+1)^0,w,c
  1535  007C60  E108               	bnz	u1080
  1536  007C62  0430               	decf	utoa@w^0,w,c
  1537  007C64  A0D8               	btfss	status,0,c
  1538  007C66  EF37  F03E         	goto	u1081
  1539  007C6A  EF39  F03E         	goto	u1080
  1540  007C6E                     u1081:
  1541  007C6E  EF41  F03E         	goto	l1842
  1542  007C72                     u1080:
  1543  007C72  0100               	movlb	0	; () banked
  1544  007C74  B366               	btfsc	_flags& (0+255),1,b
  1545  007C76  EF3F  F03E         	goto	u1091
  1546  007C7A  EF41  F03E         	goto	u1090
  1547  007C7E                     u1091:
  1548  007C7E  EF91  F03D         	goto	l1822
  1549  007C82                     u1090:
  1550  007C82                     l1842:
  1551                           
  1552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  1553  007C82  C01C  F011         	movff	utoa@fp,pad@fp
  1554  007C86  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  1555  007C8A  0E68               	movlw	low _dbuf
  1556  007C8C  243A               	addwf	utoa@i^0,w,c
  1557  007C8E  6E13               	movwf	pad@buf^0,c
  1558  007C90  0E00               	movlw	high _dbuf
  1559  007C92  203B               	addwfc	(utoa@i+1)^0,w,c
  1560  007C94  6E14               	movwf	(pad@buf+1)^0,c
  1561  007C96  C030  F015         	movff	utoa@w,pad@p
  1562  007C9A  C031  F016         	movff	utoa@w+1,pad@p+1
  1563  007C9E  ECC0  F039         	call	_pad	;wreg free
  1564  007CA2  C011  F01C         	movff	?_pad,?_utoa
  1565  007CA6  C012  F01D         	movff	?_pad+1,?_utoa+1
  1566  007CAA  0012               	return		;funcret
  1567  007CAC                     __end_of_utoa:
  1568                           	opt callstack 0
  1569                           
  1570 ;; *************** function _pad *****************
  1571 ;; Defined at:
  1572 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1575 ;;		 -> sprintf@f(6), 
  1576 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1577 ;;		 -> dbuf(32), 
  1578 ;;  p               2   20[COMRAM] int 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  w               2   25[COMRAM] int 
  1581 ;;  i               2   23[COMRAM] int 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2   16[COMRAM] int 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1591 ;;      Params:         6       0       0       0       0       0       0       0       0
  1592 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1593 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1594 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1595 ;;Total ram usage:       11 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    3
  1598 ;; This function calls:
  1599 ;;		_fputc
  1600 ;;		_fputs
  1601 ;;		_strlen
  1602 ;; This function is called by:
  1603 ;;		_utoa
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text5
  1608  007380                     __ptext5:
  1609                           	opt callstack 0
  1610  007380                     _pad:
  1611                           	opt callstack 23
  1612  007380                     
  1613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1614  007380  0100               	movlb	0	; () banked
  1615  007382  A166               	btfss	_flags& (0+255),0,b
  1616  007384  EFC6  F039         	goto	u871
  1617  007388  EFC8  F039         	goto	u870
  1618  00738C                     u871:
  1619  00738C  EFD2  F039         	goto	l1724
  1620  007390                     u870:
  1621  007390                     
  1622                           ; BSR set to: 0
  1623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1624  007390  C013  F00A         	movff	pad@buf,fputs@s
  1625  007394  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1626  007398  C011  F00C         	movff	pad@fp,fputs@fp
  1627  00739C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1628  0073A0  EC9C  F038         	call	_fputs	;wreg free
  1629  0073A4                     l1724:
  1630                           
  1631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1632  0073A4  BE16               	btfsc	(pad@p+1)^0,7,c
  1633  0073A6  EFD7  F039         	goto	u881
  1634  0073AA  EFD9  F039         	goto	u880
  1635  0073AE                     u881:
  1636  0073AE  EFDF  F039         	goto	l1728
  1637  0073B2                     u880:
  1638  0073B2  C015  F01A         	movff	pad@p,pad@w
  1639  0073B6  C016  F01B         	movff	pad@p+1,pad@w+1
  1640  0073BA  EFE3  F039         	goto	l259
  1641  0073BE                     l1728:
  1642  0073BE  0E00               	movlw	0
  1643  0073C0  6E1B               	movwf	(pad@w+1)^0,c
  1644  0073C2  0E00               	movlw	0
  1645  0073C4  6E1A               	movwf	pad@w^0,c
  1646  0073C6                     l259:
  1647                           
  1648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1649  0073C6  0E00               	movlw	0
  1650  0073C8  6E19               	movwf	(pad@i+1)^0,c
  1651  0073CA  0E00               	movlw	0
  1652  0073CC  6E18               	movwf	pad@i^0,c
  1653                           
  1654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1655  0073CE  EFF5  F039         	goto	l1734
  1656  0073D2                     l1730:
  1657                           
  1658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1659  0073D2  0E00               	movlw	0
  1660  0073D4  6E02               	movwf	(fputc@c+1)^0,c
  1661  0073D6  0E20               	movlw	32
  1662  0073D8  6E01               	movwf	fputc@c^0,c
  1663  0073DA  C011  F003         	movff	pad@fp,fputc@fp
  1664  0073DE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1665  0073E2  EC23  F03A         	call	_fputc	;wreg free
  1666  0073E6                     
  1667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1668  0073E6  4A18               	infsnz	pad@i^0,f,c
  1669  0073E8  2A19               	incf	(pad@i+1)^0,f,c
  1670  0073EA                     l1734:
  1671                           
  1672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1673  0073EA  501A               	movf	pad@w^0,w,c
  1674  0073EC  5C18               	subwf	pad@i^0,w,c
  1675  0073EE  5019               	movf	(pad@i+1)^0,w,c
  1676  0073F0  0A80               	xorlw	128
  1677  0073F2  6E17               	movwf	??_pad^0,c
  1678  0073F4  501B               	movf	(pad@w+1)^0,w,c
  1679  0073F6  0A80               	xorlw	128
  1680  0073F8  5817               	subwfb	??_pad^0,w,c
  1681  0073FA  A0D8               	btfss	status,0,c
  1682  0073FC  EF02  F03A         	goto	u891
  1683  007400  EF04  F03A         	goto	u890
  1684  007404                     u891:
  1685  007404  EFE9  F039         	goto	l1730
  1686  007408                     u890:
  1687  007408                     
  1688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1689  007408  0100               	movlb	0	; () banked
  1690  00740A  B166               	btfsc	_flags& (0+255),0,b
  1691  00740C  EF0A  F03A         	goto	u901
  1692  007410  EF0C  F03A         	goto	u900
  1693  007414                     u901:
  1694  007414  EF16  F03A         	goto	l1738
  1695  007418                     u900:
  1696  007418                     
  1697                           ; BSR set to: 0
  1698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1699  007418  C013  F00A         	movff	pad@buf,fputs@s
  1700  00741C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1701  007420  C011  F00C         	movff	pad@fp,fputs@fp
  1702  007424  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1703  007428  EC9C  F038         	call	_fputs	;wreg free
  1704  00742C                     l1738:
  1705                           
  1706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1707  00742C  C013  F001         	movff	pad@buf,strlen@s
  1708  007430  C014  F002         	movff	pad@buf+1,strlen@s+1
  1709  007434  ECC4  F037         	call	_strlen	;wreg free
  1710  007438  501A               	movf	pad@w^0,w,c
  1711  00743A  2401               	addwf	?_strlen^0,w,c
  1712  00743C  6E11               	movwf	?_pad^0,c
  1713  00743E  501B               	movf	(pad@w+1)^0,w,c
  1714  007440  2002               	addwfc	(?_strlen+1)^0,w,c
  1715  007442  6E12               	movwf	(?_pad+1)^0,c
  1716  007444  0012               	return		;funcret
  1717  007446                     __end_of_pad:
  1718                           	opt callstack 0
  1719                           
  1720 ;; *************** function _strlen *****************
  1721 ;; Defined at:
  1722 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1725 ;;		 -> dbuf(32), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1728 ;;		 -> dbuf(32), 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  2    0[COMRAM] unsigned int 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1738 ;;      Params:         2       0       0       0       0       0       0       0       0
  1739 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1741 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1742 ;;Total ram usage:        4 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_pad
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text6
  1752  006F88                     __ptext6:
  1753                           	opt callstack 0
  1754  006F88                     _strlen:
  1755                           	opt callstack 25
  1756  006F88  C001  F003         	movff	strlen@s,strlen@a
  1757  006F8C  C002  F004         	movff	strlen@s+1,strlen@a+1
  1758  006F90  EFCC  F037         	goto	l1714
  1759  006F94                     l1712:
  1760  006F94  4A01               	infsnz	strlen@s^0,f,c
  1761  006F96  2A02               	incf	(strlen@s+1)^0,f,c
  1762  006F98                     l1714:
  1763  006F98  C001  FFD9         	movff	strlen@s,fsr2l
  1764  006F9C  C002  FFDA         	movff	strlen@s+1,fsr2h
  1765  006FA0  50DF               	movf	indf2,w,c
  1766  006FA2  A4D8               	btfss	status,2,c
  1767  006FA4  EFD6  F037         	goto	u861
  1768  006FA8  EFD8  F037         	goto	u860
  1769  006FAC                     u861:
  1770  006FAC  EFCA  F037         	goto	l1712
  1771  006FB0                     u860:
  1772  006FB0  5003               	movf	strlen@a^0,w,c
  1773  006FB2  5C01               	subwf	strlen@s^0,w,c
  1774  006FB4  6E01               	movwf	?_strlen^0,c
  1775  006FB6  5004               	movf	(strlen@a+1)^0,w,c
  1776  006FB8  5802               	subwfb	(strlen@s+1)^0,w,c
  1777  006FBA  6E02               	movwf	(?_strlen+1)^0,c
  1778  006FBC  0012               	return		;funcret
  1779  006FBE                     __end_of_strlen:
  1780                           	opt callstack 0
  1781                           
  1782 ;; *************** function _fputs *****************
  1783 ;; Defined at:
  1784 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1787 ;;		 -> dbuf(32), 
  1788 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1789 ;;		 -> sprintf@f(6), 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  i               2   14[COMRAM] int 
  1792 ;;  c               1   13[COMRAM] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  2    9[COMRAM] int 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1802 ;;      Params:         4       0       0       0       0       0       0       0       0
  1803 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1805 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1806 ;;Total ram usage:        7 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    2
  1809 ;; This function calls:
  1810 ;;		_fputc
  1811 ;; This function is called by:
  1812 ;;		_pad
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text7
  1817  007138                     __ptext7:
  1818                           	opt callstack 0
  1819  007138                     _fputs:
  1820                           	opt callstack 23
  1821  007138  0E00               	movlw	0
  1822  00713A  6E10               	movwf	(fputs@i+1)^0,c
  1823  00713C  0E00               	movlw	0
  1824  00713E  6E0F               	movwf	fputs@i^0,c
  1825  007140  EFAD  F038         	goto	l1708
  1826  007144                     l1704:
  1827  007144  C00E  F001         	movff	fputs@c,fputc@c
  1828  007148  6A02               	clrf	(fputc@c+1)^0,c
  1829  00714A  C00C  F003         	movff	fputs@fp,fputc@fp
  1830  00714E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1831  007152  EC23  F03A         	call	_fputc	;wreg free
  1832  007156  4A0F               	infsnz	fputs@i^0,f,c
  1833  007158  2A10               	incf	(fputs@i+1)^0,f,c
  1834  00715A                     l1708:
  1835  00715A  500F               	movf	fputs@i^0,w,c
  1836  00715C  240A               	addwf	fputs@s^0,w,c
  1837  00715E  6ED9               	movwf	fsr2l,c
  1838  007160  5010               	movf	(fputs@i+1)^0,w,c
  1839  007162  200B               	addwfc	(fputs@s+1)^0,w,c
  1840  007164  6EDA               	movwf	fsr2h,c
  1841  007166  50DF               	movf	indf2,w,c
  1842  007168  6E0E               	movwf	fputs@c^0,c
  1843  00716A  500E               	movf	fputs@c^0,w,c
  1844  00716C  A4D8               	btfss	status,2,c
  1845  00716E  EFBB  F038         	goto	u851
  1846  007172  EFBD  F038         	goto	u850
  1847  007176                     u851:
  1848  007176  EFA2  F038         	goto	l1704
  1849  00717A                     u850:
  1850  00717A  0012               	return		;funcret
  1851  00717C                     __end_of_fputs:
  1852                           	opt callstack 0
  1853                           
  1854 ;; *************** function _fputc *****************
  1855 ;; Defined at:
  1856 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  c               2    0[COMRAM] int 
  1859 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1860 ;;		 -> sprintf@f(6), 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2    0[COMRAM] int 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1872 ;;      Params:         4       0       0       0       0       0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1874 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1875 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1876 ;;Total ram usage:        9 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    1
  1879 ;; This function calls:
  1880 ;;		_putch
  1881 ;; This function is called by:
  1882 ;;		_pad
  1883 ;;		_vfpfcnvrt
  1884 ;;		_fputs
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text8
  1889  007446                     __ptext8:
  1890                           	opt callstack 0
  1891  007446                     _fputc:
  1892                           	opt callstack 23
  1893  007446  5003               	movf	fputc@fp^0,w,c
  1894  007448  1004               	iorwf	(fputc@fp+1)^0,w,c
  1895  00744A  B4D8               	btfsc	status,2,c
  1896  00744C  EF2A  F03A         	goto	u811
  1897  007450  EF2C  F03A         	goto	u810
  1898  007454                     u811:
  1899  007454  EF35  F03A         	goto	l1692
  1900  007458                     u810:
  1901  007458  5003               	movf	fputc@fp^0,w,c
  1902  00745A  1004               	iorwf	(fputc@fp+1)^0,w,c
  1903  00745C  A4D8               	btfss	status,2,c
  1904  00745E  EF33  F03A         	goto	u821
  1905  007462  EF35  F03A         	goto	u820
  1906  007466                     u821:
  1907  007466  EF3A  F03A         	goto	l1694
  1908  00746A                     u820:
  1909  00746A                     l1692:
  1910  00746A  5001               	movf	fputc@c^0,w,c
  1911  00746C  EC5D  F037         	call	_putch
  1912  007470  EF87  F03A         	goto	l1044
  1913  007474                     l1694:
  1914  007474  EE20 F004          	lfsr	2,4
  1915  007478  5003               	movf	fputc@fp^0,w,c
  1916  00747A  26D9               	addwf	fsr2l,f,c
  1917  00747C  5004               	movf	(fputc@fp+1)^0,w,c
  1918  00747E  22DA               	addwfc	fsr2h,f,c
  1919  007480  50DE               	movf	postinc2,w,c
  1920  007482  10DE               	iorwf	postinc2,w,c
  1921  007484  B4D8               	btfsc	status,2,c
  1922  007486  EF47  F03A         	goto	u831
  1923  00748A  EF49  F03A         	goto	u830
  1924  00748E                     u831:
  1925  00748E  EF64  F03A         	goto	l1698
  1926  007492                     u830:
  1927  007492  EE20 F004          	lfsr	2,4
  1928  007496  5003               	movf	fputc@fp^0,w,c
  1929  007498  26D9               	addwf	fsr2l,f,c
  1930  00749A  5004               	movf	(fputc@fp+1)^0,w,c
  1931  00749C  22DA               	addwfc	fsr2h,f,c
  1932  00749E  EE10 F002          	lfsr	1,2
  1933  0074A2  5003               	movf	fputc@fp^0,w,c
  1934  0074A4  26E1               	addwf	fsr1l,f,c
  1935  0074A6  5004               	movf	(fputc@fp+1)^0,w,c
  1936  0074A8  22E2               	addwfc	fsr1h,f,c
  1937  0074AA  50DE               	movf	postinc2,w,c
  1938  0074AC  5CE6               	subwf	postinc1,w,c
  1939  0074AE  50E6               	movf	postinc1,w,c
  1940  0074B0  0A80               	xorlw	128
  1941  0074B2  6E09               	movwf	(??_fputc+4)^0,c
  1942  0074B4  50DE               	movf	postinc2,w,c
  1943  0074B6  0A80               	xorlw	128
  1944  0074B8  5809               	subwfb	(??_fputc+4)^0,w,c
  1945  0074BA  B0D8               	btfsc	status,0,c
  1946  0074BC  EF62  F03A         	goto	u841
  1947  0074C0  EF64  F03A         	goto	u840
  1948  0074C4                     u841:
  1949  0074C4  EF87  F03A         	goto	l1044
  1950  0074C8                     u840:
  1951  0074C8                     l1698:
  1952  0074C8  EE20 F002          	lfsr	2,2
  1953  0074CC  5003               	movf	fputc@fp^0,w,c
  1954  0074CE  26D9               	addwf	fsr2l,f,c
  1955  0074D0  5004               	movf	(fputc@fp+1)^0,w,c
  1956  0074D2  22DA               	addwfc	fsr2h,f,c
  1957  0074D4  CFDE F005          	movff	postinc2,??_fputc
  1958  0074D8  CFDD F006          	movff	postdec2,??_fputc+1
  1959  0074DC  C003  FFD9         	movff	fputc@fp,fsr2l
  1960  0074E0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1961  0074E4  CFDE F007          	movff	postinc2,??_fputc+2
  1962  0074E8  CFDD F008          	movff	postdec2,??_fputc+3
  1963  0074EC  5005               	movf	??_fputc^0,w,c
  1964  0074EE  2407               	addwf	(??_fputc+2)^0,w,c
  1965  0074F0  6ED9               	movwf	fsr2l,c
  1966  0074F2  5006               	movf	(??_fputc+1)^0,w,c
  1967  0074F4  2008               	addwfc	(??_fputc+3)^0,w,c
  1968  0074F6  6EDA               	movwf	fsr2h,c
  1969  0074F8  C001  FFDF         	movff	fputc@c,indf2
  1970  0074FC  EE20 F002          	lfsr	2,2
  1971  007500  5003               	movf	fputc@fp^0,w,c
  1972  007502  26D9               	addwf	fsr2l,f,c
  1973  007504  5004               	movf	(fputc@fp+1)^0,w,c
  1974  007506  22DA               	addwfc	fsr2h,f,c
  1975  007508  2ADE               	incf	postinc2,f,c
  1976  00750A  0E00               	movlw	0
  1977  00750C  22DD               	addwfc	postdec2,f,c
  1978  00750E                     l1044:
  1979  00750E  0012               	return		;funcret
  1980  007510                     __end_of_fputc:
  1981                           	opt callstack 0
  1982                           
  1983 ;; *************** function _putch *****************
  1984 ;; Defined at:
  1985 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  c               1    wreg     unsigned char 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  c               1    0[COMRAM] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1999 ;;      Params:         0       0       0       0       0       0       0       0       0
  2000 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2002 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2003 ;;Total ram usage:        0 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_fputc
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text9
  2013  006EBA                     __ptext9:
  2014                           	opt callstack 0
  2015  006EBA                     _putch:
  2016                           	opt callstack 23
  2017  006EBA  0012               	return		;funcret
  2018  006EBC                     __end_of_putch:
  2019                           	opt callstack 0
  2020                           
  2021 ;; *************** function ___lomod *****************
  2022 ;; Defined at:
  2023 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  dividend        8    0[COMRAM] unsigned long long 
  2026 ;;  divisor         8    8[COMRAM] unsigned long long 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  counter         1   16[COMRAM] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  8    0[COMRAM] unsigned long long 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2038 ;;      Params:        16       0       0       0       0       0       0       0       0
  2039 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2041 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2042 ;;Total ram usage:       17 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_utoa
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text10
  2052  007510                     __ptext10:
  2053                           	opt callstack 0
  2054  007510                     ___lomod:
  2055                           	opt callstack 26
  2056  007510  5009               	movf	___lomod@divisor^0,w,c
  2057  007512  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2058  007514  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2059  007516  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2060  007518  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2061  00751A  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2062  00751C  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2063  00751E  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2064  007520  B4D8               	btfsc	status,2,c
  2065  007522  EF95  F03A         	goto	u971
  2066  007526  EF97  F03A         	goto	u970
  2067  00752A                     u971:
  2068  00752A  EFDF  F03A         	goto	l764
  2069  00752E                     u970:
  2070  00752E  0E01               	movlw	1
  2071  007530  6E11               	movwf	___lomod@counter^0,c
  2072  007532  EFA5  F03A         	goto	l1780
  2073  007536                     l1778:
  2074  007536  90D8               	bcf	status,0,c
  2075  007538  3609               	rlcf	___lomod@divisor^0,f,c
  2076  00753A  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2077  00753C  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2078  00753E  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2079  007540  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2080  007542  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2081  007544  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2082  007546  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2083  007548  2A11               	incf	___lomod@counter^0,f,c
  2084  00754A                     l1780:
  2085  00754A  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2086  00754C  EFAA  F03A         	goto	u981
  2087  007550  EFAC  F03A         	goto	u980
  2088  007554                     u981:
  2089  007554  EF9B  F03A         	goto	l1778
  2090  007558                     u980:
  2091  007558                     l1782:
  2092  007558  5009               	movf	___lomod@divisor^0,w,c
  2093  00755A  5C01               	subwf	___lomod@dividend^0,w,c
  2094  00755C  500A               	movf	(___lomod@divisor+1)^0,w,c
  2095  00755E  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2096  007560  500B               	movf	(___lomod@divisor+2)^0,w,c
  2097  007562  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2098  007564  500C               	movf	(___lomod@divisor+3)^0,w,c
  2099  007566  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2100  007568  500D               	movf	(___lomod@divisor+4)^0,w,c
  2101  00756A  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2102  00756C  500E               	movf	(___lomod@divisor+5)^0,w,c
  2103  00756E  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2104  007570  500F               	movf	(___lomod@divisor+6)^0,w,c
  2105  007572  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2106  007574  5010               	movf	(___lomod@divisor+7)^0,w,c
  2107  007576  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2108  007578  A0D8               	btfss	status,0,c
  2109  00757A  EFC1  F03A         	goto	u991
  2110  00757E  EFC3  F03A         	goto	u990
  2111  007582                     u991:
  2112  007582  EFD3  F03A         	goto	l1786
  2113  007586                     u990:
  2114  007586  5009               	movf	___lomod@divisor^0,w,c
  2115  007588  5E01               	subwf	___lomod@dividend^0,f,c
  2116  00758A  500A               	movf	(___lomod@divisor+1)^0,w,c
  2117  00758C  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2118  00758E  500B               	movf	(___lomod@divisor+2)^0,w,c
  2119  007590  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2120  007592  500C               	movf	(___lomod@divisor+3)^0,w,c
  2121  007594  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2122  007596  500D               	movf	(___lomod@divisor+4)^0,w,c
  2123  007598  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2124  00759A  500E               	movf	(___lomod@divisor+5)^0,w,c
  2125  00759C  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2126  00759E  500F               	movf	(___lomod@divisor+6)^0,w,c
  2127  0075A0  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2128  0075A2  5010               	movf	(___lomod@divisor+7)^0,w,c
  2129  0075A4  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2130  0075A6                     l1786:
  2131  0075A6  90D8               	bcf	status,0,c
  2132  0075A8  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2133  0075AA  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2134  0075AC  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2135  0075AE  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2136  0075B0  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2137  0075B2  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2138  0075B4  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2139  0075B6  3209               	rrcf	___lomod@divisor^0,f,c
  2140  0075B8  2E11               	decfsz	___lomod@counter^0,f,c
  2141  0075BA  EFAC  F03A         	goto	l1782
  2142  0075BE                     l764:
  2143  0075BE  C001  F001         	movff	___lomod@dividend,?___lomod
  2144  0075C2  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2145  0075C6  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2146  0075CA  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2147  0075CE  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2148  0075D2  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2149  0075D6  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2150  0075DA  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2151  0075DE  0012               	return		;funcret
  2152  0075E0                     __end_of___lomod:
  2153                           	opt callstack 0
  2154                           
  2155 ;; *************** function ___lodiv *****************
  2156 ;; Defined at:
  2157 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  dividend        8    0[COMRAM] unsigned long long 
  2160 ;;  divisor         8    8[COMRAM] unsigned long long 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  quotient        8   16[COMRAM] unsigned long long 
  2163 ;;  counter         1   24[COMRAM] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  8    0[COMRAM] unsigned long long 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2173 ;;      Params:        16       0       0       0       0       0       0       0       0
  2174 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2176 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2177 ;;Total ram usage:       25 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_utoa
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text11
  2187  0075E0                     __ptext11:
  2188                           	opt callstack 0
  2189  0075E0                     ___lodiv:
  2190                           	opt callstack 26
  2191  0075E0  EE20  F011         	lfsr	2,___lodiv@quotient
  2192  0075E4  0E07               	movlw	7
  2193  0075E6                     u931:
  2194  0075E6  6ADE               	clrf	postinc2,c
  2195  0075E8  06E8               	decf	wreg,f,c
  2196  0075EA  E2FD               	bc	u931
  2197  0075EC  5009               	movf	___lodiv@divisor^0,w,c
  2198  0075EE  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2199  0075F0  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2200  0075F2  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2201  0075F4  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2202  0075F6  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2203  0075F8  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2204  0075FA  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2205  0075FC  B4D8               	btfsc	status,2,c
  2206  0075FE  EF03  F03B         	goto	u941
  2207  007602  EF05  F03B         	goto	u940
  2208  007606                     u941:
  2209  007606  EF57  F03B         	goto	l754
  2210  00760A                     u940:
  2211  00760A  0E01               	movlw	1
  2212  00760C  6E19               	movwf	___lodiv@counter^0,c
  2213  00760E  EF13  F03B         	goto	l1760
  2214  007612                     l1758:
  2215  007612  90D8               	bcf	status,0,c
  2216  007614  3609               	rlcf	___lodiv@divisor^0,f,c
  2217  007616  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2218  007618  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2219  00761A  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2220  00761C  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2221  00761E  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2222  007620  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2223  007622  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2224  007624  2A19               	incf	___lodiv@counter^0,f,c
  2225  007626                     l1760:
  2226  007626  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2227  007628  EF18  F03B         	goto	u951
  2228  00762C  EF1A  F03B         	goto	u950
  2229  007630                     u951:
  2230  007630  EF09  F03B         	goto	l1758
  2231  007634                     u950:
  2232  007634                     l1762:
  2233  007634  90D8               	bcf	status,0,c
  2234  007636  3611               	rlcf	___lodiv@quotient^0,f,c
  2235  007638  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2236  00763A  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2237  00763C  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2238  00763E  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2239  007640  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2240  007642  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2241  007644  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2242  007646  5009               	movf	___lodiv@divisor^0,w,c
  2243  007648  5C01               	subwf	___lodiv@dividend^0,w,c
  2244  00764A  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2245  00764C  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2246  00764E  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2247  007650  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2248  007652  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2249  007654  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2250  007656  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2251  007658  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2252  00765A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2253  00765C  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2254  00765E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2255  007660  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2256  007662  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2257  007664  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2258  007666  A0D8               	btfss	status,0,c
  2259  007668  EF38  F03B         	goto	u961
  2260  00766C  EF3A  F03B         	goto	u960
  2261  007670                     u961:
  2262  007670  EF4B  F03B         	goto	l1770
  2263  007674                     u960:
  2264  007674  5009               	movf	___lodiv@divisor^0,w,c
  2265  007676  5E01               	subwf	___lodiv@dividend^0,f,c
  2266  007678  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2267  00767A  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2268  00767C  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2269  00767E  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2270  007680  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2271  007682  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2272  007684  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2273  007686  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2274  007688  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2275  00768A  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2276  00768C  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2277  00768E  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2278  007690  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2279  007692  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2280  007694  8011               	bsf	___lodiv@quotient^0,0,c
  2281  007696                     l1770:
  2282  007696  90D8               	bcf	status,0,c
  2283  007698  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2284  00769A  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2285  00769C  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2286  00769E  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2287  0076A0  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2288  0076A2  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2289  0076A4  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2290  0076A6  3209               	rrcf	___lodiv@divisor^0,f,c
  2291  0076A8  2E19               	decfsz	___lodiv@counter^0,f,c
  2292  0076AA  EF1A  F03B         	goto	l1762
  2293  0076AE                     l754:
  2294  0076AE  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2295  0076B2  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2296  0076B6  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2297  0076BA  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2298  0076BE  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2299  0076C2  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2300  0076C6  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2301  0076CA  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2302  0076CE  0012               	return		;funcret
  2303  0076D0                     __end_of___lodiv:
  2304                           	opt callstack 0
  2305                           
  2306 ;; *************** function _atoi *****************
  2307 ;; Defined at:
  2308 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2311 ;;		 -> STR_1(5), 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  n               2   20[COMRAM] int 
  2314 ;;  neg             2   13[COMRAM] int 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  2    7[COMRAM] int 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2324 ;;      Params:         2       0       0       0       0       0       0       0       0
  2325 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2326 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2327 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2328 ;;Total ram usage:       15 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    1
  2331 ;; This function calls:
  2332 ;;		___wmul
  2333 ;;		_isdigit
  2334 ;;		_isspace
  2335 ;; This function is called by:
  2336 ;;		_vfpfcnvrt
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text12
  2341  00791A                     __ptext12:
  2342                           	opt callstack 0
  2343  00791A                     _atoi:
  2344                           	opt callstack 26
  2345  00791A  0E00               	movlw	0
  2346  00791C  6E16               	movwf	(atoi@n+1)^0,c
  2347  00791E  0E00               	movlw	0
  2348  007920  6E15               	movwf	atoi@n^0,c
  2349  007922  0E00               	movlw	0
  2350  007924  6E0F               	movwf	(atoi@neg+1)^0,c
  2351  007926  0E00               	movlw	0
  2352  007928  6E0E               	movwf	atoi@neg^0,c
  2353  00792A  EF99  F03C         	goto	l1850
  2354  00792E                     l1848:
  2355  00792E  4A08               	infsnz	atoi@s^0,f,c
  2356  007930  2A09               	incf	(atoi@s+1)^0,f,c
  2357  007932                     l1850:
  2358  007932  0E01               	movlw	1
  2359  007934  6E14               	movwf	_atoi$979^0,c
  2360  007936  C008  FFF6         	movff	atoi@s,tblptrl
  2361  00793A  C009  FFF7         	movff	atoi@s+1,tblptrh
  2362  00793E                     	if	0	;tblptru may be non-zero
  2363  00793E                     	endif
  2364  00793E                     	if	0	;tblptru may be non-zero
  2365  00793E                     	endif
  2366  00793E  0008               	tblrd		*
  2367  007940  50F5               	movf	tablat,w,c
  2368  007942  0A20               	xorlw	32
  2369  007944  B4D8               	btfsc	status,2,c
  2370  007946  EFA7  F03C         	goto	u1101
  2371  00794A  EFA9  F03C         	goto	u1100
  2372  00794E                     u1101:
  2373  00794E  EFC6  F03C         	goto	l1858
  2374  007952                     u1100:
  2375  007952  0EF7               	movlw	247
  2376  007954  6E0A               	movwf	??_atoi^0,c
  2377  007956  0EFF               	movlw	255
  2378  007958  6E0B               	movwf	(??_atoi+1)^0,c
  2379  00795A  C008  FFF6         	movff	atoi@s,tblptrl
  2380  00795E  C009  FFF7         	movff	atoi@s+1,tblptrh
  2381  007962                     	if	0	;tblptru may be non-zero
  2382  007962                     	endif
  2383  007962                     	if	0	;tblptru may be non-zero
  2384  007962                     	endif
  2385  007962  0008               	tblrd		*
  2386  007964  50F5               	movf	tablat,w,c
  2387  007966  6E0C               	movwf	(??_atoi+2)^0,c
  2388  007968  6A0D               	clrf	(??_atoi+3)^0,c
  2389  00796A  500A               	movf	??_atoi^0,w,c
  2390  00796C  260C               	addwf	(??_atoi+2)^0,f,c
  2391  00796E  500B               	movf	(??_atoi+1)^0,w,c
  2392  007970  220D               	addwfc	(??_atoi+3)^0,f,c
  2393  007972  500D               	movf	(??_atoi+3)^0,w,c
  2394  007974  E109               	bnz	u1110
  2395  007976  0E05               	movlw	5
  2396  007978  5C0C               	subwf	(??_atoi+2)^0,w,c
  2397  00797A  A0D8               	btfss	status,0,c
  2398  00797C  EFC2  F03C         	goto	u1111
  2399  007980  EFC4  F03C         	goto	u1110
  2400  007984                     u1111:
  2401  007984  EFC6  F03C         	goto	l1858
  2402  007988                     u1110:
  2403  007988  0E00               	movlw	0
  2404  00798A  6E14               	movwf	_atoi$979^0,c
  2405  00798C                     l1858:
  2406  00798C  C014  F010         	movff	_atoi$979,_atoi$978
  2407  007990  6A11               	clrf	(_atoi$978+1)^0,c
  2408  007992  5010               	movf	_atoi$978^0,w,c
  2409  007994  1011               	iorwf	(_atoi$978+1)^0,w,c
  2410  007996  A4D8               	btfss	status,2,c
  2411  007998  EFD0  F03C         	goto	u1121
  2412  00799C  EFD2  F03C         	goto	u1120
  2413  0079A0                     u1121:
  2414  0079A0  EF97  F03C         	goto	l1848
  2415  0079A4                     u1120:
  2416  0079A4  EFDC  F03C         	goto	l1868
  2417  0079A8                     l1864:
  2418  0079A8  0E00               	movlw	0
  2419  0079AA  6E0F               	movwf	(atoi@neg+1)^0,c
  2420  0079AC  0E01               	movlw	1
  2421  0079AE  6E0E               	movwf	atoi@neg^0,c
  2422  0079B0                     l1866:
  2423  0079B0  4A08               	infsnz	atoi@s^0,f,c
  2424  0079B2  2A09               	incf	(atoi@s+1)^0,f,c
  2425  0079B4  EF11  F03D         	goto	l1874
  2426  0079B8                     l1868:
  2427  0079B8  C008  FFF6         	movff	atoi@s,tblptrl
  2428  0079BC  C009  FFF7         	movff	atoi@s+1,tblptrh
  2429  0079C0                     	if	0	;tblptru may be non-zero
  2430  0079C0                     	endif
  2431  0079C0                     	if	0	;tblptru may be non-zero
  2432  0079C0                     	endif
  2433  0079C0  0008               	tblrd		*
  2434  0079C2  50F5               	movf	tablat,w,c
  2435  0079C4  6E0A               	movwf	??_atoi^0,c
  2436  0079C6  6A0B               	clrf	(??_atoi+1)^0,c
  2437                           
  2438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2439                           ; Switch size 1, requested type "simple"
  2440                           ; Number of cases is 1, Range of values is 0 to 0
  2441                           ; switch strategies available:
  2442                           ; Name         Instructions Cycles
  2443                           ; simple_byte            4     3 (average)
  2444                           ;	Chosen strategy is simple_byte
  2445  0079C8  500B               	movf	(??_atoi+1)^0,w,c
  2446  0079CA  0A00               	xorlw	0	; case 0
  2447  0079CC  B4D8               	btfsc	status,2,c
  2448  0079CE  EFEB  F03C         	goto	l2352
  2449  0079D2  EF11  F03D         	goto	l1874
  2450  0079D6                     l2352:
  2451                           
  2452                           ; Switch size 1, requested type "simple"
  2453                           ; Number of cases is 2, Range of values is 43 to 45
  2454                           ; switch strategies available:
  2455                           ; Name         Instructions Cycles
  2456                           ; simple_byte            7     4 (average)
  2457                           ;	Chosen strategy is simple_byte
  2458  0079D6  500A               	movf	??_atoi^0,w,c
  2459  0079D8  0A2B               	xorlw	43	; case 43
  2460  0079DA  B4D8               	btfsc	status,2,c
  2461  0079DC  EFD8  F03C         	goto	l1866
  2462  0079E0  0A06               	xorlw	6	; case 45
  2463  0079E2  B4D8               	btfsc	status,2,c
  2464  0079E4  EFD4  F03C         	goto	l1864
  2465  0079E8  EF11  F03D         	goto	l1874
  2466  0079EC                     l1870:
  2467  0079EC  C015  F001         	movff	atoi@n,___wmul@multiplier
  2468  0079F0  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  2469  0079F4  0E00               	movlw	0
  2470  0079F6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2471  0079F8  0E0A               	movlw	10
  2472  0079FA  6E03               	movwf	___wmul@multiplicand^0,c
  2473  0079FC  EC9B  F037         	call	___wmul	;wreg free
  2474  007A00  C008  FFF6         	movff	atoi@s,tblptrl
  2475  007A04  C009  FFF7         	movff	atoi@s+1,tblptrh
  2476  007A08                     	if	0	;tblptru may be non-zero
  2477  007A08                     	endif
  2478  007A08                     	if	0	;tblptru may be non-zero
  2479  007A08                     	endif
  2480  007A08  0008               	tblrd		*
  2481  007A0A  50F5               	movf	tablat,w,c
  2482  007A0C  5E01               	subwf	?___wmul^0,f,c
  2483  007A0E  0E00               	movlw	0
  2484  007A10  5A02               	subwfb	(?___wmul+1)^0,f,c
  2485  007A12  0E30               	movlw	48
  2486  007A14  2401               	addwf	?___wmul^0,w,c
  2487  007A16  6E15               	movwf	atoi@n^0,c
  2488  007A18  0E00               	movlw	0
  2489  007A1A  2002               	addwfc	(?___wmul+1)^0,w,c
  2490  007A1C  6E16               	movwf	(atoi@n+1)^0,c
  2491  007A1E  EFD8  F03C         	goto	l1866
  2492  007A22                     l1874:
  2493  007A22  0ED0               	movlw	208
  2494  007A24  6E0A               	movwf	??_atoi^0,c
  2495  007A26  0EFF               	movlw	255
  2496  007A28  6E0B               	movwf	(??_atoi+1)^0,c
  2497  007A2A  C008  FFF6         	movff	atoi@s,tblptrl
  2498  007A2E  C009  FFF7         	movff	atoi@s+1,tblptrh
  2499  007A32                     	if	0	;tblptru may be non-zero
  2500  007A32                     	endif
  2501  007A32                     	if	0	;tblptru may be non-zero
  2502  007A32                     	endif
  2503  007A32  0008               	tblrd		*
  2504  007A34  50F5               	movf	tablat,w,c
  2505  007A36  6E0C               	movwf	(??_atoi+2)^0,c
  2506  007A38  6A0D               	clrf	(??_atoi+3)^0,c
  2507  007A3A  500A               	movf	??_atoi^0,w,c
  2508  007A3C  260C               	addwf	(??_atoi+2)^0,f,c
  2509  007A3E  500B               	movf	(??_atoi+1)^0,w,c
  2510  007A40  220D               	addwfc	(??_atoi+3)^0,f,c
  2511  007A42  500D               	movf	(??_atoi+3)^0,w,c
  2512  007A44  E10A               	bnz	u1130
  2513  007A46  0E0A               	movlw	10
  2514  007A48  5C0C               	subwf	(??_atoi+2)^0,w,c
  2515  007A4A  A0D8               	btfss	status,0,c
  2516  007A4C  EF2A  F03D         	goto	u1131
  2517  007A50  EF2D  F03D         	goto	u1130
  2518  007A54                     u1131:
  2519  007A54  0E01               	movlw	1
  2520  007A56  EF2E  F03D         	goto	u1140
  2521  007A5A                     u1130:
  2522  007A5A  0E00               	movlw	0
  2523  007A5C                     u1140:
  2524  007A5C  6E12               	movwf	_atoi$980^0,c
  2525  007A5E  6A13               	clrf	(_atoi$980+1)^0,c
  2526  007A60  5012               	movf	_atoi$980^0,w,c
  2527  007A62  1013               	iorwf	(_atoi$980+1)^0,w,c
  2528  007A64  A4D8               	btfss	status,2,c
  2529  007A66  EF37  F03D         	goto	u1151
  2530  007A6A  EF39  F03D         	goto	u1150
  2531  007A6E                     u1151:
  2532  007A6E  EFF6  F03C         	goto	l1870
  2533  007A72                     u1150:
  2534  007A72  500E               	movf	atoi@neg^0,w,c
  2535  007A74  100F               	iorwf	(atoi@neg+1)^0,w,c
  2536  007A76  A4D8               	btfss	status,2,c
  2537  007A78  EF40  F03D         	goto	u1161
  2538  007A7C  EF42  F03D         	goto	u1160
  2539  007A80                     u1161:
  2540  007A80  EF50  F03D         	goto	l1015
  2541  007A84                     u1160:
  2542  007A84  C015  F00A         	movff	atoi@n,??_atoi
  2543  007A88  C016  F00B         	movff	atoi@n+1,??_atoi+1
  2544  007A8C  1E0A               	comf	??_atoi^0,f,c
  2545  007A8E  1E0B               	comf	(??_atoi+1)^0,f,c
  2546  007A90  4A0A               	infsnz	??_atoi^0,f,c
  2547  007A92  2A0B               	incf	(??_atoi+1)^0,f,c
  2548  007A94  C00A  F008         	movff	??_atoi,?_atoi
  2549  007A98  C00B  F009         	movff	??_atoi+1,?_atoi+1
  2550  007A9C  EF54  F03D         	goto	l1018
  2551  007AA0                     l1015:
  2552  007AA0  C015  F008         	movff	atoi@n,?_atoi
  2553  007AA4  C016  F009         	movff	atoi@n+1,?_atoi+1
  2554  007AA8                     l1018:
  2555  007AA8  0012               	return		;funcret
  2556  007AAA                     __end_of_atoi:
  2557                           	opt callstack 0
  2558                           
  2559 ;; *************** function _isspace *****************
  2560 ;; Defined at:
  2561 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  c               2    0[COMRAM] int 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  2    0[COMRAM] int 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2575 ;;      Params:         2       0       0       0       0       0       0       0       0
  2576 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2577 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2578 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2579 ;;Total ram usage:        7 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_atoi
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text13
  2589  00720C                     __ptext13:
  2590                           	opt callstack 0
  2591  00720C                     _isspace:
  2592                           	opt callstack 26
  2593  00720C  0E01               	movlw	1
  2594  00720E  6E07               	movwf	_isspace$996^0,c
  2595  007210  0E20               	movlw	32
  2596  007212  1801               	xorwf	isspace@c^0,w,c
  2597  007214  1002               	iorwf	(isspace@c+1)^0,w,c
  2598  007216  B4D8               	btfsc	status,2,c
  2599  007218  EF10  F039         	goto	u1001
  2600  00721C  EF12  F039         	goto	u1000
  2601  007220                     u1001:
  2602  007220  EF2B  F039         	goto	l1798
  2603  007224                     u1000:
  2604  007224  0EF7               	movlw	247
  2605  007226  6E03               	movwf	??_isspace^0,c
  2606  007228  0EFF               	movlw	255
  2607  00722A  6E04               	movwf	(??_isspace+1)^0,c
  2608  00722C  C001  F005         	movff	isspace@c,??_isspace+2
  2609  007230  C002  F006         	movff	isspace@c+1,??_isspace+3
  2610  007234  5003               	movf	??_isspace^0,w,c
  2611  007236  2605               	addwf	(??_isspace+2)^0,f,c
  2612  007238  5004               	movf	(??_isspace+1)^0,w,c
  2613  00723A  2206               	addwfc	(??_isspace+3)^0,f,c
  2614  00723C  5006               	movf	(??_isspace+3)^0,w,c
  2615  00723E  E109               	bnz	u1010
  2616  007240  0E05               	movlw	5
  2617  007242  5C05               	subwf	(??_isspace+2)^0,w,c
  2618  007244  A0D8               	btfss	status,0,c
  2619  007246  EF27  F039         	goto	u1011
  2620  00724A  EF29  F039         	goto	u1010
  2621  00724E                     u1011:
  2622  00724E  EF2B  F039         	goto	l1798
  2623  007252                     u1010:
  2624  007252  0E00               	movlw	0
  2625  007254  6E07               	movwf	_isspace$996^0,c
  2626  007256                     l1798:
  2627  007256  C007  F001         	movff	_isspace$996,?_isspace
  2628  00725A  6A02               	clrf	(?_isspace+1)^0,c
  2629  00725C  0012               	return		;funcret
  2630  00725E                     __end_of_isspace:
  2631                           	opt callstack 0
  2632                           
  2633 ;; *************** function _isdigit *****************
  2634 ;; Defined at:
  2635 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  c               2    0[COMRAM] int 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  2    0[COMRAM] int 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2649 ;;      Params:         2       0       0       0       0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2651 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2652 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2653 ;;Total ram usage:        6 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_vfpfcnvrt
  2659 ;;		_atoi
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text14
  2664  006FBE                     __ptext14:
  2665                           	opt callstack 0
  2666  006FBE                     _isdigit:
  2667                           	opt callstack 27
  2668  006FBE  0ED0               	movlw	208
  2669  006FC0  6E03               	movwf	??_isdigit^0,c
  2670  006FC2  0EFF               	movlw	255
  2671  006FC4  6E04               	movwf	(??_isdigit+1)^0,c
  2672  006FC6  C001  F005         	movff	isdigit@c,??_isdigit+2
  2673  006FCA  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  2674  006FCE  5003               	movf	??_isdigit^0,w,c
  2675  006FD0  2605               	addwf	(??_isdigit+2)^0,f,c
  2676  006FD2  5004               	movf	(??_isdigit+1)^0,w,c
  2677  006FD4  2206               	addwfc	(??_isdigit+3)^0,f,c
  2678  006FD6  5006               	movf	(??_isdigit+3)^0,w,c
  2679  006FD8  E10A               	bnz	u910
  2680  006FDA  0E0A               	movlw	10
  2681  006FDC  5C05               	subwf	(??_isdigit+2)^0,w,c
  2682  006FDE  A0D8               	btfss	status,0,c
  2683  006FE0  EFF4  F037         	goto	u911
  2684  006FE4  EFF7  F037         	goto	u910
  2685  006FE8                     u911:
  2686  006FE8  0E01               	movlw	1
  2687  006FEA  EFF8  F037         	goto	u920
  2688  006FEE                     u910:
  2689  006FEE  0E00               	movlw	0
  2690  006FF0                     u920:
  2691  006FF0  6E01               	movwf	?_isdigit^0,c
  2692  006FF2  6A02               	clrf	(?_isdigit+1)^0,c
  2693  006FF4  0012               	return		;funcret
  2694  006FF6                     __end_of_isdigit:
  2695                           	opt callstack 0
  2696                           
  2697 ;; *************** function ___wmul *****************
  2698 ;; Defined at:
  2699 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  multiplier      2    0[COMRAM] unsigned int 
  2702 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  product         2    4[COMRAM] unsigned int 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  2    0[COMRAM] unsigned int 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0, prodl, prodh
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2714 ;;      Params:         4       0       0       0       0       0       0       0       0
  2715 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2717 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2718 ;;Total ram usage:        6 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_atoi
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text15
  2728  006F36                     __ptext15:
  2729                           	opt callstack 0
  2730  006F36                     ___wmul:
  2731                           	opt callstack 26
  2732  006F36  5001               	movf	___wmul@multiplier^0,w,c
  2733  006F38  0203               	mulwf	___wmul@multiplicand^0,c
  2734  006F3A  CFF3 F005          	movff	prodl,___wmul@product
  2735  006F3E  CFF4 F006          	movff	prodh,___wmul@product+1
  2736  006F42  5001               	movf	___wmul@multiplier^0,w,c
  2737  006F44  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2738  006F46  50F3               	movf	243,w,c
  2739  006F48  2606               	addwf	(___wmul@product+1)^0,f,c
  2740  006F4A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2741  006F4C  0203               	mulwf	___wmul@multiplicand^0,c
  2742  006F4E  50F3               	movf	243,w,c
  2743  006F50  2606               	addwf	(___wmul@product+1)^0,f,c
  2744  006F52  C005  F001         	movff	___wmul@product,?___wmul
  2745  006F56  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2746  006F5A  0012               	return		;funcret
  2747  006F5C                     __end_of___wmul:
  2748                           	opt callstack 0
  2749                           
  2750 ;; *************** function _putsXLCD *****************
  2751 ;; Defined at:
  2752 ;;		line 16 in file "XLCD/putsxlcd.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  2755 ;;		 -> strResultado(5), 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;		None
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2767 ;;      Params:         2       0       0       0       0       0       0       0       0
  2768 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2770 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2771 ;;Total ram usage:        2 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    2
  2774 ;; This function calls:
  2775 ;;		_BusyXLCD
  2776 ;;		_WriteDataXLCD
  2777 ;; This function is called by:
  2778 ;;		_main
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text16
  2783  0070F4                     __ptext16:
  2784                           	opt callstack 0
  2785  0070F4                     _putsXLCD:
  2786                           	opt callstack 28
  2787  0070F4                     
  2788                           ;XLCD/putsxlcd.c: 16: void putsXLCD(char *buffer);XLCD/putsxlcd.c: 17: {;XLCD/putsxlcd.c
      +                          : 18:         while(*buffer)
  2789  0070F4  EF8F  F038         	goto	l2174
  2790  0070F8                     l2168:
  2791  0070F8  ECBE  F038         	call	_BusyXLCD	;wreg free
  2792  0070FC  0900               	iorlw	0
  2793  0070FE  A4D8               	btfss	status,2,c
  2794  007100  EF84  F038         	goto	u1381
  2795  007104  EF86  F038         	goto	u1380
  2796  007108                     u1381:
  2797  007108  EF7C  F038         	goto	l2168
  2798  00710C                     u1380:
  2799  00710C                     
  2800                           ;XLCD/putsxlcd.c: 21:                 WriteDataXLCD(*buffer);
  2801  00710C  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  2802  007110  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  2803  007114  50DF               	movf	indf2,w,c
  2804  007116  EC1A  F038         	call	_WriteDataXLCD
  2805  00711A                     
  2806                           ;XLCD/putsxlcd.c: 22:                 buffer++;
  2807  00711A  4A02               	infsnz	putsXLCD@buffer^0,f,c
  2808  00711C  2A03               	incf	(putsXLCD@buffer+1)^0,f,c
  2809  00711E                     l2174:
  2810                           
  2811                           ;XLCD/putsxlcd.c: 18:         while(*buffer)
  2812  00711E  C002  FFD9         	movff	putsXLCD@buffer,fsr2l
  2813  007122  C003  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  2814  007126  50DF               	movf	indf2,w,c
  2815  007128  A4D8               	btfss	status,2,c
  2816  00712A  EF99  F038         	goto	u1391
  2817  00712E  EF9B  F038         	goto	u1390
  2818  007132                     u1391:
  2819  007132  EF7C  F038         	goto	l2168
  2820  007136                     u1390:
  2821  007136  0012               	return		;funcret
  2822  007138                     __end_of_putsXLCD:
  2823                           	opt callstack 0
  2824                           
  2825 ;; *************** function _initLED *****************
  2826 ;; Defined at:
  2827 ;;		line 29 in file "main.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2841 ;;      Params:         0       0       0       0       0       0       0       0       0
  2842 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2844 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2845 ;;Total ram usage:        0 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_main
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text17
  2855  006ED2                     __ptext17:
  2856                           	opt callstack 0
  2857  006ED2                     _initLED:
  2858                           	opt callstack 30
  2859  006ED2                     
  2860                           ;main.c: 30:     TRISA = 0;
  2861  006ED2  0E00               	movlw	0
  2862  006ED4  6E92               	movwf	146,c	;volatile
  2863                           
  2864                           ;main.c: 31:     TRISB = 0;
  2865  006ED6  0E00               	movlw	0
  2866  006ED8  6E93               	movwf	147,c	;volatile
  2867                           
  2868                           ;main.c: 32:     LATA = 0;
  2869  006EDA  0E00               	movlw	0
  2870  006EDC  6E89               	movwf	137,c	;volatile
  2871                           
  2872                           ;main.c: 33:     LATB = 0;
  2873  006EDE  0E00               	movlw	0
  2874  006EE0  6E8A               	movwf	138,c	;volatile
  2875  006EE2  0012               	return		;funcret
  2876  006EE4                     __end_of_initLED:
  2877                           	opt callstack 0
  2878                           
  2879 ;; *************** function _initLCD *****************
  2880 ;; Defined at:
  2881 ;;		line 41 in file "main.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2895 ;;      Params:         0       0       0       0       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2898 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    3
  2902 ;; This function calls:
  2903 ;;		_OpenXLCD
  2904 ;;		_WriteCmdXLCD
  2905 ;;		_putrsXLCD
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text18
  2912  006F10                     __ptext18:
  2913                           	opt callstack 0
  2914  006F10                     _initLCD:
  2915                           	opt callstack 27
  2916  006F10                     
  2917                           ;main.c: 42:     OpenXLCD(0b00101100 & 0b00111000);
  2918  006F10  0E28               	movlw	40
  2919  006F12  EC68  F03B         	call	_OpenXLCD
  2920                           
  2921                           ;main.c: 43:     WriteCmdXLCD(0b00000110);
  2922  006F16  0E06               	movlw	6
  2923  006F18  ECFB  F037         	call	_WriteCmdXLCD
  2924                           
  2925                           ;main.c: 44:     WriteCmdXLCD(0b00001111);
  2926  006F1C  0E0F               	movlw	15
  2927  006F1E  ECFB  F037         	call	_WriteCmdXLCD
  2928                           
  2929                           ;main.c: 45:     WriteCmdXLCD(0b00001110);
  2930  006F22  0E0E               	movlw	14
  2931  006F24  ECFB  F037         	call	_WriteCmdXLCD
  2932  006F28                     
  2933                           ;main.c: 46:     putrsXLCD("Convertidor AD:");
  2934  006F28  0E05               	movlw	low STR_2
  2935  006F2A  6E02               	movwf	putrsXLCD@buffer^0,c
  2936  006F2C  0E10               	movlw	high STR_2
  2937  006F2E  6E03               	movwf	(putrsXLCD@buffer+1)^0,c
  2938  006F30  ECE1  F038         	call	_putrsXLCD	;wreg free
  2939  006F34  0012               	return		;funcret
  2940  006F36                     __end_of_initLCD:
  2941                           	opt callstack 0
  2942                           
  2943 ;; *************** function _putrsXLCD *****************
  2944 ;; Defined at:
  2945 ;;		line 16 in file "XLCD/putrxlcd.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
  2948 ;;		 -> STR_2(16), 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2960 ;;      Params:         2       0       0       0       0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2963 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2964 ;;Total ram usage:        2 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    2
  2967 ;; This function calls:
  2968 ;;		_BusyXLCD
  2969 ;;		_WriteDataXLCD
  2970 ;; This function is called by:
  2971 ;;		_initLCD
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text19
  2976  0071C2                     __ptext19:
  2977                           	opt callstack 0
  2978  0071C2                     _putrsXLCD:
  2979                           	opt callstack 27
  2980  0071C2                     
  2981                           ;XLCD/putrxlcd.c: 16: void putrsXLCD(const char *buffer);XLCD/putrxlcd.c: 17: {;XLCD/put
      +                          rxlcd.c: 18:         while(*buffer)
  2982  0071C2  EFF7  F038         	goto	l2156
  2983  0071C6                     l2150:
  2984  0071C6  ECBE  F038         	call	_BusyXLCD	;wreg free
  2985  0071CA  0900               	iorlw	0
  2986  0071CC  A4D8               	btfss	status,2,c
  2987  0071CE  EFEB  F038         	goto	u1351
  2988  0071D2  EFED  F038         	goto	u1350
  2989  0071D6                     u1351:
  2990  0071D6  EFE3  F038         	goto	l2150
  2991  0071DA                     u1350:
  2992  0071DA                     
  2993                           ;XLCD/putrxlcd.c: 21:                 WriteDataXLCD(*buffer);
  2994  0071DA  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2995  0071DE  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2996  0071E2                     	if	0	;tblptru may be non-zero
  2997  0071E2                     	endif
  2998  0071E2                     	if	0	;tblptru may be non-zero
  2999  0071E2                     	endif
  3000  0071E2  0008               	tblrd		*
  3001  0071E4  50F5               	movf	tablat,w,c
  3002  0071E6  EC1A  F038         	call	_WriteDataXLCD
  3003  0071EA                     
  3004                           ;XLCD/putrxlcd.c: 22:                 buffer++;
  3005  0071EA  4A02               	infsnz	putrsXLCD@buffer^0,f,c
  3006  0071EC  2A03               	incf	(putrsXLCD@buffer+1)^0,f,c
  3007  0071EE                     l2156:
  3008                           
  3009                           ;XLCD/putrxlcd.c: 18:         while(*buffer)
  3010  0071EE  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  3011  0071F2  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  3012  0071F6                     	if	0	;tblptru may be non-zero
  3013  0071F6                     	endif
  3014  0071F6                     	if	0	;tblptru may be non-zero
  3015  0071F6                     	endif
  3016  0071F6  0008               	tblrd		*
  3017  0071F8  50F5               	movf	tablat,w,c
  3018  0071FA  0900               	iorlw	0
  3019  0071FC  A4D8               	btfss	status,2,c
  3020  0071FE  EF03  F039         	goto	u1361
  3021  007202  EF05  F039         	goto	u1360
  3022  007206                     u1361:
  3023  007206  EFE3  F038         	goto	l2150
  3024  00720A                     u1360:
  3025  00720A  0012               	return		;funcret
  3026  00720C                     __end_of_putrsXLCD:
  3027                           	opt callstack 0
  3028                           
  3029 ;; *************** function _WriteDataXLCD *****************
  3030 ;; Defined at:
  3031 ;;		line 16 in file "XLCD/writdata.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  data            1    wreg     unsigned char 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  data            1    0[COMRAM] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3045 ;;      Params:         0       0       0       0       0       0       0       0       0
  3046 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3048 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3049 ;;Total ram usage:        1 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    1
  3052 ;; This function calls:
  3053 ;;		_DelayFor18TCY
  3054 ;; This function is called by:
  3055 ;;		_putrsXLCD
  3056 ;;		_putsXLCD
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text20
  3061  007034                     __ptext20:
  3062                           	opt callstack 0
  3063  007034                     _WriteDataXLCD:
  3064                           	opt callstack 28
  3065                           
  3066                           ;incstack = 0
  3067                           ;WriteDataXLCD@data stored from wreg
  3068  007034  6E01               	movwf	WriteDataXLCD@data^0,c
  3069  007036                     
  3070                           ;XLCD/writdata.c: 16: void WriteDataXLCD(char data);XLCD/writdata.c: 17: {;XLCD/writdata
      +                          .c: 31:         TRISD &= 0x0f;
  3071  007036  0E0F               	movlw	15
  3072  007038  1695               	andwf	149,f,c	;volatile
  3073                           
  3074                           ;XLCD/writdata.c: 32:         PORTD &= 0x0f;
  3075  00703A  0E0F               	movlw	15
  3076  00703C  1683               	andwf	131,f,c	;volatile
  3077                           
  3078                           ;XLCD/writdata.c: 33:         PORTD |= data&0xf0;
  3079  00703E  5001               	movf	WriteDataXLCD@data^0,w,c
  3080  007040  0BF0               	andlw	240
  3081  007042  1283               	iorwf	131,f,c	;volatile
  3082  007044                     
  3083                           ;XLCD/writdata.c: 39:         LATEbits.LATE0 = 1;
  3084  007044  808D               	bsf	141,0,c	;volatile
  3085  007046                     
  3086                           ;XLCD/writdata.c: 40:         LATEbits.LATE1 = 0;
  3087  007046  928D               	bcf	141,1,c	;volatile
  3088  007048                     
  3089                           ;XLCD/writdata.c: 41:         DelayFor18TCY();
  3090  007048  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3091  00704C                     
  3092                           ;XLCD/writdata.c: 42:         LATEbits.LATE2 = 1;
  3093  00704C  848D               	bsf	141,2,c	;volatile
  3094  00704E                     
  3095                           ;XLCD/writdata.c: 43:         DelayFor18TCY();
  3096  00704E  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3097  007052                     
  3098                           ;XLCD/writdata.c: 44:         LATEbits.LATE2 = 0;
  3099  007052  948D               	bcf	141,2,c	;volatile
  3100                           
  3101                           ;XLCD/writdata.c: 46:         PORTD &= 0x0f;
  3102  007054  0E0F               	movlw	15
  3103  007056  1683               	andwf	131,f,c	;volatile
  3104                           
  3105                           ;XLCD/writdata.c: 47:         PORTD |= ((data<<4)&0xf0);
  3106  007058  3801               	swapf	WriteDataXLCD@data^0,w,c
  3107  00705A  0BF0               	andlw	240
  3108  00705C  0BF0               	andlw	240
  3109  00705E  1283               	iorwf	131,f,c	;volatile
  3110  007060                     
  3111                           ;XLCD/writdata.c: 52:         DelayFor18TCY();
  3112  007060  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3113  007064                     
  3114                           ;XLCD/writdata.c: 53:         LATEbits.LATE2 = 1;
  3115  007064  848D               	bsf	141,2,c	;volatile
  3116  007066                     
  3117                           ;XLCD/writdata.c: 54:         DelayFor18TCY();
  3118  007066  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3119  00706A                     
  3120                           ;XLCD/writdata.c: 55:         LATEbits.LATE2 = 0;
  3121  00706A  948D               	bcf	141,2,c	;volatile
  3122                           
  3123                           ;XLCD/writdata.c: 57:         TRISD |= 0xf0;
  3124  00706C  0EF0               	movlw	240
  3125  00706E  1295               	iorwf	149,f,c	;volatile
  3126  007070  0012               	return		;funcret
  3127  007072                     __end_of_WriteDataXLCD:
  3128                           	opt callstack 0
  3129                           
  3130 ;; *************** function _OpenXLCD *****************
  3131 ;; Defined at:
  3132 ;;		line 19 in file "XLCD/openxlcd.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  lcdtype         1    wreg     unsigned char 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  lcdtype         1    6[COMRAM] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3146 ;;      Params:         0       0       0       0       0       0       0       0       0
  3147 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3148 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3149 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3150 ;;Total ram usage:        2 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    2
  3153 ;; This function calls:
  3154 ;;		_BusyXLCD
  3155 ;;		_DelayPORXLCD
  3156 ;;		_SetDDRamAddr
  3157 ;;		_WriteCmdXLCD
  3158 ;; This function is called by:
  3159 ;;		_initLCD
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text21
  3164  0076D0                     __ptext21:
  3165                           	opt callstack 0
  3166  0076D0                     _OpenXLCD:
  3167                           	opt callstack 27
  3168                           
  3169                           ;incstack = 0
  3170                           ;OpenXLCD@lcdtype stored from wreg
  3171  0076D0  6E07               	movwf	OpenXLCD@lcdtype^0,c
  3172  0076D2                     
  3173                           ;XLCD/openxlcd.c: 19: void OpenXLCD(unsigned char lcdtype);XLCD/openxlcd.c: 20: {;XLCD/o
      +                          penxlcd.c: 28:         PORTD &= 0x0f;
  3174  0076D2  0E0F               	movlw	15
  3175  0076D4  1683               	andwf	131,f,c	;volatile
  3176                           
  3177                           ;XLCD/openxlcd.c: 29:         TRISD &= 0x0F;
  3178  0076D6  0E0F               	movlw	15
  3179  0076D8  1695               	andwf	149,f,c	;volatile
  3180  0076DA                     
  3181                           ;XLCD/openxlcd.c: 35:         TRISEbits.TRISE1 = 0;
  3182  0076DA  9296               	bcf	150,1,c	;volatile
  3183  0076DC                     
  3184                           ;XLCD/openxlcd.c: 36:         TRISEbits.TRISE0 = 0;
  3185  0076DC  9096               	bcf	150,0,c	;volatile
  3186  0076DE                     
  3187                           ;XLCD/openxlcd.c: 37:         TRISEbits.TRISE2 = 0;
  3188  0076DE  9496               	bcf	150,2,c	;volatile
  3189  0076E0                     
  3190                           ;XLCD/openxlcd.c: 38:         LATEbits.LATE1 = 0;
  3191  0076E0  928D               	bcf	141,1,c	;volatile
  3192  0076E2                     
  3193                           ;XLCD/openxlcd.c: 39:         LATEbits.LATE0 = 0;
  3194  0076E2  908D               	bcf	141,0,c	;volatile
  3195  0076E4                     
  3196                           ;XLCD/openxlcd.c: 40:         LATEbits.LATE2 = 0;
  3197  0076E4  948D               	bcf	141,2,c	;volatile
  3198  0076E6                     
  3199                           ;XLCD/openxlcd.c: 43:         DelayPORXLCD();
  3200  0076E6  EC72  F037         	call	_DelayPORXLCD	;wreg free
  3201  0076EA                     
  3202                           ;XLCD/openxlcd.c: 45:    WriteCmdXLCD(0x30);
  3203  0076EA  0E30               	movlw	48
  3204  0076EC  ECFB  F037         	call	_WriteCmdXLCD
  3205  0076F0                     
  3206                           ;XLCD/openxlcd.c: 47:          _delay(50000);
  3207  0076F0  0E41               	movlw	65
  3208  0076F2  6E06               	movwf	??_OpenXLCD^0,c
  3209  0076F4  0EEE               	movlw	238
  3210  0076F6                     u1617:
  3211  0076F6  2EE8               	decfsz	wreg,f,c
  3212  0076F8  D7FE               	bra	u1617
  3213  0076FA  2E06               	decfsz	??_OpenXLCD^0,f,c
  3214  0076FC  D7FC               	bra	u1617
  3215  0076FE  D000               	nop2	
  3216  007700                     
  3217                           ;XLCD/openxlcd.c: 49:    WriteCmdXLCD(0x30);
  3218  007700  0E30               	movlw	48
  3219  007702  ECFB  F037         	call	_WriteCmdXLCD
  3220  007706                     
  3221                           ;XLCD/openxlcd.c: 51:           _delay(10000);
  3222  007706  0E0D               	movlw	13
  3223  007708  6E06               	movwf	??_OpenXLCD^0,c
  3224  00770A  0EFC               	movlw	252
  3225  00770C                     u1627:
  3226  00770C  2EE8               	decfsz	wreg,f,c
  3227  00770E  D7FE               	bra	u1627
  3228  007710  2E06               	decfsz	??_OpenXLCD^0,f,c
  3229  007712  D7FC               	bra	u1627
  3230  007714                     
  3231                           ;XLCD/openxlcd.c: 54:    WriteCmdXLCD(0x32);
  3232  007714  0E32               	movlw	50
  3233  007716  ECFB  F037         	call	_WriteCmdXLCD
  3234  00771A                     l2120:
  3235  00771A  ECBE  F038         	call	_BusyXLCD	;wreg free
  3236  00771E  0900               	iorlw	0
  3237  007720  A4D8               	btfss	status,2,c
  3238  007722  EF95  F03B         	goto	u1281
  3239  007726  EF97  F03B         	goto	u1280
  3240  00772A                     u1281:
  3241  00772A  EF8D  F03B         	goto	l2120
  3242  00772E                     u1280:
  3243  00772E                     l2122:
  3244  00772E  ECBE  F038         	call	_BusyXLCD	;wreg free
  3245  007732  0900               	iorlw	0
  3246  007734  A4D8               	btfss	status,2,c
  3247  007736  EF9F  F03B         	goto	u1291
  3248  00773A  EFA1  F03B         	goto	u1290
  3249  00773E                     u1291:
  3250  00773E  EF97  F03B         	goto	l2122
  3251  007742                     u1290:
  3252  007742                     
  3253                           ;XLCD/openxlcd.c: 61:         WriteCmdXLCD(lcdtype);
  3254  007742  5007               	movf	OpenXLCD@lcdtype^0,w,c
  3255  007744  ECFB  F037         	call	_WriteCmdXLCD
  3256  007748                     l2126:
  3257  007748  ECBE  F038         	call	_BusyXLCD	;wreg free
  3258  00774C  0900               	iorlw	0
  3259  00774E  A4D8               	btfss	status,2,c
  3260  007750  EFAC  F03B         	goto	u1301
  3261  007754  EFAE  F03B         	goto	u1300
  3262  007758                     u1301:
  3263  007758  EFA4  F03B         	goto	l2126
  3264  00775C                     u1300:
  3265  00775C                     
  3266                           ;XLCD/openxlcd.c: 65:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  3267  00775C  0E08               	movlw	8
  3268  00775E  ECFB  F037         	call	_WriteCmdXLCD
  3269  007762                     l2130:
  3270  007762  ECBE  F038         	call	_BusyXLCD	;wreg free
  3271  007766  0900               	iorlw	0
  3272  007768  A4D8               	btfss	status,2,c
  3273  00776A  EFB9  F03B         	goto	u1311
  3274  00776E  EFBB  F03B         	goto	u1310
  3275  007772                     u1311:
  3276  007772  EFB1  F03B         	goto	l2130
  3277  007776                     u1310:
  3278  007776                     
  3279                           ;XLCD/openxlcd.c: 67:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  3280  007776  0E0F               	movlw	15
  3281  007778  ECFB  F037         	call	_WriteCmdXLCD
  3282  00777C                     l2134:
  3283  00777C  ECBE  F038         	call	_BusyXLCD	;wreg free
  3284  007780  0900               	iorlw	0
  3285  007782  A4D8               	btfss	status,2,c
  3286  007784  EFC6  F03B         	goto	u1321
  3287  007788  EFC8  F03B         	goto	u1320
  3288  00778C                     u1321:
  3289  00778C  EFBE  F03B         	goto	l2134
  3290  007790                     u1320:
  3291  007790                     
  3292                           ;XLCD/openxlcd.c: 71:         WriteCmdXLCD(0x01);
  3293  007790  0E01               	movlw	1
  3294  007792  ECFB  F037         	call	_WriteCmdXLCD
  3295  007796                     l2138:
  3296  007796  ECBE  F038         	call	_BusyXLCD	;wreg free
  3297  00779A  0900               	iorlw	0
  3298  00779C  A4D8               	btfss	status,2,c
  3299  00779E  EFD3  F03B         	goto	u1331
  3300  0077A2  EFD5  F03B         	goto	u1330
  3301  0077A6                     u1331:
  3302  0077A6  EFCB  F03B         	goto	l2138
  3303  0077AA                     u1330:
  3304  0077AA                     
  3305                           ;XLCD/openxlcd.c: 75:         WriteCmdXLCD(0b00000100);
  3306  0077AA  0E04               	movlw	4
  3307  0077AC  ECFB  F037         	call	_WriteCmdXLCD
  3308  0077B0                     l2142:
  3309  0077B0  ECBE  F038         	call	_BusyXLCD	;wreg free
  3310  0077B4  0900               	iorlw	0
  3311  0077B6  A4D8               	btfss	status,2,c
  3312  0077B8  EFE0  F03B         	goto	u1341
  3313  0077BC  EFE2  F03B         	goto	u1340
  3314  0077C0                     u1341:
  3315  0077C0  EFD8  F03B         	goto	l2142
  3316  0077C4                     u1340:
  3317  0077C4                     
  3318                           ;XLCD/openxlcd.c: 79:         SetDDRamAddr(0x80);
  3319  0077C4  0E80               	movlw	128
  3320  0077C6  EC39  F038         	call	_SetDDRamAddr
  3321  0077CA  0012               	return		;funcret
  3322  0077CC                     __end_of_OpenXLCD:
  3323                           	opt callstack 0
  3324                           
  3325 ;; *************** function _WriteCmdXLCD *****************
  3326 ;; Defined at:
  3327 ;;		line 13 in file "XLCD/wcmdxlcd.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  cmd             1    wreg     unsigned char 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  cmd             1    0[COMRAM] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3341 ;;      Params:         0       0       0       0       0       0       0       0       0
  3342 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3344 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3345 ;;Total ram usage:        1 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    1
  3348 ;; This function calls:
  3349 ;;		_DelayFor18TCY
  3350 ;; This function is called by:
  3351 ;;		_OpenXLCD
  3352 ;;		_main
  3353 ;;		_initLCD
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text22
  3358  006FF6                     __ptext22:
  3359                           	opt callstack 0
  3360  006FF6                     _WriteCmdXLCD:
  3361                           	opt callstack 28
  3362                           
  3363                           ;incstack = 0
  3364                           ;WriteCmdXLCD@cmd stored from wreg
  3365  006FF6  6E01               	movwf	WriteCmdXLCD@cmd^0,c
  3366  006FF8                     
  3367                           ;XLCD/wcmdxlcd.c: 13: void WriteCmdXLCD(unsigned char cmd);XLCD/wcmdxlcd.c: 14: {;XLCD/w
      +                          cmdxlcd.c: 28:         TRISD &= 0x0f;
  3368  006FF8  0E0F               	movlw	15
  3369  006FFA  1695               	andwf	149,f,c	;volatile
  3370                           
  3371                           ;XLCD/wcmdxlcd.c: 29:         PORTD &= 0x0f;
  3372  006FFC  0E0F               	movlw	15
  3373  006FFE  1683               	andwf	131,f,c	;volatile
  3374                           
  3375                           ;XLCD/wcmdxlcd.c: 30:         PORTD |= cmd&0xf0;
  3376  007000  5001               	movf	WriteCmdXLCD@cmd^0,w,c
  3377  007002  0BF0               	andlw	240
  3378  007004  1283               	iorwf	131,f,c	;volatile
  3379  007006                     
  3380                           ;XLCD/wcmdxlcd.c: 36:         LATEbits.LATE1 = 0;
  3381  007006  928D               	bcf	141,1,c	;volatile
  3382  007008                     
  3383                           ;XLCD/wcmdxlcd.c: 37:         LATEbits.LATE0 = 0;
  3384  007008  908D               	bcf	141,0,c	;volatile
  3385  00700A                     
  3386                           ;XLCD/wcmdxlcd.c: 38:         DelayFor18TCY();
  3387  00700A  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3388  00700E                     
  3389                           ;XLCD/wcmdxlcd.c: 39:         LATEbits.LATE2 = 1;
  3390  00700E  848D               	bsf	141,2,c	;volatile
  3391  007010                     
  3392                           ;XLCD/wcmdxlcd.c: 40:         DelayFor18TCY();
  3393  007010  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3394  007014                     
  3395                           ;XLCD/wcmdxlcd.c: 41:         LATEbits.LATE2 = 0;
  3396  007014  948D               	bcf	141,2,c	;volatile
  3397                           
  3398                           ;XLCD/wcmdxlcd.c: 43:         PORTD &= 0x0f;
  3399  007016  0E0F               	movlw	15
  3400  007018  1683               	andwf	131,f,c	;volatile
  3401                           
  3402                           ;XLCD/wcmdxlcd.c: 44:         PORTD |= (cmd<<4)&0xf0;
  3403  00701A  3801               	swapf	WriteCmdXLCD@cmd^0,w,c
  3404  00701C  0BF0               	andlw	240
  3405  00701E  0BF0               	andlw	240
  3406  007020  1283               	iorwf	131,f,c	;volatile
  3407  007022                     
  3408                           ;XLCD/wcmdxlcd.c: 49:         DelayFor18TCY();
  3409  007022  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3410  007026                     
  3411                           ;XLCD/wcmdxlcd.c: 50:         LATEbits.LATE2 = 1;
  3412  007026  848D               	bsf	141,2,c	;volatile
  3413  007028                     
  3414                           ;XLCD/wcmdxlcd.c: 51:         DelayFor18TCY();
  3415  007028  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3416  00702C                     
  3417                           ;XLCD/wcmdxlcd.c: 52:         LATEbits.LATE2 = 0;
  3418  00702C  948D               	bcf	141,2,c	;volatile
  3419                           
  3420                           ;XLCD/wcmdxlcd.c: 54:         TRISD |= 0xf0;
  3421  00702E  0EF0               	movlw	240
  3422  007030  1295               	iorwf	149,f,c	;volatile
  3423  007032  0012               	return		;funcret
  3424  007034                     __end_of_WriteCmdXLCD:
  3425                           	opt callstack 0
  3426                           
  3427 ;; *************** function _SetDDRamAddr *****************
  3428 ;; Defined at:
  3429 ;;		line 13 in file "XLCD/setddram.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  DDaddr          1    wreg     unsigned char 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  DDaddr          1    0[COMRAM] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3443 ;;      Params:         0       0       0       0       0       0       0       0       0
  3444 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3446 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3447 ;;Total ram usage:        1 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    1
  3450 ;; This function calls:
  3451 ;;		_DelayFor18TCY
  3452 ;; This function is called by:
  3453 ;;		_OpenXLCD
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text23
  3458  007072                     __ptext23:
  3459                           	opt callstack 0
  3460  007072                     _SetDDRamAddr:
  3461                           	opt callstack 27
  3462                           
  3463                           ;incstack = 0
  3464                           ;SetDDRamAddr@DDaddr stored from wreg
  3465  007072  6E01               	movwf	SetDDRamAddr@DDaddr^0,c
  3466  007074                     
  3467                           ;XLCD/setddram.c: 13: void SetDDRamAddr(unsigned char DDaddr);XLCD/setddram.c: 14: {;XLC
      +                          D/setddram.c: 28:         TRISD &= 0x0f;
  3468  007074  0E0F               	movlw	15
  3469  007076  1695               	andwf	149,f,c	;volatile
  3470                           
  3471                           ;XLCD/setddram.c: 29:         PORTD &= 0x0f;
  3472  007078  0E0F               	movlw	15
  3473  00707A  1683               	andwf	131,f,c	;volatile
  3474                           
  3475                           ;XLCD/setddram.c: 30:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  3476  00707C  5001               	movf	SetDDRamAddr@DDaddr^0,w,c
  3477  00707E  0980               	iorlw	128
  3478  007080  0BF0               	andlw	240
  3479  007082  1283               	iorwf	131,f,c	;volatile
  3480  007084                     
  3481                           ;XLCD/setddram.c: 36:         LATEbits.LATE1 = 0;
  3482  007084  928D               	bcf	141,1,c	;volatile
  3483  007086                     
  3484                           ;XLCD/setddram.c: 37:         LATEbits.LATE0 = 0;
  3485  007086  908D               	bcf	141,0,c	;volatile
  3486  007088                     
  3487                           ;XLCD/setddram.c: 38:         DelayFor18TCY();
  3488  007088  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3489  00708C                     
  3490                           ;XLCD/setddram.c: 39:         LATEbits.LATE2 = 1;
  3491  00708C  848D               	bsf	141,2,c	;volatile
  3492  00708E                     
  3493                           ;XLCD/setddram.c: 40:         DelayFor18TCY();
  3494  00708E  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3495  007092                     
  3496                           ;XLCD/setddram.c: 41:         LATEbits.LATE2 = 0;
  3497  007092  948D               	bcf	141,2,c	;volatile
  3498                           
  3499                           ;XLCD/setddram.c: 43:         PORTD &= 0x0f;
  3500  007094  0E0F               	movlw	15
  3501  007096  1683               	andwf	131,f,c	;volatile
  3502                           
  3503                           ;XLCD/setddram.c: 44:         PORTD |= ((DDaddr<<4)&0xf0);
  3504  007098  3801               	swapf	SetDDRamAddr@DDaddr^0,w,c
  3505  00709A  0BF0               	andlw	240
  3506  00709C  0BF0               	andlw	240
  3507  00709E  1283               	iorwf	131,f,c	;volatile
  3508  0070A0                     
  3509                           ;XLCD/setddram.c: 49:         DelayFor18TCY();
  3510  0070A0  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3511  0070A4                     
  3512                           ;XLCD/setddram.c: 50:         LATEbits.LATE2 = 1;
  3513  0070A4  848D               	bsf	141,2,c	;volatile
  3514  0070A6                     
  3515                           ;XLCD/setddram.c: 51:         DelayFor18TCY();
  3516  0070A6  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3517  0070AA                     
  3518                           ;XLCD/setddram.c: 52:         LATEbits.LATE2 = 0;
  3519  0070AA  948D               	bcf	141,2,c	;volatile
  3520                           
  3521                           ;XLCD/setddram.c: 54:         TRISD |= 0xf0;
  3522  0070AC  0EF0               	movlw	240
  3523  0070AE  1295               	iorwf	149,f,c	;volatile
  3524  0070B0  0012               	return		;funcret
  3525  0070B2                     __end_of_SetDDRamAddr:
  3526                           	opt callstack 0
  3527                           
  3528 ;; *************** function _DelayPORXLCD *****************
  3529 ;; Defined at:
  3530 ;;		line 73 in file "main.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    1
  3551 ;; This function calls:
  3552 ;;		_delay_ms
  3553 ;; This function is called by:
  3554 ;;		_OpenXLCD
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text24
  3559  006EE4                     __ptext24:
  3560                           	opt callstack 0
  3561  006EE4                     _DelayPORXLCD:
  3562                           	opt callstack 27
  3563  006EE4                     
  3564                           ;main.c: 74:     delay_ms(15);
  3565  006EE4  0E0F               	movlw	15
  3566  006EE6  6E01               	movwf	delay_ms@n^0,c
  3567  006EE8  0E00               	movlw	0
  3568  006EEA  6E02               	movwf	(delay_ms@n+1)^0,c
  3569  006EEC  0E00               	movlw	0
  3570  006EEE  6E03               	movwf	(delay_ms@n+2)^0,c
  3571  006EF0  0E00               	movlw	0
  3572  006EF2  6E04               	movwf	(delay_ms@n+3)^0,c
  3573  006EF4  EC59  F038         	call	_delay_ms	;wreg free
  3574  006EF8  0012               	return		;funcret
  3575  006EFA                     __end_of_DelayPORXLCD:
  3576                           	opt callstack 0
  3577                           
  3578 ;; *************** function _delay_ms *****************
  3579 ;; Defined at:
  3580 ;;		line 157 in file "../AlteriADC.X/Alteri.h"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  n               4    0[COMRAM] long 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3594 ;;      Params:         4       0       0       0       0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3596 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3597 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3598 ;;Total ram usage:        5 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_main
  3604 ;;		_DelayPORXLCD
  3605 ;;		_DelayXLCD
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text25
  3610  0070B2                     __ptext25:
  3611                           	opt callstack 0
  3612  0070B2                     _delay_ms:
  3613                           	opt callstack 27
  3614  0070B2                     
  3615                           ;../AlteriADC.X/Alteri.h: 157:  extern void delay_ms(long int n);../AlteriADC.X/Alteri.h
      +                          : 158:     {;../AlteriADC.X/Alteri.h: 159:         while(n-- !=0){
  3616  0070B2  EF63  F038         	goto	l1808
  3617  0070B6                     l1806:
  3618                           
  3619                           ;../AlteriADC.X/Alteri.h: 160:             _delay((unsigned long)((1)*(48000000/4000.0))
      +                          );
  3620  0070B6  0E10               	movlw	16
  3621  0070B8  6E05               	movwf	??_delay_ms^0,c
  3622  0070BA  0E94               	movlw	148
  3623  0070BC                     u1637:
  3624  0070BC  2EE8               	decfsz	wreg,f,c
  3625  0070BE  D7FE               	bra	u1637
  3626  0070C0  2E05               	decfsz	??_delay_ms^0,f,c
  3627  0070C2  D7FC               	bra	u1637
  3628  0070C4  D000               	nop2	
  3629  0070C6                     l1808:
  3630                           
  3631                           ;../AlteriADC.X/Alteri.h: 159:         while(n-- !=0){
  3632  0070C6  0EFF               	movlw	255
  3633  0070C8  2601               	addwf	delay_ms@n^0,f,c
  3634  0070CA  0EFF               	movlw	255
  3635  0070CC  2202               	addwfc	(delay_ms@n+1)^0,f,c
  3636  0070CE  0EFF               	movlw	255
  3637  0070D0  2203               	addwfc	(delay_ms@n+2)^0,f,c
  3638  0070D2  0EFF               	movlw	255
  3639  0070D4  2204               	addwfc	(delay_ms@n+3)^0,f,c
  3640  0070D6  2801               	incf	delay_ms@n^0,w,c
  3641  0070D8  E10A               	bnz	u1021
  3642  0070DA  2802               	incf	(delay_ms@n+1)^0,w,c
  3643  0070DC  E108               	bnz	u1021
  3644  0070DE  2803               	incf	(delay_ms@n+2)^0,w,c
  3645  0070E0  E106               	bnz	u1021
  3646  0070E2  2804               	incf	(delay_ms@n+3)^0,w,c
  3647  0070E4  A4D8               	btfss	status,2,c
  3648  0070E6  EF77  F038         	goto	u1021
  3649  0070EA  EF79  F038         	goto	u1020
  3650  0070EE                     u1021:
  3651  0070EE  EF5B  F038         	goto	l1806
  3652  0070F2                     u1020:
  3653  0070F2  0012               	return		;funcret
  3654  0070F4                     __end_of_delay_ms:
  3655                           	opt callstack 0
  3656                           
  3657 ;; *************** function _BusyXLCD *****************
  3658 ;; Defined at:
  3659 ;;		line 11 in file "XLCD/busyxlcd.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      unsigned char 
  3666 ;; Registers used:
  3667 ;;		wreg, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3673 ;;      Params:         0       0       0       0       0       0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3676 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3677 ;;Total ram usage:        0 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    1
  3680 ;; This function calls:
  3681 ;;		_DelayFor18TCY
  3682 ;; This function is called by:
  3683 ;;		_OpenXLCD
  3684 ;;		_putrsXLCD
  3685 ;;		_putsXLCD
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text26
  3690  00717C                     __ptext26:
  3691                           	opt callstack 0
  3692  00717C                     _BusyXLCD:
  3693                           	opt callstack 28
  3694  00717C                     
  3695                           ;XLCD/busyxlcd.c: 13:         LATEbits.LATE1 = 1;
  3696  00717C  828D               	bsf	141,1,c	;volatile
  3697                           
  3698                           ;XLCD/busyxlcd.c: 14:         LATEbits.LATE0 = 0;
  3699  00717E  908D               	bcf	141,0,c	;volatile
  3700  007180                     
  3701                           ;XLCD/busyxlcd.c: 15:         DelayFor18TCY();
  3702  007180  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3703  007184                     
  3704                           ;XLCD/busyxlcd.c: 16:         LATEbits.LATE2 = 1;
  3705  007184  848D               	bsf	141,2,c	;volatile
  3706                           
  3707                           ;XLCD/busyxlcd.c: 17:         DelayFor18TCY();
  3708  007186  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3709  00718A                     
  3710                           ;XLCD/busyxlcd.c: 33:         if(PORTD&0x80)
  3711  00718A  AE83               	btfss	131,7,c	;volatile
  3712  00718C  EFCA  F038         	goto	u1171
  3713  007190  EFCC  F038         	goto	u1170
  3714  007194                     u1171:
  3715  007194  EFD7  F038         	goto	l9
  3716  007198                     u1170:
  3717  007198                     
  3718                           ;XLCD/busyxlcd.c: 37:         {;XLCD/busyxlcd.c: 38:                 LATEbits.LATE2 = 0;
  3719  007198  948D               	bcf	141,2,c	;volatile
  3720  00719A                     
  3721                           ;XLCD/busyxlcd.c: 39:                 DelayFor18TCY();
  3722  00719A  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3723  00719E                     
  3724                           ;XLCD/busyxlcd.c: 40:                 LATEbits.LATE2 = 1;
  3725  00719E  848D               	bsf	141,2,c	;volatile
  3726                           
  3727                           ;XLCD/busyxlcd.c: 41:                 DelayFor18TCY();
  3728  0071A0  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3729  0071A4                     
  3730                           ;XLCD/busyxlcd.c: 42:                 LATEbits.LATE2 = 0;
  3731  0071A4  948D               	bcf	141,2,c	;volatile
  3732  0071A6                     
  3733                           ;XLCD/busyxlcd.c: 43:                 LATEbits.LATE1 = 0;
  3734  0071A6  928D               	bcf	141,1,c	;volatile
  3735  0071A8                     
  3736                           ;XLCD/busyxlcd.c: 44:                 return 1;
  3737  0071A8  0E01               	movlw	1
  3738  0071AA  EFE0  F038         	goto	l10
  3739  0071AE                     l9:
  3740                           
  3741                           ;XLCD/busyxlcd.c: 47:         {;XLCD/busyxlcd.c: 48:                 LATEbits.LATE2 = 0;
  3742  0071AE  948D               	bcf	141,2,c	;volatile
  3743  0071B0                     
  3744                           ;XLCD/busyxlcd.c: 49:                 DelayFor18TCY();
  3745  0071B0  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3746  0071B4                     
  3747                           ;XLCD/busyxlcd.c: 50:                 LATEbits.LATE2 = 1;
  3748  0071B4  848D               	bsf	141,2,c	;volatile
  3749                           
  3750                           ;XLCD/busyxlcd.c: 51:                 DelayFor18TCY();
  3751  0071B6  EC5E  F037         	call	_DelayFor18TCY	;wreg free
  3752  0071BA                     
  3753                           ;XLCD/busyxlcd.c: 52:                 LATEbits.LATE2 = 0;
  3754  0071BA  948D               	bcf	141,2,c	;volatile
  3755  0071BC                     
  3756                           ;XLCD/busyxlcd.c: 53:                 LATEbits.LATE1 = 0;
  3757  0071BC  928D               	bcf	141,1,c	;volatile
  3758  0071BE                     
  3759                           ;XLCD/busyxlcd.c: 54:                 return 0;
  3760  0071BE  0E00               	movlw	0
  3761  0071C0                     l10:
  3762  0071C0  0012               	return		;funcret
  3763  0071C2                     __end_of_BusyXLCD:
  3764                           	opt callstack 0
  3765                           
  3766 ;; *************** function _DelayFor18TCY *****************
  3767 ;; Defined at:
  3768 ;;		line 70 in file "main.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0
  3783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3785 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3786 ;;Total ram usage:        0 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		_BusyXLCD
  3792 ;;		_SetDDRamAddr
  3793 ;;		_WriteCmdXLCD
  3794 ;;		_WriteDataXLCD
  3795 ;;		_ReadAddrXLCD
  3796 ;;		_ReadDataXLCD
  3797 ;;		_SetCGRamAddr
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text27
  3802  006EBC                     __ptext27:
  3803                           	opt callstack 0
  3804  006EBC                     _DelayFor18TCY:
  3805                           	opt callstack 28
  3806  006EBC                     
  3807                           ;main.c: 71:   _delay(240);
  3808  006EBC  0E50               	movlw	80
  3809  006EBE                     u1647:
  3810  006EBE  2EE8               	decfsz	wreg,f,c
  3811  006EC0  D7FE               	bra	u1647
  3812  006EC2  0012               	return		;funcret
  3813  006EC4                     __end_of_DelayFor18TCY:
  3814                           	opt callstack 0
  3815                           
  3816 ;; *************** function _initADC *****************
  3817 ;; Defined at:
  3818 ;;		line 35 in file "main.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;		None
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3832 ;;      Params:         0       0       0       0       0       0       0       0       0
  3833 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3835 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3836 ;;Total ram usage:        0 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; This function calls:
  3839 ;;		Nothing
  3840 ;; This function is called by:
  3841 ;;		_main
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text28
  3846  006EC4                     __ptext28:
  3847                           	opt callstack 0
  3848  006EC4                     _initADC:
  3849                           	opt callstack 30
  3850  006EC4                     
  3851                           ;main.c: 36:     ADCON0 = 0b00000001;
  3852  006EC4  0E01               	movlw	1
  3853  006EC6  6EC2               	movwf	194,c	;volatile
  3854                           
  3855                           ;main.c: 38:     ADCON1 = 0b00001110;
  3856  006EC8  0E0E               	movlw	14
  3857  006ECA  6EC1               	movwf	193,c	;volatile
  3858                           
  3859                           ;main.c: 39:     ADCON2 = 0b10111100;
  3860  006ECC  0EBC               	movlw	188
  3861  006ECE  6EC0               	movwf	192,c	;volatile
  3862  006ED0  0012               	return		;funcret
  3863  006ED2                     __end_of_initADC:
  3864                           	opt callstack 0
  3865                           
  3866 ;; *************** function _conversionADC *****************
  3867 ;; Defined at:
  3868 ;;		line 48 in file "main.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  resultado       2    4[COMRAM] unsigned int 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  2    0[COMRAM] unsigned short 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3882 ;;      Params:         2       0       0       0       0       0       0       0       0
  3883 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3884 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3885 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3886 ;;Total ram usage:        6 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_main
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text29
  3896  006F5C                     __ptext29:
  3897                           	opt callstack 0
  3898  006F5C                     _conversionADC:
  3899                           	opt callstack 30
  3900  006F5C                     
  3901                           ;main.c: 49:     unsigned int resultado;;main.c: 50:     ADCON0bits.GO_DONE = 1;
  3902  006F5C  82C2               	bsf	194,1,c	;volatile
  3903  006F5E                     l215:
  3904  006F5E  B2C2               	btfsc	194,1,c	;volatile
  3905  006F60  EFB4  F037         	goto	u1401
  3906  006F64  EFB6  F037         	goto	u1400
  3907  006F68                     u1401:
  3908  006F68  EFAF  F037         	goto	l215
  3909  006F6C                     u1400:
  3910  006F6C                     
  3911                           ;main.c: 52:     resultado = (ADRESH<<8) + ADRESL;
  3912  006F6C  50C4               	movf	196,w,c	;volatile
  3913  006F6E  6E04               	movwf	(??_conversionADC+1)^0,c
  3914  006F70  6A03               	clrf	??_conversionADC^0,c
  3915  006F72  50C3               	movf	195,w,c	;volatile
  3916  006F74  2403               	addwf	??_conversionADC^0,w,c
  3917  006F76  6E05               	movwf	conversionADC@resultado^0,c
  3918  006F78  0E00               	movlw	0
  3919  006F7A  2004               	addwfc	(??_conversionADC+1)^0,w,c
  3920  006F7C  6E06               	movwf	(conversionADC@resultado+1)^0,c
  3921  006F7E                     
  3922                           ;main.c: 53:     return resultado;
  3923  006F7E  C005  F001         	movff	conversionADC@resultado,?_conversionADC
  3924  006F82  C006  F002         	movff	conversionADC@resultado+1,?_conversionADC+1
  3925  006F86  0012               	return		;funcret
  3926  006F88                     __end_of_conversionADC:
  3927                           	opt callstack 0
  3928                           
  3929 ;; *************** function _ChecarLEDs *****************
  3930 ;; Defined at:
  3931 ;;		line 56 in file "main.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  res             2    0[COMRAM] unsigned short 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3945 ;;      Params:         2       0       0       0       0       0       0       0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3947 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3948 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3949 ;;Total ram usage:        3 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text30
  3959  0077CC                     __ptext30:
  3960                           	opt callstack 0
  3961  0077CC                     _ChecarLEDs:
  3962                           	opt callstack 30
  3963  0077CC                     
  3964                           ;main.c: 58:     LATAbits.LA1 = (res&(1<<9)) == 0 ? 0 : 1;
  3965  0077CC  B202               	btfsc	(ChecarLEDs@res+1)^0,1,c
  3966  0077CE  EFEB  F03B         	goto	u1411
  3967  0077D2  EFEF  F03B         	goto	u1410
  3968  0077D6                     u1411:
  3969  0077D6  6A03               	clrf	??_ChecarLEDs^0,c
  3970  0077D8  2A03               	incf	??_ChecarLEDs^0,f,c
  3971  0077DA  EFF0  F03B         	goto	u1428
  3972  0077DE                     u1410:
  3973  0077DE  6A03               	clrf	??_ChecarLEDs^0,c
  3974  0077E0                     u1428:
  3975  0077E0  4603               	rlncf	??_ChecarLEDs^0,f,c
  3976  0077E2  5089               	movf	137,w,c	;volatile
  3977  0077E4  1803               	xorwf	??_ChecarLEDs^0,w,c
  3978  0077E6  0BFD               	andlw	-3
  3979  0077E8  1803               	xorwf	??_ChecarLEDs^0,w,c
  3980  0077EA  6E89               	movwf	137,c	;volatile
  3981                           
  3982                           ;main.c: 59:     LATAbits.LA2 = (res&(1<<8)) == 0 ? 0 : 1;
  3983  0077EC  B002               	btfsc	(ChecarLEDs@res+1)^0,0,c
  3984  0077EE  EFFB  F03B         	goto	u1431
  3985  0077F2  EFFF  F03B         	goto	u1430
  3986  0077F6                     u1431:
  3987  0077F6  6A03               	clrf	??_ChecarLEDs^0,c
  3988  0077F8  2A03               	incf	??_ChecarLEDs^0,f,c
  3989  0077FA  EF00  F03C         	goto	u1448
  3990  0077FE                     u1430:
  3991  0077FE  6A03               	clrf	??_ChecarLEDs^0,c
  3992  007800                     u1448:
  3993  007800  4603               	rlncf	??_ChecarLEDs^0,f,c
  3994  007802  4603               	rlncf	??_ChecarLEDs^0,f,c
  3995  007804  5089               	movf	137,w,c	;volatile
  3996  007806  1803               	xorwf	??_ChecarLEDs^0,w,c
  3997  007808  0BFB               	andlw	-5
  3998  00780A  1803               	xorwf	??_ChecarLEDs^0,w,c
  3999  00780C  6E89               	movwf	137,c	;volatile
  4000                           
  4001                           ;main.c: 60:     LATAbits.LA3 = (res&(1<<7)) == 0 ? 0 : 1;
  4002  00780E  BE01               	btfsc	ChecarLEDs@res^0,7,c
  4003  007810  EF0C  F03C         	goto	u1451
  4004  007814  EF10  F03C         	goto	u1450
  4005  007818                     u1451:
  4006  007818  6A03               	clrf	??_ChecarLEDs^0,c
  4007  00781A  2A03               	incf	??_ChecarLEDs^0,f,c
  4008  00781C  EF11  F03C         	goto	u1468
  4009  007820                     u1450:
  4010  007820  6A03               	clrf	??_ChecarLEDs^0,c
  4011  007822                     u1468:
  4012  007822  4603               	rlncf	??_ChecarLEDs^0,f,c
  4013  007824  4603               	rlncf	??_ChecarLEDs^0,f,c
  4014  007826  4603               	rlncf	??_ChecarLEDs^0,f,c
  4015  007828  5089               	movf	137,w,c	;volatile
  4016  00782A  1803               	xorwf	??_ChecarLEDs^0,w,c
  4017  00782C  0BF7               	andlw	-9
  4018  00782E  1803               	xorwf	??_ChecarLEDs^0,w,c
  4019  007830  6E89               	movwf	137,c	;volatile
  4020                           
  4021                           ;main.c: 61:     LATAbits.LA4 = (res&(1<<6)) == 0 ? 0 : 1;
  4022  007832  BC01               	btfsc	ChecarLEDs@res^0,6,c
  4023  007834  EF1E  F03C         	goto	u1471
  4024  007838  EF22  F03C         	goto	u1470
  4025  00783C                     u1471:
  4026  00783C  6A03               	clrf	??_ChecarLEDs^0,c
  4027  00783E  2A03               	incf	??_ChecarLEDs^0,f,c
  4028  007840  EF23  F03C         	goto	u1488
  4029  007844                     u1470:
  4030  007844  6A03               	clrf	??_ChecarLEDs^0,c
  4031  007846                     u1488:
  4032  007846  3A03               	swapf	??_ChecarLEDs^0,f,c
  4033  007848  5089               	movf	137,w,c	;volatile
  4034  00784A  1803               	xorwf	??_ChecarLEDs^0,w,c
  4035  00784C  0BEF               	andlw	-17
  4036  00784E  1803               	xorwf	??_ChecarLEDs^0,w,c
  4037  007850  6E89               	movwf	137,c	;volatile
  4038                           
  4039                           ;main.c: 62:     LATAbits.LA5 = (res&(1<<5)) == 0 ? 0 : 1;
  4040  007852  BA01               	btfsc	ChecarLEDs@res^0,5,c
  4041  007854  EF2E  F03C         	goto	u1491
  4042  007858  EF32  F03C         	goto	u1490
  4043  00785C                     u1491:
  4044  00785C  6A03               	clrf	??_ChecarLEDs^0,c
  4045  00785E  2A03               	incf	??_ChecarLEDs^0,f,c
  4046  007860  EF33  F03C         	goto	u1508
  4047  007864                     u1490:
  4048  007864  6A03               	clrf	??_ChecarLEDs^0,c
  4049  007866                     u1508:
  4050  007866  3A03               	swapf	??_ChecarLEDs^0,f,c
  4051  007868  4603               	rlncf	??_ChecarLEDs^0,f,c
  4052  00786A  5089               	movf	137,w,c	;volatile
  4053  00786C  1803               	xorwf	??_ChecarLEDs^0,w,c
  4054  00786E  0BDF               	andlw	-33
  4055  007870  1803               	xorwf	??_ChecarLEDs^0,w,c
  4056  007872  6E89               	movwf	137,c	;volatile
  4057                           
  4058                           ;main.c: 63:     LATBbits.LB0 = (res&(1<<4)) == 0 ? 0 : 1;
  4059  007874  B801               	btfsc	ChecarLEDs@res^0,4,c
  4060  007876  EF3F  F03C         	goto	u1511
  4061  00787A  EF43  F03C         	goto	u1510
  4062  00787E                     u1511:
  4063  00787E  6A03               	clrf	??_ChecarLEDs^0,c
  4064  007880  2A03               	incf	??_ChecarLEDs^0,f,c
  4065  007882  EF44  F03C         	goto	u1528
  4066  007886                     u1510:
  4067  007886  6A03               	clrf	??_ChecarLEDs^0,c
  4068  007888                     u1528:
  4069  007888  508A               	movf	138,w,c	;volatile
  4070  00788A  1803               	xorwf	??_ChecarLEDs^0,w,c
  4071  00788C  0BFE               	andlw	-2
  4072  00788E  1803               	xorwf	??_ChecarLEDs^0,w,c
  4073  007890  6E8A               	movwf	138,c	;volatile
  4074                           
  4075                           ;main.c: 64:     LATBbits.LB1 = (res&(1<<3)) == 0 ? 0 : 1;
  4076  007892  B601               	btfsc	ChecarLEDs@res^0,3,c
  4077  007894  EF4E  F03C         	goto	u1531
  4078  007898  EF52  F03C         	goto	u1530
  4079  00789C                     u1531:
  4080  00789C  6A03               	clrf	??_ChecarLEDs^0,c
  4081  00789E  2A03               	incf	??_ChecarLEDs^0,f,c
  4082  0078A0  EF53  F03C         	goto	u1548
  4083  0078A4                     u1530:
  4084  0078A4  6A03               	clrf	??_ChecarLEDs^0,c
  4085  0078A6                     u1548:
  4086  0078A6  4603               	rlncf	??_ChecarLEDs^0,f,c
  4087  0078A8  508A               	movf	138,w,c	;volatile
  4088  0078AA  1803               	xorwf	??_ChecarLEDs^0,w,c
  4089  0078AC  0BFD               	andlw	-3
  4090  0078AE  1803               	xorwf	??_ChecarLEDs^0,w,c
  4091  0078B0  6E8A               	movwf	138,c	;volatile
  4092                           
  4093                           ;main.c: 65:     LATBbits.LB2 = (res&(1<<2)) == 0 ? 0 : 1;
  4094  0078B2  B401               	btfsc	ChecarLEDs@res^0,2,c
  4095  0078B4  EF5E  F03C         	goto	u1551
  4096  0078B8  EF62  F03C         	goto	u1550
  4097  0078BC                     u1551:
  4098  0078BC  6A03               	clrf	??_ChecarLEDs^0,c
  4099  0078BE  2A03               	incf	??_ChecarLEDs^0,f,c
  4100  0078C0  EF63  F03C         	goto	u1568
  4101  0078C4                     u1550:
  4102  0078C4  6A03               	clrf	??_ChecarLEDs^0,c
  4103  0078C6                     u1568:
  4104  0078C6  4603               	rlncf	??_ChecarLEDs^0,f,c
  4105  0078C8  4603               	rlncf	??_ChecarLEDs^0,f,c
  4106  0078CA  508A               	movf	138,w,c	;volatile
  4107  0078CC  1803               	xorwf	??_ChecarLEDs^0,w,c
  4108  0078CE  0BFB               	andlw	-5
  4109  0078D0  1803               	xorwf	??_ChecarLEDs^0,w,c
  4110  0078D2  6E8A               	movwf	138,c	;volatile
  4111                           
  4112                           ;main.c: 66:     LATBbits.LB3 = (res&(1<<1)) == 0 ? 0 : 1;
  4113  0078D4  B201               	btfsc	ChecarLEDs@res^0,1,c
  4114  0078D6  EF6F  F03C         	goto	u1571
  4115  0078DA  EF73  F03C         	goto	u1570
  4116  0078DE                     u1571:
  4117  0078DE  6A03               	clrf	??_ChecarLEDs^0,c
  4118  0078E0  2A03               	incf	??_ChecarLEDs^0,f,c
  4119  0078E2  EF74  F03C         	goto	u1588
  4120  0078E6                     u1570:
  4121  0078E6  6A03               	clrf	??_ChecarLEDs^0,c
  4122  0078E8                     u1588:
  4123  0078E8  4603               	rlncf	??_ChecarLEDs^0,f,c
  4124  0078EA  4603               	rlncf	??_ChecarLEDs^0,f,c
  4125  0078EC  4603               	rlncf	??_ChecarLEDs^0,f,c
  4126  0078EE  508A               	movf	138,w,c	;volatile
  4127  0078F0  1803               	xorwf	??_ChecarLEDs^0,w,c
  4128  0078F2  0BF7               	andlw	-9
  4129  0078F4  1803               	xorwf	??_ChecarLEDs^0,w,c
  4130  0078F6  6E8A               	movwf	138,c	;volatile
  4131                           
  4132                           ;main.c: 67:     LATBbits.LB4 = (res&(1<<0)) == 0 ? 0 : 1;
  4133  0078F8  B001               	btfsc	ChecarLEDs@res^0,0,c
  4134  0078FA  EF81  F03C         	goto	u1591
  4135  0078FE  EF85  F03C         	goto	u1590
  4136  007902                     u1591:
  4137  007902  6A03               	clrf	??_ChecarLEDs^0,c
  4138  007904  2A03               	incf	??_ChecarLEDs^0,f,c
  4139  007906  EF86  F03C         	goto	u1608
  4140  00790A                     u1590:
  4141  00790A  6A03               	clrf	??_ChecarLEDs^0,c
  4142  00790C                     u1608:
  4143  00790C  3A03               	swapf	??_ChecarLEDs^0,f,c
  4144  00790E  508A               	movf	138,w,c	;volatile
  4145  007910  1803               	xorwf	??_ChecarLEDs^0,w,c
  4146  007912  0BEF               	andlw	-17
  4147  007914  1803               	xorwf	??_ChecarLEDs^0,w,c
  4148  007916  6E8A               	movwf	138,c	;volatile
  4149  007918  0012               	return		;funcret
  4150  00791A                     __end_of_ChecarLEDs:
  4151                           	opt callstack 0
  4152                           
  4153                           	psect	rparam
  4154  0000                     tosu	equ	0xFFF
  4155                           tosh	equ	0xFFE
  4156                           tosl	equ	0xFFD
  4157                           stkptr	equ	0xFFC
  4158                           pclatu	equ	0xFFB
  4159                           pclath	equ	0xFFA
  4160                           pcl	equ	0xFF9
  4161                           tblptru	equ	0xFF8
  4162                           tblptrh	equ	0xFF7
  4163                           tblptrl	equ	0xFF6
  4164                           tablat	equ	0xFF5
  4165                           prodh	equ	0xFF4
  4166                           prodl	equ	0xFF3
  4167                           indf0	equ	0xFEF
  4168                           postinc0	equ	0xFEE
  4169                           postdec0	equ	0xFED
  4170                           preinc0	equ	0xFEC
  4171                           plusw0	equ	0xFEB
  4172                           fsr0h	equ	0xFEA
  4173                           fsr0l	equ	0xFE9
  4174                           wreg	equ	0xFE8
  4175                           indf1	equ	0xFE7
  4176                           postinc1	equ	0xFE6
  4177                           postdec1	equ	0xFE5
  4178                           preinc1	equ	0xFE4
  4179                           plusw1	equ	0xFE3
  4180                           fsr1h	equ	0xFE2
  4181                           fsr1l	equ	0xFE1
  4182                           bsr	equ	0xFE0
  4183                           indf2	equ	0xFDF
  4184                           postinc2	equ	0xFDE
  4185                           postdec2	equ	0xFDD
  4186                           preinc2	equ	0xFDC
  4187                           plusw2	equ	0xFDB
  4188                           fsr2h	equ	0xFDA
  4189                           fsr2l	equ	0xFD9
  4190                           status	equ	0xFD8


Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     12      57
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1000_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> strResultado(BANK0[5]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _putsXLCD->_WriteDataXLCD
    _initLCD->_OpenXLCD
    _putrsXLCD->_WriteDataXLCD
    _DelayPORXLCD->_delay_ms

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9016
                                             10 BANK0      2     2      0
                         _ChecarLEDs
                       _WriteCmdXLCD
                      _conversionADC
                           _delay_ms
                            _initADC
                            _initLCD
                            _initLED
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7624
                                             89 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7271
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    6899
                                             59 COMRAM    22    16      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3759
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1198
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     165
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     569
                           _OpenXLCD
                       _WriteCmdXLCD
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     165
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             2     2      0     360
                                              5 COMRAM     2     2      0
                           _BusyXLCD
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0     250
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             5     1      4     250
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conversionADC                                        6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ChecarLEDs                                           3     1      2     296
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ChecarLEDs
   _WriteCmdXLCD
     _DelayFor18TCY
   _conversionADC
   _delay_ms
   _initADC
   _initLCD
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
         _delay_ms
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
   _initLED
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C      39       5       35.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      98      20        0.0%
DATA                 0      0      98       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu May 07 14:00:51 2020

                      l9 71AE                       l10 71C0                       l53 77CA  
                     l66 720A                       l79 7136              __CFG_BOR$ON 000000  
    ___wmul@multiplicand 0003              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000                      l130 7032                      l212 6F34  
                    l221 7918                      l141 7070                      l206 6EE2  
                    l215 6F5E                      l119 70B0                      l224 6EC2  
                    l312 7308                      l209 6ED0                      l313 7310  
                    l218 6F86                      l306 7FFE                      l227 6EF8  
                    l316 6F5A                      l262 7408                      l271 7AEA  
                    l264 7444                      l193 70F2                      l259 73C6  
                    l269 7AE2                      l293 7DA8                      l279 7CAA  
                    l761 76CE                      l754 76AE                      l771 75DE  
                    l764 75BE             __CFG_CPB$OFF 000000                      u810 7458  
                    u811 7454                      u820 746A                      u900 7418  
                    u821 7466                      u901 7414                      u910 6FEE  
                    u830 7492                      u911 6FE8                      u831 748E  
                    u920 6FF0                      u840 74C8                      u841 74C4  
                    u850 717A                      u931 75E6                      u851 7176  
                    u940 760A                      u860 6FB0                      u941 7606  
                    u861 6FAC                      u950 7634                      u870 7390  
                    u951 7630                      u871 738C                      u960 7674  
                    u880 73B2                      u961 7670                      u881 73AE  
                    u970 752E                      u890 7408                      u971 752A  
                    u891 7404                      u980 7558                      u981 7554  
                    u990 7586                      u991 7582                      _pad 7380  
  __size_of_WriteCmdXLCD 003E                      wreg 000FE8               _ChecarLEDs 77CC  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1021 6FF4  
                   l1015 7AA0                     l2000 7CD0                     l1018 7AA8  
                   l2010 7D04                     l2002 7CDE                     l2100 76DE  
                   l1044 750E                     l1052 717A                     l2020 7D26  
                   l2012 7D16                     l2004 7CF0                     l1029 725C  
                   l2110 76EA                     l2102 76E0                     l1062 6EBA  
                   l2006 7CF4                     l2120 771A                     l2112 76F0  
                   l2104 76E2                     l2040 7DDE                     l2032 7D42  
                   l2024 7D2E                     l2016 7D1E                     l2008 7D00  
                   l2200 729C                     l2130 7762                     l2122 772E  
                   l2114 7700                     l2106 76E4                     l2050 7E5E  
                   l2042 7E14                     l2034 7D96                     l1059 72AE  
                   l2204 77CC                     l2140 77AA                     l2132 7776  
                   l2124 7742                     l2116 7706                     l2108 76E6  
                   l1068 6FBC                     l2060 7F24                     l2044 7E22  
                   l2036 7DB8                     l2028 7D36                     l2142 77B0  
                   l2134 777C                     l2126 7748                     l2118 7714  
                   l2150 71C6                     l2070 7FA2                     l2054 7EA4  
                   l2046 7E30                     l2038 7DBA                     l2144 77C4  
                   l2136 7790                     l2128 775C                     l2152 71DA  
                   l2064 7F5C                     l2048 7E50                     l2056 7EB6  
                   l2080 7FC8                     l2160 72B8                     l2138 7796  
                   l2154 71EA                     l2170 710C                     l2082 7FEC  
                   l2066 7F80                     l2074 7FAE                     l2058 7EDA  
                   l2162 72C6                     l2180 6EC4                     l2156 71EE  
                   l2148 71C2                     l2172 711A                     l2076 7FBC  
                   l2068 7F8E                     l2164 72EC                     l2094 76D2  
                   l2182 6ED2                     l2174 711E                     l2166 70F4  
                   l1702 7138                     l1710 6F88                     l2350 7D68  
                   l2158 72B0                     l2184 6F5C                     l2096 76DA  
                   l2176 6F10                     l2168 70F8                     l2352 79D6  
                   l1704 7144                     l1712 6F94                     l1720 7380  
                   l2192 725E                     l2280 7312                     l2186 6F6C  
                   l1802 6EBC                     l2098 76DC                     l2178 6F28  
                   l1706 7156                     l1714 6F98                     l1730 73D2  
                   l1722 7390                     l1810 7AAA                     l2194 7270  
                   l2290 7346                     l2282 7316                     l2188 6F7E  
                   l1900 719E                     l1804 70B2                     l1708 715A  
                   l1716 6FB0                     l1732 73E6                     l1724 73A4  
                   l1820 7B1A                     l1812 7ABA                     l2196 7278  
                   l2292 734C                     l2284 731A                     l1902 71A4  
                   l1806 70B6                     l1742 6FBE                     l1734 73EA  
                   l1726 73B2                     l1830 7BAA                     l1822 7B22  
                   l1814 7ABC                     l2198 7280                     l2294 7358  
                   l2286 731E                     l1920 71BE                     l1912 71B0  
                   l1904 71A6                     l1808 70C6                     l1760 7626  
                   l1752 75E0                     l1736 7418                     l1728 73BE  
                   l1840 7C72                     l1824 7B28                     l1832 7C0E  
                   l1816 7AD6                     l2296 7364                     l2288 732A  
                   l1914 71B4                     l1906 71A8                     l1930 7008  
                   l1746 6F36                     l1850 7932                     l1770 7696  
                   l1762 7634                     l1754 75EC                     l1690 7458  
                   l1738 742C                     l1834 7C20                     l1842 7C82  
                   l1826 7B9E                     l1818 7B12                     l1916 71BA  
                   l1924 6EE4                     l1940 7022                     l1932 700A  
                   l1748 6F52                     l1852 7936                     l1772 76A8  
                   l1764 7646                     l1756 760A                     l1780 754A  
                   l1692 746A                     l1836 7C3E                     l1828 7BA4  
                   l1918 71BC                     l1950 7074                     l1942 7026  
                   l1934 700E                     l1926 6FF8                     l1790 720C  
                   l1870 79EC                     l1862 7992                     l1854 7952  
                   l1846 791A                     l1766 7674                     l1758 7612  
                   l1782 7558                     l1774 7510                     l1694 7474  
                   l1838 7C58                     l1960 708E                     l1952 7084  
                   l1944 7028                     l1936 7010                     l1928 7006  
                   l1792 7210                     l1880 7A72                     l1864 79A8  
                   l1856 7988                     l1848 792E                     l1768 7694  
                   l1784 7586                     l1776 752E                     l1696 7492  
                   l1688 7446                     l1890 7180                     l1970 70AA  
                   l1962 7092                     l1954 7086                     l1946 702C  
                   l1938 7014                     l1794 7224                     l1882 7A84  
                   l1874 7A22                     l1866 79B0                     l1858 798C  
                   l1786 75A6                     l1778 7536                     l1698 74C8  
                   l1892 7184                     l1964 70A0                     l1956 7088  
                   l1980 7048                     l1796 7252                     l1868 79B8  
                   l1788 75B8                     l1894 718A                     l1966 70A4  
                   l1958 708C                     l1990 7064                     l1982 704C  
                   l1974 7036                     l1798 7256                     l1878 7A60  
                   ?_pad 0011                     l1896 7198                     l1888 717C  
                   l1968 70A6                     l1992 7066                     l1984 704E  
                   l1976 7044                     l1898 719A                     l1994 706A  
                   l1986 7052                     l1978 7046                     l1988 7060  
                   l1998 7CAC                     STR_1 1015                     STR_2 1005  
                   u1000 7224                     u1001 7220                     u1010 7252  
                   u1011 724E                     u1020 70F2                     u1100 7952  
                   u1021 70EE                     u1101 794E                     u1110 7988  
                   u1030 7ABA                     u1111 7984                     u1031 7AB6  
                   u1120 79A4                     u1040 7AD6                     u1200 7DB8  
                   u1121 79A0                     u1041 7AD2                     u1201 7DB4  
                   u1130 7A5A                     u1050 7C20                     u1210 7DDE  
                   u1131 7A54                     u1051 7C1C                     u1211 7DDA  
                   u1300 775C                     u1140 7A5C                     u1060 7C3E  
                   u1220 7E22                     u1301 7758                     u1061 7C3A  
                   u1221 7E1E                     u1310 7776                     u1150 7A72  
                   u1070 7C58                     u1230 7E9E                     u1311 7772  
                   u1151 7A6E                     u1071 7C54                     u1231 7E98  
                   u1400 6F6C                     u1320 7790                     u1160 7A84  
                   u1080 7C72                     u1240 7EA0                     u1401 6F68  
                   u1321 778C                     u1161 7A80                     u1081 7C6E  
                   u1410 77DE                     u1170 7198                     u1330 77AA  
                   u1090 7C82                     u1250 7EB6                     u1411 77D6  
                   u1171 7194                     u1331 77A6                     u1091 7C7E  
                   u1251 7EB2                     u1340 77C4                     u1260 7EDA  
                   u1180 7CD0                     u1341 77C0                     u1261 7ED6  
                   u1181 7CCC                     _LATA 000F89                     u1510 7886  
                   u1430 77FE                     u1350 71DA                     u1270 7F80  
                   u1190 7DA8                     _LATB 000F8A                     u1511 787E  
                   u1431 77F6                     u1351 71D6                     u1271 7F7C  
                   u1191 7DA4                     u1280 772E                     u1360 720A  
                   u1281 772A                     u1361 7206                     u1530 78A4  
                   u1450 7820                     u1290 7742                     u1370 7308  
                   u1531 789C                     u1451 7818                     u1291 773E  
                   u1371 7304                     u1508 7866                     u1428 77E0  
                   u1380 710C                     u1381 7108                     u1550 78C4  
                   u1470 7844                     u1390 7136                     u1551 78BC  
                   u1471 783C                     u1391 7132                     u1608 790C  
                   u1528 7888                     u1448 7800                     u1617 76F6  
                   u1570 78E6                     u1490 7864                     u1571 78DE  
                   u1491 785C                     u1627 770C                     u1548 78A6  
                   u1468 7822                     u1637 70BC                     u1590 790A  
                   u1591 7902                     u1647 6EBE                     u1568 78C6  
                   u1488 7846                     u1588 78E8                     _dbuf 0068  
                   _atoi 791A                     _main 7312                     _prec 0064  
                   _nout 0060                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
                   _utoa 7AAA             _strResultado 0088   __size_of_WriteDataXLCD 003E  
                   prodh 000FF4                     prodl 000FF3                     start 1000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_pad 0017             _WriteCmdXLCD 6FF6            __CFG_PLLDIV$5 000000  
                  ?_atoi 0008            _conversionADC 6F5C            ?_SetDDRamAddr 0001  
                  ?_main 0001                    ?_utoa 001C          __end_of___lodiv 76D0  
        __end_of___lomod 75E0             vfpfcnvrt@fmt 003E             vfpfcnvrt@llu 0046  
                  _PORTD 000F83            __CFG_USBDIV$2 000000                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000          __end_of_initADC 6ED2          __end_of_initLCD 6F36  
        __end_of_initLED 6EE4           __CFG_EBTRB$OFF 000000                    _flags 0066  
                  _fputc 7446                    _fputs 7138          __end_of_isdigit 6FF6  
                  atoi@n 0015                    pad@fp 0011                    atoi@s 0008  
                  _width 0062                    _putch 6EBA          __end_of_isspace 725E  
                  tablat 000FF5                    utoa@d 001E                    utoa@i 003A  
                  utoa@n 0032                    utoa@p 002E                    utoa@w 0030  
                  status 000FD8          __end_of_sprintf 72B0         ___lodiv@dividend 0001  
        __initialization 6EFA             __end_of_atoi 7AAA             __end_of_main 7380  
           __end_of_utoa 7CAC         __end_of_BusyXLCD 71C2    __size_of_DelayPORXLCD 0016  
         ?_conversionADC 0001           ??_SetDDRamAddr 0001         __end_of_OpenXLCD 77CC  
                 ??_atoi 000A                   ??_main 0060                   ??_utoa 0026  
          __activetblptr 000002            _WriteDataXLCD 7034   conversionADC@resultado 0005  
       ___lodiv@quotient 0011              ?_ChecarLEDs 0001                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_fputc 0001  
                 ?_fputs 000A                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 ?_putch 0001            vfpfcnvrt@done 004E           __CFG_VREGEN$ON 000000  
       __end_of_delay_ms 70F4             _DelayPORXLCD 6EE4           __CFG_XINST$OFF 000000  
           vfprintf@cfmt 0058                   ___wmul 6F36           __CFG_STVREN$ON 000000  
              ??___lodiv 0011                ??___lomod 0011                   clear_0 6F00  
                 pad@buf 0013           ?_WriteDataXLCD 0001                   _strlen 6F88  
              ??_initADC 0001                ??_initLCD 0008                ??_initLED 0001  
          main@resultado 0097                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_isdigit 0003  
           __mediumconst 0000                ??_isspace 0003                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_putsXLCD 7138         __end_of_vfprintf 7312                   utoa@fp 001C  
              ??_sprintf 0060               __accesstop 0060  __end_of__initialization 6F06  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
    __size_of_ChecarLEDs 014E          ??_conversionADC 0003            __end_of_fputc 7510  
          __end_of_fputs 717C            __end_of_putch 6EBC                  ??_fputc 0005  
                ??_fputs 000E   __size_of_DelayFor18TCY 0008                  ??_putch 0001  
             __pbssBANK0 0060                ?_BusyXLCD 0001          WriteCmdXLCD@cmd 0001  
   __end_of_SetDDRamAddr 70B2                ?_OpenXLCD 0001        WriteDataXLCD@data 0001  
                ?___wmul 0001          ??_WriteDataXLCD 0001                  ?_strlen 0001  
              ?_delay_ms 0001       __size_of_vfpfcnvrt 0354         ___lomod@dividend 0001  
     __size_of_putrsXLCD 004A               ??_BusyXLCD 0001               ??_OpenXLCD 0006  
                __Hparam 0000                  __Lparam 0000            _DelayFor18TCY 6EBC  
        __size_of___wmul 0026                  ___lodiv 75E0                  ___lomod 7510  
              ?_putsXLCD 0002                ?_vfprintf 0052             __psmallconst 1004  
                __pcinit 6EFA          putrsXLCD@buffer 0002                  __ramtop 0800  
                __ptext0 7312                  __ptext1 725E                  __ptext2 72B0  
                __ptext3 7CAC                  __ptext4 7AAA                  __ptext5 7380  
                __ptext6 6F88                  __ptext7 7138                  __ptext8 7446  
                __ptext9 6EBA                  _initADC 6EC4          __size_of_strlen 0036  
                _initLCD 6F10                  _initLED 6ED2             __size_of_pad 00C6  
                _isdigit 6FBE                  _isspace 720C               ??_delay_ms 0005  
           ??_ChecarLEDs 0003                  atoi@neg 000E                  _sprintf 725E  
   end_of_initialization 6F06                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C        __end_of_vfpfcnvrt 8000           ?_DelayFor18TCY 0001  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_putsXLCD 0004       __end_of_ChecarLEDs 791A  
             ??_vfprintf 0058                  strlen@a 0003                  strlen@s 0001  
      __end_of_putrsXLCD 720C                _TRISEbits 000F96    __size_of_SetDDRamAddr 0040  
            vfpfcnvrt@ap 0040              vfpfcnvrt@fp 003C           __end_of___wmul 6F5C  
           _SetDDRamAddr 7072       SetDDRamAddr@DDaddr 0001           __end_of_strlen 6FBE  
    start_initialization 6EFA          ___lodiv@divisor 0009          ___lodiv@counter 0019  
            __end_of_pad 7446        __size_of_BusyXLCD 0046          ??_DelayFor18TCY 0001  
            vfprintf@fmt 0054        __size_of_OpenXLCD 00FC                 ??___wmul 0005  
          ?_WriteCmdXLCD 0001         __CFG_LPT1OSC$OFF 000000    __end_of_conversionADC 6F88  
               ??_strlen 0003            __pcstackBANK0 008D        __size_of_delay_ms 0042  
         putsXLCD@buffer 0002           ??_WriteCmdXLCD 0001                 ?___lodiv 0001  
               ?___lomod 0001        __size_of_putsXLCD 0044    __end_of_WriteDataXLCD 7072  
      __size_of_vfprintf 0062                 ?_initADC 0001          ___lomod@divisor 0009  
               ?_initLCD 0001                 ?_initLED 0001              __smallconst 1004  
        ___lomod@counter 0011                 ?_isdigit 0001                 ?_isspace 0001  
               ?_sprintf 005A           __size_of_fputc 00CA           __size_of_fputs 0044  
         __size_of_putch 0002           ___wmul@product 0005                 _LATAbits 000F89  
               _LATBbits 000F8A                 _LATEbits 000F8D                delay_ms@n 0001  
          ?_DelayPORXLCD 0001          OpenXLCD@lcdtype 0007         __CFG_WDTPS$32768 000000  
              _vfpfcnvrt 7CAC               _ADCON0bits 000FC2        ___wmul@multiplier 0001  
              _putrsXLCD 71C2                 _BusyXLCD 717C           ??_DelayPORXLCD 0006  
               _OpenXLCD 76D0                 __Hrparam 0000               vfprintf@ap 0056  
               __Lrparam 0000               vfprintf@fp 0052         __size_of___lodiv 00F0  
       __size_of___lomod 00D0               ?_vfpfcnvrt 003C               sprintf@fmt 005C  
             ?_putrsXLCD 0002         __size_of_initADC 000E         __size_of_initLCD 0026  
       __size_of_initLED 0012                 _atoi$980 0012                 _atoi$978 0010  
               _atoi$979 0014         __size_of_isdigit 0038                 _delay_ms 70B2  
       __size_of_isspace 0052            ChecarLEDs@res 0001                 __ptext10 7510  
               __ptext11 75E0                 __ptext20 7034                 __ptext12 791A  
               __ptext21 76D0                 __ptext13 720C                 __ptext30 77CC  
               __ptext22 6FF6                 __ptext14 6FBE                 __ptext23 7072  
               __ptext15 6F36                 __ptext24 6EE4                 __ptext16 70F4  
               __ptext25 70B2                 __ptext17 6ED2                 __ptext26 717C  
               __ptext18 6F10                 __ptext27 6EBC                 __ptext19 71C2  
               __ptext28 6EC4                 __ptext29 6F5C     __end_of_WriteCmdXLCD 7034  
       __size_of_sprintf 0052            __size_of_atoi 0190            __size_of_main 006E  
          __size_of_utoa 0202                 _putsXLCD 70F4                 _vfprintf 72B0  
            _isspace$996 0007    __CFG_CPUDIV$OSC1_PLL2 000000                 isdigit@c 0001  
              sprintf@ap 008F                 isspace@c 0001    __end_of_DelayFor18TCY 6EC4  
            ??_vfpfcnvrt 0042            _vfpfcnvrt$523 0050                 sprintf@f 0091  
               sprintf@s 005A     __end_of_DelayPORXLCD 6EFA              ??_putrsXLCD 0004  
     __CFG_FOSC$HSPLL_HS 000000   __size_of_conversionADC 002C  
