

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 19 15:09:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _INTCON2bits	set	4081
    51  0000                     _INTCONbits	set	4082
    52  0000                     _LATBbits	set	3978
    53  0000                     _TRISBbits	set	3987
    54  0000                     _OSCCON	set	4051
    55                           
    56                           ; #config settings
    57  0000                     
    58                           	psect	cinit
    59  000084                     __pcinit:
    60                           	opt callstack 0
    61  000084                     start_initialization:
    62                           	opt callstack 0
    63  000084                     __initialization:
    64                           	opt callstack 0
    65                           
    66                           ; Clear objects allocated to COMRAM (1 bytes)
    67  000084  6A01               	clrf	__pbssCOMRAM& (0+255),c
    68  000086                     end_of_initialization:
    69                           	opt callstack 0
    70  000086                     __end_of__initialization:
    71                           	opt callstack 0
    72  000086  9002               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    73  000088  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    74  00008A  0100               	movlb	0
    75  00008C  EF2A  F000         	goto	_main	;jump to C main() function
    76                           
    77                           	psect	bssCOMRAM
    78  000001                     __pbssCOMRAM:
    79                           	opt callstack 0
    80  000001                     _value:
    81                           	opt callstack 0
    82  000001                     	ds	1
    83                           
    84                           	psect	cstackCOMRAM
    85  000000                     __pcstackCOMRAM:
    86                           	opt callstack 0
    87  000000                     
    88                           ; 1 bytes @ 0x0
    89 ;;
    90 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    91 ;;
    92 ;; *************** function _main *****************
    93 ;; Defined at:
    94 ;;		line 18 in file "main.c"
    95 ;; Parameters:    Size  Location     Type
    96 ;;		None
    97 ;; Auto vars:     Size  Location     Type
    98 ;;		None
    99 ;; Return value:  Size  Location     Type
   100 ;;                  1    wreg      void 
   101 ;; Registers used:
   102 ;;		wreg, status,2, cstack
   103 ;; Tracked objects:
   104 ;;		On entry : 0/0
   105 ;;		On exit  : 0/0
   106 ;;		Unchanged: 0/0
   107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   108 ;;      Params:         0       0       0       0       0       0       0       0       0
   109 ;;      Locals:         0       0       0       0       0       0       0       0       0
   110 ;;      Temps:          0       0       0       0       0       0       0       0       0
   111 ;;      Totals:         0       0       0       0       0       0       0       0       0
   112 ;;Total ram usage:        0 bytes
   113 ;; Hardware stack levels required when called:    2
   114 ;; This function calls:
   115 ;;		_InterruptInit
   116 ;; This function is called by:
   117 ;;		Startup code after reset
   118 ;; This function uses a non-reentrant model
   119 ;;
   120                           
   121                           	psect	text0
   122  000054                     __ptext0:
   123                           	opt callstack 0
   124  000054                     _main:
   125                           	opt callstack 29
   126  000054                     
   127                           ;main.c: 20:     OSCCON = 0x72;
   128  000054  0E72               	movlw	114
   129  000056  6ED3               	movwf	211,c	;volatile
   130  000058                     
   131                           ;main.c: 21:     InterruptInit();
   132  000058  EC48  F000         	call	_InterruptInit	;wreg free
   133  00005C                     
   134                           ;main.c: 22:     TRISBbits.RB1 = 0;
   135  00005C  9293               	bcf	147,1,c	;volatile
   136  00005E                     
   137                           ;main.c: 23:     TRISBbits.RB2 = 0;
   138  00005E  9493               	bcf	147,2,c	;volatile
   139  000060                     l736:
   140                           
   141                           ;main.c: 26:     {;main.c: 27:         if(value){
   142  000060  5001               	movf	_value^0,w,c
   143  000062  B4D8               	btfsc	status,2,c
   144  000064  EF36  F000         	goto	u21
   145  000068  EF38  F000         	goto	u20
   146  00006C                     u21:
   147  00006C  EF3C  F000         	goto	l28
   148  000070                     u20:
   149  000070                     
   150                           ;main.c: 28:             LATBbits.LB1 = 1;
   151  000070  828A               	bsf	138,1,c	;volatile
   152                           
   153                           ;main.c: 29:             LATBbits.LB2 = 0;
   154  000072  948A               	bcf	138,2,c	;volatile
   155                           
   156                           ;main.c: 30:         }
   157  000074  EF30  F000         	goto	l736
   158  000078                     l28:
   159                           
   160                           ;main.c: 33:             LATBbits.LB1 = 0;
   161  000078  928A               	bcf	138,1,c	;volatile
   162                           
   163                           ;main.c: 34:             LATBbits.LB2 = 1;
   164  00007A  848A               	bsf	138,2,c	;volatile
   165  00007C  EF30  F000         	goto	l736
   166  000080  EF07  F000         	goto	start
   167  000084                     __end_of_main:
   168                           	opt callstack 0
   169                           
   170 ;; *************** function _InterruptInit *****************
   171 ;; Defined at:
   172 ;;		line 40 in file "main.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;		None
   175 ;; Auto vars:     Size  Location     Type
   176 ;;		None
   177 ;; Return value:  Size  Location     Type
   178 ;;                  1    wreg      void 
   179 ;; Registers used:
   180 ;;		None
   181 ;; Tracked objects:
   182 ;;		On entry : 0/0
   183 ;;		On exit  : 0/0
   184 ;;		Unchanged: 0/0
   185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   186 ;;      Params:         0       0       0       0       0       0       0       0       0
   187 ;;      Locals:         0       0       0       0       0       0       0       0       0
   188 ;;      Temps:          0       0       0       0       0       0       0       0       0
   189 ;;      Totals:         0       0       0       0       0       0       0       0       0
   190 ;;Total ram usage:        0 bytes
   191 ;; Hardware stack levels used:    1
   192 ;; Hardware stack levels required when called:    1
   193 ;; This function calls:
   194 ;;		Nothing
   195 ;; This function is called by:
   196 ;;		_main
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text1
   201  000090                     __ptext1:
   202                           	opt callstack 0
   203  000090                     _InterruptInit:
   204                           	opt callstack 29
   205  000090                     
   206                           ;main.c: 41:     INTCONbits.INT0E = 1;
   207  000090  88F2               	bsf	242,4,c	;volatile
   208                           
   209                           ;main.c: 42:     INTCON2bits.INTEDG0 = 1;
   210  000092  8CF1               	bsf	241,6,c	;volatile
   211                           
   212                           ;main.c: 43:     INTCONbits.INT0F = 0;
   213  000094  92F2               	bcf	242,1,c	;volatile
   214                           
   215                           ;main.c: 44:     INTCONbits.GIE = 1;
   216  000096  8EF2               	bsf	242,7,c	;volatile
   217  000098  0012               	return		;funcret
   218  00009A                     __end_of_InterruptInit:
   219                           	opt callstack 0
   220                           
   221 ;; *************** function _ISR *****************
   222 ;; Defined at:
   223 ;;		line 48 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0
   232 ;; Tracked objects:
   233 ;;		On entry : 0/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   237 ;;      Params:         0       0       0       0       0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0       0       0       0       0
   239 ;;      Temps:          0       0       0       0       0       0       0       0       0
   240 ;;      Totals:         0       0       0       0       0       0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels used:    1
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		Interrupt level 2
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	intcode
   251  000008                     __pintcode:
   252                           	opt callstack 0
   253  000008                     _ISR:
   254                           	opt callstack 29
   255                           
   256                           ;incstack = 0
   257  000008  8202               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   258  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   259                           
   260                           	psect	intcode_body
   261  000012                     __pintcode_body:
   262                           	opt callstack 29
   263  000012                     int_func:
   264                           	opt callstack 29
   265  000012  0006               	pop		; remove dummy address from shadow register refresh
   266  000014                     
   267                           ;main.c: 51:   if(INTCONbits.INT0IF==1)
   268  000014  A2F2               	btfss	242,1,c	;volatile
   269  000016  EF0F  F000         	goto	i2u3_41
   270  00001A  EF11  F000         	goto	i2u3_40
   271  00001E                     i2u3_41:
   272  00001E  EF28  F000         	goto	i2l44
   273  000022                     i2u3_40:
   274  000022                     
   275                           ;main.c: 52:   {;main.c: 53:     if(value == 0){
   276  000022  5001               	movf	_value^0,w,c
   277  000024  A4D8               	btfss	status,2,c
   278  000026  EF17  F000         	goto	i2u4_41
   279  00002A  EF19  F000         	goto	i2u4_40
   280  00002E                     i2u4_41:
   281  00002E  EF1D  F000         	goto	i2l746
   282  000032                     i2u4_40:
   283  000032                     
   284                           ;main.c: 54:         value = 1;
   285  000032  0E01               	movlw	1
   286  000034  6E01               	movwf	_value^0,c
   287                           
   288                           ;main.c: 55:     }
   289  000036  EF27  F000         	goto	i2l750
   290  00003A                     i2l746:
   291  00003A  0401               	decf	_value^0,w,c
   292  00003C  A4D8               	btfss	status,2,c
   293  00003E  EF23  F000         	goto	i2u5_41
   294  000042  EF25  F000         	goto	i2u5_40
   295  000046                     i2u5_41:
   296  000046  EF27  F000         	goto	i2l750
   297  00004A                     i2u5_40:
   298  00004A                     
   299                           ;main.c: 57:         value = 0;
   300  00004A  0E00               	movlw	0
   301  00004C  6E01               	movwf	_value^0,c
   302  00004E                     i2l750:
   303                           
   304                           ;main.c: 59:     INTCONbits.INT0IF=0;
   305  00004E  92F2               	bcf	242,1,c	;volatile
   306  000050                     i2l44:
   307  000050  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   308  000052  0011               	retfie		f
   309  000054                     __end_of_ISR:
   310                           	opt callstack 0
   311  0000                     
   312                           	psect	rparam
   313  0000                     
   314                           	psect	temp
   315  000002                     btemp:
   316                           	opt callstack 0
   317  000002                     	ds	1
   318  0000                     int$flags	set	btemp
   319  0000                     wtemp8	set	btemp+1
   320  0000                     ttemp5	set	btemp+1
   321  0000                     ttemp6	set	btemp+4
   322  0000                     ttemp7	set	btemp+8
   323                           tosu	equ	0xFFF
   324                           tosh	equ	0xFFE
   325                           tosl	equ	0xFFD
   326                           stkptr	equ	0xFFC
   327                           pclatu	equ	0xFFB
   328                           pclath	equ	0xFFA
   329                           pcl	equ	0xFF9
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           prodh	equ	0xFF4
   335                           prodl	equ	0xFF3
   336                           indf0	equ	0xFEF
   337                           postinc0	equ	0xFEE
   338                           postdec0	equ	0xFED
   339                           preinc0	equ	0xFEC
   340                           plusw0	equ	0xFEB
   341                           fsr0h	equ	0xFEA
   342                           fsr0l	equ	0xFE9
   343                           wreg	equ	0xFE8
   344                           indf1	equ	0xFE7
   345                           postinc1	equ	0xFE6
   346                           postdec1	equ	0xFE5
   347                           preinc1	equ	0xFE4
   348                           plusw1	equ	0xFE3
   349                           fsr1h	equ	0xFE2
   350                           fsr1l	equ	0xFE1
   351                           bsr	equ	0xFE0
   352                           indf2	equ	0xFDF
   353                           postinc2	equ	0xFDE
   354                           postdec2	equ	0xFDD
   355                           preinc2	equ	0xFDC
   356                           plusw2	equ	0xFDB
   357                           fsr2h	equ	0xFDA
   358                           fsr2l	equ	0xFD9
   359                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _InterruptInit
 ---------------------------------------------------------------------------------
 (1) _InterruptInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InterruptInit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       1       1        1.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       1      20        0.0%
DATA                 0      0       1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 19 15:09:27 2020

                     l35 0098                       l28 0078                       u20 0070  
                     u21 006C              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000                      l720 0090  
                    l730 0058                      l732 005C                      l734 005E  
                    l736 0060                      l728 0054                      l738 0070  
           __CFG_CPB$OFF 000000                      _ISR 0008             __CFG_LVP$OFF 000000  
                   ?_ISR 0000             __CFG_WDT$OFF 000000                     i2l44 0050  
                   _main 0054                     btemp 0002                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_ISR 0000            __CFG_PLLDIV$5 000000                    ?_main 0000  
                  i2l740 0014                    i2l750 004E                    i2l742 0022  
                  i2l744 0032                    i2l746 003A                    i2l748 004A  
          __CFG_USBDIV$2 000000            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _value 0001                    ttemp5 0003  
                  ttemp6 0006                    ttemp7 000A                    status 000FD8  
                  wtemp8 0003          __initialization 0084             __end_of_main 0084  
                 ??_main 0000            __activetblptr 000000                   _OSCCON 000FD3  
                 i2u3_40 0022                   i2u3_41 001E                   i2u4_40 0032  
                 i2u4_41 002E                   i2u5_40 004A                   i2u5_41 0046  
         __CFG_VREGEN$ON 000000           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
 __size_of_InterruptInit 000A               __accesstop 0060  __end_of__initialization 0086  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0000  
          _InterruptInit 0090           ?_InterruptInit 0000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0084                  __ramtop 0800  
                __ptext0 0054                  __ptext1 0090             __size_of_ISR 004C  
         __pintcode_body 0012     end_of_initialization 0086                  int_func 0012  
              _TRISBbits 000F93          ??_InterruptInit 0000      start_initialization 0084  
            __end_of_ISR 0054         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0001  
              __pintcode 0008                 _LATBbits 000F8A         __CFG_WDTPS$32768 000000  
            _INTCON2bits 000FF1                 __Hrparam 0000                 __Lrparam 0000  
  __end_of_InterruptInit 009A            __size_of_main 0030                 int$flags 0002  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2                 intlevel2 0000  
     __CFG_FOSC$HSPLL_HS 000000  
